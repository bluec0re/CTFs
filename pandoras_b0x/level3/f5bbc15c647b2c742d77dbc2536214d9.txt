===========================================================================
 * ROP gadgets generated by ROPEME * 
===========================================================================
 + Binary info
---------------------------------------------------------------------------
hash: f5bbc15c647b2c742d77dbc2536214d9
name: level3
arch: i386
type: ELF
base address: 0x8048140
code size: 405164
code offset: 0x140
gadget depth: 6
gadget count: 4377
---------------------------------------------------------------------------
 + Unique gadgets: (offset : instructions)
---------------------------------------------------------------------------
0x00000040 : ret
0x0005211a : ret 1
0x00050cb4 : ret 2
0x0000e18c : ret 3
0x0000598d : ret 4
0x00015a81 : ret 7
0x0000d6fb : ret 8
0x00000fb5 : ret 0
0x000025f7 : jmp eax
0x0002cad9 : ret 0xc
0x0005e8ec : jmp ecx
0x000627bd : jmp edi
0x0003c4ef : jmp edx
0x00022e67 : call esi
0x00029372 : call edi
0x00019044 : call ecx
0x00023093 : call ebx
0x00000057 : call eax
0x000291ba : ret 0xb8
0x0000f97e : ret 0x8b
0x00000094 : call edx
0x00032dba : ret 0x6a
0x0000a8aa : ret 0x16
0x0005d62b : ret 0x10
0x00009dd2 : ret 0x14
0x0005f257 : ret 0x19
0x0001ff61 : jmp [ebx]
0x00008159 : jmp [ecx]
0x00028a82 : jmp [edx]
0x00054853 : jmp [edi]
0x00011301 : jmp [eax]
0x00034cff : call [edi]
0x0004dc4c : call [ecx]
0x00000db1 : call [ebx]
0x0000864a : call [eax]
0x00000be0 : call [esi]
0x000608ff : int3 ; ret
0x00000059 : leave ; ret
0x000222e6 : popfd ; ret
0x0003c37c : pop ds; ret
0x0004fbf1 : not eax; ret
0x00022bff : inc eax; ret
0x00060646 : pop esp; ret
0x00000830 : pop ebp; ret
0x00009571 : dec esp; ret
0x00051596 : inc ebp; ret
0x0000bf8e : pop ebx; ret
0x00009590 : inc esp; ret
0x00060586 : dec eax; ret
0x0000aadc : pop edi; ret
0x00022bb9 : pop esi; ret
0x000051e3 : pushal ; ret
0x00060696 : pop eax; ret
0x00000bb9 : dec ecx; ret
0x0000bf66 : pop edx; ret
0x0000a683 : dec esi; ret
0x000090b1 : dec ebx; ret
0x0000ed01 : push esp; ret
0x00060636 : push eax; ret
0x0000c6e0 : int 0x80; ret
0x0003c4ee : int3 ; jmp edx
0x00038e1d : call [ebx + 4]
0x00037425 : call [edi + 4]
0x0001c9e1 : call [eax + 8]
0x0000598c : pop ebp; ret 4
0x0001f319 : call [ecx + 4]
0x00000722 : call [ebp + 8]
0x000244d3 : inc [ecx]; ret
0x000347ed : call [esi + 4]
0x0000d6fa : pop ebp; ret 8
0x00016168 : jmp [edi + ecx]
0x000132b7 : add bh, al; ret
0x00023b3c : mov dh, dh; ret
0x000320b5 : add eax, 0; ret
0x00000fe4 : add cl, al; ret
0x0000b758 : add bh, dh; ret
0x00009fcd : adc dh, dh; ret
0x00019cc0 : jmp [edi + 0xf]
0x00004d05 : add dh, dh; ret
0x0000a7b1 : add cl, ch; ret
0x00018a74 : jmp [esi + 0xf]
0x00023d87 : add al, ch; ret
0x000469d2 : add bl, ch; ret
0x00049179 : jmp [ebp + 0xf]
0x0000018c : add cl, cl; ret
0x000369a6 : into ; call ebx
0x0000003e : add dh, bl; ret
0x0001e6da : call [esi + 0xc]
0x0000327c : pop ebp; jmp eax
0x0005f241 : jmp [esi + 0x3d]
0x0002cad8 : pop ebp; ret 0xc
0x0001f04e : call [ecx + 0xc]
0x000158e2 : call [ebx + 0xf]
0x0001f1c3 : call [edx + 0xc]
0x0003f2c3 : call [edx + edi]
0x000025b1 : call [eax + 0xc]
0x0001eee9 : call [edi + 0xc]
0x0002f6bb : pop es; call eax
0x00004d7e : add al, 0xc; ret
0x0004667a : call [ebp + 0xc]
0x0001e8ff : call [ecx + 0x40]
0x0005df6c : call [edx + 0x52]
0x0001ee5e : call [edx + 0x38]
0x00012cce : call [ecx + 0x1c]
0x0005021a : add ecx, ecx; ret
0x00002d8d : call [eax + 0x34]
0x00004f34 : add al, 0x38; ret
0x0000ac1b : mov edi, edx; ret
0x0001f656 : call [edi + 0x18]
0x0002d948 : xor al, 0x89; ret
0x0001e9e0 : call [eax + 0x40]
0x00022a1f : call [esi + 0x57]
0x0003c0d7 : adc al, 0x39; ret
0x0000287d : call [eax + 0x18]
0x0000b3ab : add al, 0x5d; ret
0x00020923 : call [ecx + 0x38]
0x000114da : call [ebp + 0x18]
0x000006db : call [ebp + 0x14]
0x0001e9b9 : call [edx + 0x48]
0x0002a091 : mov dh, 0xc0; ret
0x0005f2b8 : add esp, 0xc; ret
0x0002045d : call [edi + 0x40]
0x0002e21f : call [esi + 0x30]
0x000608fe : mov esp, ecx; ret
0x0000395e : call [eax + 0x2c]
0x000320b4 : sub eax, [0]; ret
0x000203e9 : call [eax + 0x3c]
0x00020196 : call [eax + 0x20]
0x00021439 : call [eax + 0x44]
0x0002836c : mov eax, edx; ret
0x000114a5 : call [esi + 0x53]
0x00001e06 : call [eax + 0x30]
0x00060c1e : sbb al, 0x24; ret
0x0005ca1e : call [edi + 0x57]
0x00023a3e : add eax, ecx; ret
0x00032c00 : add al, 0xc9; ret
0x000000cd : leave ; rep ; ret
0x0005c795 : call [esi + 0x56]
0x000132b0 : popal ; cld ; ret
0x000026a0 : call [edx + 0x24]
0x0001fc14 : call [eax + 0x48]
0x0001f5de : call [edx + 0x40]
0x0001f970 : call [eax + 0x24]
0x00023cdf : call [ebp + 0x31]
0x0001f5b6 : call [edi + 0x10]
0x00025b7c : add al, 0x24; ret
0x00056b9a : sbb al, 0x89; ret
0x00002623 : call [eax + 0x10]
0x0004ff3f : xor eax, eax; ret
0x0002a379 : mov [ecx], 1; ret
0x0005eef8 : add bh, dh; ret 0
0x0001ec6d : call [ecx + 0x18]
0x0002954a : call [ebp + 0x10]
0x00012b6c : call [edi + 0x1c]
0x00027de5 : sub al, 0x83; ret
0x0002853d : leave ; nop ; ret
0x0001ea28 : adc al, 0x89; ret
0x0000585a : add al, 0x83; ret
0x0001d9b1 : call [edx + 0x18]
0x0000e5c6 : add al, 0x89; ret
0x0000e824 : adc al, 0x83; ret
0x00001f83 : call [eax + 0x1c]
0x0005d62a : pop ebp; ret 0x10
0x0002e5d7 : pop ebp; ret 0x14
0x000202a2 : call [eax + 0x38]
0x000044d7 : add al, 0xe8; ret
0x0005cedc : call [edi + ebx*4]
0x000316c3 : add bh, [ecx]; ret
0x0000b060 : add [eax], al; ret
0x0002a042 : adc [ecx], ah; ret
0x0005e7ee : pop ebx; nop ; ret
0x0004ea5a : xchg eax, edx; ret
0x00013ade : call [ecx + edi*4]
0x0005e307 : add esp, 0x2c; ret
0x00002e85 : call [edi + esi*2]
0x0002854c : dec ecx; nop ; ret
0x00060b9b : add esp, 0x1c; ret
0x0002a090 : movzx eax, al; ret
0x00028826 : xchg eax, esp; ret
0x00005259 : adc [ecx], bh; ret
0x0003588c : adc [ecx], ch; ret
0x00004e5a : sbb ch, [ecx]; ret
0x00059ba2 : xchg eax, edi; ret
0x0001f45d : call [ebx + ecx*4]
0x00013716 : call [ecx + edx*4]
0x000320d2 : pop eax; jmp [eax]
0x000079b0 : xchg eax, ebp; ret
0x0000ebe3 : sub al, [ecx]; ret
0x0005cffc : call [esi + ebx*4]
0x00032020 : add esp, 0x3c; ret
0x0001dd12 : add al, [ecx]; ret
0x000206df : add [ecx], ch; ret
0x0003eedc : call [eax + edx*4]
0x0000b7dc : add [ecx], al; ret
0x0000086d : add [ecx], bh; ret
0x0002852c : lea esi, [esi]; ret
0x000601c8 : add esp, 0x10c; ret
0x0002a37a : add [ecx], eax; ret
0x00030d23 : add [ecx], esp; ret
0x0000c3d7 : add [ecx], edi; ret
0x00031691 : mov [edx], eax; ret
0x000024e6 : int1 ; pop ebp; ret
0x00001c69 : add [eax], edi; ret
0x000568b6 : adc edi, [ecx]; ret
0x00021e72 : add al, 0xf7; ret 0
0x00047bf0 : pop es; leave ; ret
0x00060c19 : mov ecx, [esp]; ret
0x00005059 : add ebp, [ecx]; ret
0x0003b79c : sub eax, [edx]; ret
0x00060c1d : mov ebx, [esp]; ret
0x00047c20 : div edi; leave ; ret
0x000320b3 : sub eax, gs:[0]; ret
0x00004e75 : inc ebp;  ; call edx
0x0002412b : mov [ecx], 0x83; ret
0x00001e43 : pop esi; pop ebp; ret
0x000627bb : add al, 0xe8; jmp edi
0x00060611 : inc edx; dec esp; ret
0x0005e674 : add eax, ebx; jmp eax
0x00060645 : inc eax; pop esp; ret
0x0000bf8d : pop ecx; pop ebx; ret
0x0000ab04 : inc eax; pop edi; ret
0x0003c4ed : mov esp, ecx; jmp edx
0x00022bb8 : pop edi; pop esi; ret
0x00000094 : call edx; leave ; ret
0x0005f3ef : add edx, ebx; jmp edx
0x00021fb6 : pop esi; pop edi; ret
0x00050282 : add al, ch; clc ; ret
0x00000b63 : pop edi; pop ebp; ret
0x0002853c : add cl, cl; nop ; ret
0x00022bfe : inc eax; inc eax; ret
0x00001004 : pop ebx; pop ebp; ret
0x00001859 : neg eax; pop ebp; ret
0x00060695 : inc eax; pop eax; ret
0x00000057 : call eax; leave ; ret
0x0005e8ea : add ecx, ebx; jmp ecx
0x00060585 : inc eax; dec eax; ret
0x000605f5 : inc eax; dec esp; ret
0x000447d9 : mov ch, bh; jmp [ecx]
0x0000bf65 : pop ebx; pop edx; ret
0x00060629 : push eax; dec esp; ret
0x0000b55b : jmp [esi + 0xffffffc7]
0x000283a8 : int 0x80; pop ebp; ret
0x0002f46a : pop es; or cl, ch; ret
0x0002816b : jmp [ebp + 0xffffffa1]
0x0000133c : jmp [ebp + 0xffffffc7]
0x0004af51 : jmp [ebp + 0xffffffe9]
0x00000836 : jmp [ebp + 0xffffff83]
0x00017af0 : jmp [esi + 0xffffffbf]
0x00044521 : adc al, 0x24; call edi
0x00000b8d : jmp [esi + 0xffffff90]
0x0003a959 : dec [esi + edi*2]; ret
0x00016c1d : jmp [esi + 0xffffff89]
0x00032ce1 : sbb al, 0x24; call esi
0x00022e65 : add al, 0x24; call esi
0x0005fdfd : jmp [esi + 0xffffff81]
0x00060635 : inc eax; push eax; ret
0x00008d20 : adc al, 0x24; call eax
0x00030f2e : add al, 0x24; call ebx
0x0005b924 : jmp [esi + 0xffffffbe]
0x0001c853 : sbb al, 0x24; call ecx
0x00003c97 : jmp [esi + 0xffffff83]
0x0002ddd0 : jmp [esi + 0xffffff85]
0x00047893 : jmp [esi + 0xffffffa5]
0x00043c4e : sbb al, 0x24; call edx
0x000606a5 : inc eax; push esp; ret
0x00000e0b : add al, 0x24; call edx
0x0004b559 : jmp [esi + 0xffffffba]
0x00060389 : mov [esp], 1; call ecx
0x000293c9 : sbb al, 0x24; call edi
0x000015fa : jmp [ebp + 0xffffff8b]
0x00032a12 : add al, 0x24; call edi
0x00004788 : jmp [ebp + 0xffffff89]
0x00060b92 : mov [esp], 1; call eax
0x0002a265 : call [esi + 0xffffff89]
0x000115ad : call [ebp + 0xffffffd8]
0x0000abfa : sub eax, [esp + 4]; ret
0x0001d3b9 : call [ebx + 0xffffff81]
0x00035572 : call [ebp + 0xffffffcc]
0x0005eebf : call [ebp + 0xffffffb9]
0x00046113 : call [ebp + 0xfffffff0]
0x0000c97f : call [ebp + 0xffffffb8]
0x0003846a : call [ebp + 0xffffffd4]
0x0002838a : mov gs:[0x68], ecx; ret
0x00038e8d : call [ebp + 0xffffffe4]
0x0004fb4a : sub esp, 4; leave ; ret
0x00003fdd : mov dh, 1; pop ebp; ret
0x00000113 : call [ebp + 0xffffff89]
0x000000cc : add ecx, ecx; rep ; ret
0x0003b67c : add eax, 0x100768d; ret
0x00036337 : call [ebp + 0xffffffc4]
0x0001089a : call [ebx + 0xffffff89]
0x00000e24 : add eax, 0x18; call eax
0x00030cde : pop ebx; pop ebp; ret 8
0x0000598b : pop ebx; pop ebp; ret 4
0x00016dc1 : call [ecx + 0xffffff89]
0x00034859 : call [ebp + 0xffffffd0]
0x0000d6f9 : pop edi; pop ebp; ret 8
0x0000cf67 : pop edi; pop ebp; ret 4
0x0006038e : add [eax], al; call ecx
0x0003297d : call [ebp + 0xffffffe0]
0x000320a0 : mov eax, [eax + 4]; ret
0x0005e08a : sub esp, 8; leave ; ret
0x0000abfb : inc esp; and al, 4; ret
0x0002bfcc : inc esp; and al, 8; ret
0x000396e9 : call [ebp + 0xffffffdc]
0x00000e27 : add [eax], al; call eax
0x0006283f : call [ebx + 0xffffff83]
0x0001010d : push ebp; aam 0x89; ret
0x000029ed : sub eax, [edx + 8]; ret
0x00015ea4 : call [edx + 0xffffff89]
0x0002f6ba : add eax, [edi]; call eax
0x000293c8 : mov [esp], ebx; call edi
0x00060e33 : mov eax, 8; pop ebx; ret
0x0000a681 : add cl, ch; dec esi; ret
0x0005d384 : add eax, [ebx]; call eax
0x0003466d : pop ds; or eax, edx; ret
0x00060e43 : mov eax, 2; pop ebx; ret
0x00032ce0 : mov [esp], ebx; call esi
0x00000e0a : mov [esp], eax; call edx
0x0003c261 : add eax, 0; pop ebp; ret
0x0001c852 : mov [esp], ebx; call ecx
0x0003684d : mov [esp], ecx; call ebx
0x00030f2d : mov [esp], eax; call ebx
0x000090af : add al, ch; dec ebx; ret
0x0003080e : add eax, [edx]; call eax
0x00043c4d : mov [esp], ebx; call edx
0x00060e27 : mov eax, 4; pop ebx; ret
0x0002f9ff : add eax, [ecx]; call eax
0x00022e64 : mov [esp], eax; call esi
0x00032eac : mov [esp], ecx; call esi
0x00032a11 : mov [esp], eax; call edi
0x00044520 : mov [esp], edx; call edi
0x00008d1f : mov [esp], edx; call eax
0x0005e7fb : add esp, 8; pop ebx; ret
0x00051594 : add dh, al; inc ebp; ret
0x000233b7 : mov [esp], edi; call esi
0x000231f8 : mov [esp], edi; call ebx
0x000366f1 : add al, 0x24; call [ebx]
0x0001dfe8 : pop esi; pop ebp; jmp eax
0x0001e98f : push [esi + ebp + 1]; ret
0x0000b035 : add bl, [ebx + 0x5d]; ret
0x00003e7a : mov eax, edx; leave ; ret
0x00015a7e : inc esp; and al, 8; ret 7
0x00017edf : xor [edi + 0x5d], bl; ret
0x00004013 : inc edx; or al, 0x5d; ret
0x00050218 : add [edx], 1; leave ; ret
0x0005be22 : sbb [ebx + 0x5d], bl; ret
0x00028f38 : pop ebp; or al, 0xb8; ret
0x0002baca : add [eax + 0x29], dh; ret
0x0000119c : adc [ebx + 0x5d], bl; ret
0x0000672e : add [ebx + 0x5d], bl; ret
0x0000327b : pop ebx; pop ebp; jmp eax
0x00011c74 : xor eax, eax; leave ; ret
0x0003b170 : inc ebx; or al, 0xeb; ret
0x0002cad7 : pop edi; pop ebp; ret 0xc
0x0005e884 : mov [ecx + 0x2070], 4; ret
0x0000aeb2 : add [eax + 0x5f], eax; ret
0x0000ac1a : pop esi; mov edi, edx; ret
0x00027de4 : inc ebx; sub al, 0x83; ret
0x0000b0a7 : add ebx, [ebx + 0x5d]; ret
0x00050219 : add al, [ecx]; leave ; ret
0x00002b67 : mov eax, [eax + 0x34]; ret
0x00060634 : mov eax, [eax + 0x50]; ret
0x00021fb5 : add ebx, [esi + 0x5f]; ret
0x00032bff : inc eax; add al, 0xc9; ret
0x000366f0 : mov [esp], eax; call [ebx]
0x00060628 : mov [eax + 0x4c], edx; ret
0x00060584 : mov eax, [eax + 0x48]; ret
0x0001da53 : add [ebx + 0x5d], ebx; ret
0x00060644 : mov eax, [eax + 0x5c]; ret
0x0000aada : xor eax, eax; pop edi; ret
0x0004fbef : sbb eax, eax; not eax; ret
0x0004427a : mov eax, [eax + 0x28]; ret
0x0005d36d : lea esi, [esi]; call [esi]
0x0000e823 : inc ebx; adc al, 0x83; ret
0x000605f4 : mov eax, [eax + 0x4c]; ret
0x0000c03a : mov eax, edx; pop ebp; ret
0x0001ea27 : pop ecx; adc al, 0x89; ret
0x0003c260 : add eax, [0]; pop ebp; ret
0x000085e1 : inc edx; add al, 0x83; ret
0x00034db7 : dec ebx; add al, 0x83; ret
0x00002515 : dec eax; and al, 0x5d; ret
0x00060c96 : sbb eax, eax; pop esi; ret
0x00031b99 : add al, 0; add dh, dh; ret
0x00023a3d : pop ebp; add eax, ecx; ret
0x000479b4 : inc edx; add al, 0xc9; ret
0x0004f6a4 : mov edi, edi; dec ecx; ret
0x0001daf7 : sub eax, edx; pop ebp; ret
0x0003f3da : push ss; or al, 8; jmp eax
0x0002f2b3 : pop ebp; cld ; leave ; ret
0x00060694 : mov eax, [eax + 0x58]; ret
0x00002606 : mov ebp, esp; pop ebp; ret
0x000606a4 : mov eax, [eax + 0x54]; ret
0x00060610 : mov eax, [edx + 0x4c]; ret
0x0003c0d6 : inc ecx; adc al, 0x39; ret
0x0003c340 : push ds; and eax, ecx; ret
0x0000082e : mov esp, ebp; pop ebp; ret
0x00000d32 : mov [edx + 0x18], eax; ret
0x000010b1 : inc ebp; cld ; leave ; ret
0x0003cc4e : movsd es:[edi], [esi]; ret
0x0005e7cf : xor eax, eax; pop ebx; ret
0x0005d104 : pop eax; adc al, 0x39; ret
0x00004968 : xor eax, eax; pop ebp; ret
0x000236de : inc ebp; clc ; leave ; ret
0x0000018b : add [eax], al; leave ; ret
0x0005d629 : pop edi; pop ebp; ret 0x10
0x0000b30b : pop ds; add [eax], al; ret
0x0002e5d6 : pop edi; pop ebp; ret 0x14
0x00005258 : inc ebx; adc [ecx], bh; ret
0x00005859 : push eax; add al, 0x83; ret
0x00011248 : push ebp; clc ; leave ; ret
0x0005e041 : inc [eax + 0x8900f37d]; ret
0x00044a97 : pop esi; and [ecx], ch; ret
0x0005b84e : dec [ecx + 0x83dbf7f3]; ret
0x00010795 : inc [ebx + 0x5d5b04c4]; ret
0x00001d6d : add [eax], eax; leave ; ret
0x00060e2a : add [eax], al; pop ebx; ret
0x00004974 : inc edx; clc ; pop ebp; ret
0x00002e43 : dec [ebp + 0x5d002674]; ret
0x000294d4 : lea esi, [esi]; leave ; ret
0x00054ab9 : push ebp; adc al, 0x83; ret
0x0000598a : sub [ebx + 0x5d], bl; ret 4
0x00004960 : inc edx; cld ; pop ebp; ret
0x00053b2d : inc [ebp + 0x391674ff]; ret
0x00031f68 : inc esp; and al, 4; ret 0xc
0x0005765b : dec [ebx + 0x833c245c]; ret
0x00000966 : add [eax], al; pop ebp; ret
0x00030cdd : add [ebx + 0x5d], bl; ret 8
0x00047bcd : inc ecx; cld ; dec ecx; ret
0x00002c6a : inc [ebx + 0x5d5b08c4]; ret
0x000320d1 : pop ecx; pop eax; jmp [eax]
0x00055ac6 : dec [ecx + 0x83dbf7fb]; ret
0x0001169e : push ebx; add al, 0x83; ret
0x000318c6 : not [ebx + 0xffffff89]; ret
0x0002d947 : add [ecx + ecx*4], esi; ret
0x00032c5e : inc [ebp + 0x890274c0]; ret
0x00031f67 : mov eax, [esp + 4]; ret 0xc
0x0003c0c4 : inc edx; and [ecx], bh; ret
0x0002c646 : add esp, [ebx + eax*4]; ret
0x0002a041 : pop edx; adc [ecx], ah; ret
0x0000b3b2 : add [eax], dl; pop ebp; ret
0x0003c240 : inc esp; nop ; inc eax; ret
0x00002db2 : inc [ebx + 0x5d5b10c4]; ret
0x000000c1 : inc esi; or al, 8; call eax
0x0000bf8b : sbb [edx + 0x59], 0x5b; ret
0x00037423 : add al, 0x24; call [edi + 4]
0x00009985 : mov [esp + 8], ebx; call edx
0x00031690 : pop ebp; mov [edx], eax; ret
0x0000c99c : mov [ecx], 1; pop ebp; ret 4
0x00060b99 : call eax; add esp, 0x1c; ret
0x00009263 : dec esp; and al, 4; call eax
0x00030ca5 : add al, 0x24; call [ebp + 8]
0x00031faf : inc esp; and al, 4; ret 0x14
0x0003df50 : mov [esp + 8], ecx; call ebx
0x00062d45 : xor al, 0x24; call [ebp + 8]
0x000347eb : add al, 0x24; call [esi + 4]
0x00051620 : add edx, [eax + 4]; call edx
0x00045824 : push [ecx + 0xfffffff7]; ret
0x00045cc8 : mov [esp + 8], eax; call edi
0x0001c9df : sbb al, 0x24; call [eax + 8]
0x00053b2f : push [esi + edx + 0x39]; ret
0x0002936f : inc esp; and al, 4; call edi
0x00000de2 : inc esp; and al, 4; call edx
0x00009986 : pop esp; and al, 8; call edx
0x00009194 : mov [esp + 4], edx; call eax
0x00009262 : mov [esp + 4], ecx; call eax
0x0002936e : mov [esp + 4], eax; call edi
0x0000c096 : mov [ecx], edx; pop ebp; ret
0x0002308f : mov [esp + 4], eax; call ebx
0x0003df51 : dec esp; and al, 8; call ebx
0x000029d2 : mov [ecx], eax; pop ebp; ret
0x00038e1b : add al, 0x24; call [ebx + 4]
0x00023090 : inc esp; and al, 4; call ebx
0x00046b51 : mov ebp, esp; pop ebp; ret 4
0x00002e44 : lea esi, [esi]; pop ebp; ret
0x00000de1 : mov [esp + 4], eax; call edx
0x00031fae : mov eax, [esp + 4]; ret 0x14
0x0003378a : mov esp, ebp; pop ebp; ret 8
0x00030f38 : mov esp, ebp; pop ebp; ret 4
0x00000e22 : xor eax, gs:[0x18]; call eax
0x00045cc9 : inc esp; and al, 8; call edi
0x00014120 : into ; jmp [ebp + 0xffffffc7]
0x0000a99a : sub edx, 1; and eax, edx; ret
0x0002828c : into ; jmp [esi + 0xffffff90]
0x0003c25f : add eax, gs:[0]; pop ebp; ret
0x00008647 : pop esp; idiv edi; call [eax]
0x0003ec5d : sbb [eax + ecx], ecx; jmp eax
0x000025f4 : mov eax, [edx + 0xc]; jmp eax
0x0000c9a0 : add [eax], al; pop ebp; ret 4
0x00009195 : push esp; and al, 4; call eax
0x0000d089 : mov bl, 1; add [ecx], bh; ret
0x0005d36b : mov eax, 0x768dfc; call [esi]
0x00038e1a : mov [esp], eax; call [ebx + 4]
0x0001d0b7 : mov esp, ebp; pop ebp; jmp eax
0x00060251 : mov [esp + 0xc], edx; call ecx
0x00051605 : mov ebx, eax; nop ; call [ebx]
0x00001d9c : add al, [eax]; add cl, cl; ret
0x0000071f : mov [esp], ecx; call [ebp + 8]
0x0005e7eb : add esp, 8; pop ebx; nop ; ret
0x0000ebdf : add [ebp + 0x12a7ec0], al; ret
0x00001e42 : pop ebx; pop esi; pop ebp; ret
0x00001620 : add [eax], al; add cl, cl; ret
0x0003dbcb : neg eax; pop esi; pop edi; ret
0x00037422 : mov [esp], eax; call [edi + 4]
0x00012b6a : push ebp;  ; call [edi + 0x1c]
0x0001fe29 : mov eax, [eax + 0x10]; jmp eax
0x00022bb7 : inc eax; pop edi; pop esi; ret
0x000025af : sbb al, 0x24; call [eax + 0xc]
0x0003db6f : pop esp; or [eax], cl; jmp eax
0x00034cfb : mov [esp + 4], eax; call [edi]
0x000469d0 : add [eax], al; add bl, ch; ret
0x0003cc5b : pop ebx; pop esi; pop edi; ret
0x00001858 : pop edi; neg eax; pop ebp; ret
0x0001c13c : adc al, [eax]; add cl, cl; ret
0x0001c9de : mov [esp], ebx; call [eax + 8]
0x0000273d : mov [eax + 8], 0; pop ebp; ret
0x0000265d : mov eax, [edx + 0x20]; jmp eax
0x0003c537 : push ds; pop ebx; pop ebp; ret
0x00028389 : int1 ; mov gs:[0x68], ecx; ret
0x0000b756 : add al, [eax]; add bh, dh; ret
0x00000b62 : pop esi; pop edi; pop ebp; ret
0x00000fe2 : add [eax], al; add cl, al; ret
0x00003fdc : movzx eax, [ecx]; pop ebp; ret
0x0003c20d : add [eax], al; add bh, al; ret
0x00034cfc : inc esp; and al, 4; call [edi]
0x0000bf8c : pop edx; pop ecx; pop ebx; ret
0x00004d03 : add [eax], al; add dh, dh; ret
0x000000bd : mov [esp], 0x80c460c; call eax
0x0003f2c1 : sbb al, 0x24; call [edx + edi]
0x00062d44 : mov [esp], esi; call [ebp + 8]
0x00000050 : mov [esp], 0x80ca880; call eax
0x00039894 : sbb cl, bh; cld ; dec ecx; ret
0x0001f15e : adc al, 0x24; call [eax + 0xc]
0x00030400 : add al, [eax]; add cl, ch; ret
0x000244cf : mov es, [ecx + 0x1fffffd]; ret
0x0000bf64 : pop esi; pop ebx; pop edx; ret
0x00000105 : mov [esp], 0x80ca01c; call eax
0x000347ea : mov [esp], eax; call [esi + 4]
0x00030ca4 : mov [esp], eax; call [ebp + 8]
0x000368f5 : mov [esp + 4], eax; call [ebx]
0x000368f6 : inc esp; and al, 4; call [ebx]
0x0001f1c1 : adc al, 0x24; call [edx + 0xc]
0x0000008d : mov [esp], 0x80ca880; call edx
0x00045693 : sbb dh, [ecx]; shr bl, cl; ret
0x000627ba : inc ebp; add al, 0xe8; jmp edi
0x0003498c : inc esp; and al, 8; call [esi]
0x00022bfd : inc eax; inc eax; inc eax; ret
0x0003498b : mov [esp + 8], eax; call [esi]
0x0003d065 : pop ebp; pop esi; pop edi; ret
0x00009596 : add [ebx + 0x44c708c2], al; ret
0x00020b97 : sbb al, 0x24; call [edx + 0x48]
0x0006031f : add [ecx + 0x5d5f5ed0], cl; ret
0x0001c16c : adc eax, [eax]; add cl, cl; ret
0x000479b3 : add eax, [edx + 4]; leave ; ret
0x00060252 : push esp; and al, 0xc; call ecx
0x00028376 : add [ebp + 0xf30274c0], al; ret
0x00001d6c : adc eax, [ecx]; add cl, cl; ret
0x0003c487 : sbb [ebx + 0x5d5b0cc4], al; ret
0x000020a0 : add [ecx + 0x5d5e5bf0], cl; ret
0x00020b5c : sbb al, 0x24; call [ecx + 0x40]
0x00031057 : add [ebx + 0x5d5e5b01], cl; ret
0x00001e04 : sbb al, 0x24; call [eax + 0x30]
0x00060774 : add [ecx + 0x5d5f5ef0], cl; ret
0x0001d9af : sbb al, 0x24; call [edx + 0x18]
0x000202a0 : sbb al, 0x24; call [eax + 0x38]
0x00012ccc : sbb al, 0x24; call [ecx + 0x1c]
0x0000395c : sbb al, 0x24; call [eax + 0x2c]
0x00020c75 : sbb al, 0x24; call [eax + 0x40]
0x00009974 : add [ebx + 0x5d5b0cc4], al; ret
0x0002e21d : adc al, 0x24; call [esi + 0x30]
0x00052e89 : xor eax, [eax]; add cl, cl; ret
0x0005df6a : sub al, 0xfd; call [edx + 0x52]
0x00045691 : add [ecx + 0xebd2311a], cl; ret
0x0000def2 : add [ebp + 0x830b74ff], al; ret
0x0003c6b0 : add [ebx + 0x5d5bffc8], al; ret
0x0001da50 : add al, [ebx + 0x5d5b01e8]; ret
0x0000287b : sbb al, 0x24; call [eax + 0x18]
0x00015aac : sbb al, 0x24; call [eax + 0x1c]
0x00001940 : add [eax + 0x5d5f5e5b], al; ret
0x000300a2 : dec [ebx + 0x7030843]; call eax
0x0005bdb3 : add [ecx + 0x5d5b0c43], cl; ret
0x00056b96 : add [ebx + 0x891c244c], cl; ret
0x000446c5 : xor al, 0x24; call [eax + 0x40]
0x000024e2 : adc al, [ebp + 0x5df175d2]; ret
0x000222e1 : sbb al, [ebx + 0x9d8801c2]; ret
0x000503f8 : add [ebx + 0x850ffefb], al; ret
0x0005f16f : add [ebx + 0x8f0f11f8], al; ret
0x0003e137 : sbb al, 0x24; call [ebp + 0x14]
0x000006d9 : add al, 0x24; call [ebp + 0x14]
0x000447d8 : push esp; mov ch, bh; jmp [ecx]
0x0001f5dc : sbb al, 0x24; call [edx + 0x40]
0x00044b0e : sbb [ecx + 0x5d5e5bd0], cl; ret
0x00002e0d : add [ebx + 0x5d5b04c4], al; ret
0x0002045b : sbb al, 0x24; call [edi + 0x40]
0x00021437 : sbb al, 0x24; call [eax + 0x44]
0x000029c5 : add [ebp + 0x5dee75c0], al; ret
0x0000b38f : add [ecx + 0x39d8f7f0], cl; ret
0x0003a0c7 : add [ebx + 0x5d5b10c4], al; ret
0x0006030d : inc esp; and al, 0x28; call ecx
0x0003def2 : adc al, 0x24; call [ebp + 0x14]
0x00032bfe : mov eax, [eax + 4]; leave ; ret
0x0005963f : add [ebx + 0x8924244c], cl; ret
0x00020921 : sbb al, 0x24; call [ecx + 0x38]
0x00060c12 : add [ecx + 0x5d5f5ef8], cl; ret
0x0001fc12 : sbb al, 0x24; call [eax + 0x48]
0x000568b4 : add [ebx + edx + 0x39], dh; ret
0x00022c86 : add edi, esi; rol [ecx], 1; ret
0x0002ed39 : mov [ecx + 0x83049a74], cl; ret
0x000299b0 : add al, 0x24; call [ebp + 0x10]
0x0001e950 : add al, 0x24; call [eax + 0x10]
0x00059b9d : xor [ebx + 0x970f09fb], al; ret
0x00030a38 : add [ecx + 0x8303ebc3], cl; ret
0x000316bf : add [ecx + 0x39028bc2], cl; ret
0x00002621 : sbb al, 0x24; call [eax + 0x10]
0x0000df7f : add [ebp + 0x83a474c0], al; ret
0x000203e7 : sbb al, 0x24; call [eax + 0x3c]
0x0000921c : add [ebx + 0x5d5b08c4], al; ret
0x0001f96e : sbb al, 0x24; call [eax + 0x24]
0x00002d8b : sbb al, 0x24; call [eax + 0x34]
0x0003c53f : add [ebp + 0xf7e37fdb], al; ret
0x0006030c : mov [esp + 0x28], eax; call ecx
0x0001d8b6 : adc [ecx + 0x5d5b2048], cl; ret
0x000394ee : push ebp; fadd st(7), st(0); ret
0x00002c5b : add [ebx + 0x5d5b08c4], eax; ret
0x00029499 : dec [ebx + 0x24048903]; call esi
0x00021fb2 : add ecx, [ebp + 0x5f5e0346]; ret
0x0005c793 : inc esp; std ; call [esi + 0x56]
0x0002f24c : pop ebp; cld ; leave ; nop ; ret
0x0005cffa : add al, 0x24; call [esi + ebx*4]
0x0000e635 : add [ecx + 0x89082454], ecx; ret
0x0003f2c0 : mov [esp], ebx; call [edx + edi]
0x0002853b : add [eax], al; leave ; nop ; ret
0x00053503 : add [ebp + 0x83002674], ecx; ret
0x0005ceda : adc al, 0x24; call [edi + ebx*4]
0x0002235c : add [ebp + 0x9d88ff78], ecx; ret
0x0000589e : adc edx, [eax + 0x8304508b]; ret
0x0001eee6 : mov [esp], edi; call [edi + 0xc]
0x000132af : lea esp, [ecx + 0xfffffffc]; ret
0x00002b73 : mov eax, [ebp + 8]; pop ebp; ret
0x000201c0 : mov dh, 0; pop ebx; pop ebp; ret
0x0000cf66 : pop esi; pop edi; pop ebp; ret 4
0x0000d6f8 : pop esi; pop edi; pop ebp; ret 8
0x0003208a : lea eax, [eax + 0xfffffff0]; ret
0x0001f04b : mov [esp], ecx; call [ecx + 0xc]
0x0003c378 : sub eax, edx; shr eax, 0x1f; ret
0x0001f15d : mov [esp], edx; call [eax + 0xc]
0x0005ca1c : inc edx; std ; call [edi + 0x57]
0x00034244 : sub [eax + 0xf028910], 0x85; ret
0x0001c1aa : add [ebp + 2], esi; pop ebp; ret
0x0001f1c0 : mov [esp], edx; call [edx + 0xc]
0x0003c41d : sub eax, edx; sar eax, 0x10; ret
0x00029378 : sbb edi, [ebp + 0xffffff83]; ret
0x0000abf9 : inc eax; sub eax, [esp + 4]; ret
0x000025ae : mov [esp], ebx; call [eax + 0xc]
0x0005eef6 : add [eax], al; add bh, dh; ret 0
0x0002f6b9 : add eax, [ebx]; pop es; call eax
0x0001fc11 : mov [esp], ebx; call [eax + 0x48]
0x0005487d : inc [ebx + 0xffff5485]; jmp [edi]
0x0003abe4 : add [eax], al; nop ; pop ebp; ret
0x0001e9dd : mov [esp], edi; call [eax + 0x40]
0x0002029f : mov [esp], ebx; call [eax + 0x38]
0x00051f8f : int 0; add [eax], al; leave ; ret
0x0001e8fc : mov [esp], edi; call [ecx + 0x40]
0x0001e9b6 : mov [esp], edi; call [edx + 0x48]
0x00010e0f : add [eax], al; add [ecx], al; ret
0x0000263e : add esp, 4; pop ebx; pop ebp; ret
0x000320b6 : add [eax], al; add [eax], al; ret
0x00020b5b : mov [esp], ebx; call [ecx + 0x40]
0x0000258b : add esp, 8; pop ebx; pop ebp; ret
0x0000ebde : add es:[ebp + 0x12a7ec0], al; ret
0x0001f5b3 : mov [esp], edi; call [edi + 0x10]
0x0003def1 : mov [esp], edx; call [ebp + 0x14]
0x0005787e : xchg [ebp + 0x83000000], esi; ret
0x0003ded2 : mov [esp], edi; call [ebp + 0x14]
0x000203e6 : mov [esp], ebx; call [eax + 0x3c]
0x0001f5db : mov [esp], ebx; call [edx + 0x40]
0x0000287a : mov [esp], ebx; call [eax + 0x18]
0x0001e94f : mov [esp], eax; call [eax + 0x10]
0x0003e60e : mov [esp], ecx; call [eax + 0x1c]
0x00031fe2 : mov eax, [ebx + 0x14]; call [ebx]
0x000002e5 : pop es; rol [eax], 0; leave ; ret
0x0002852a : leave ; nop ; lea esi, [esi]; ret
0x00001e03 : mov [esp], ebx; call [eax + 0x30]
0x000079ae : xor [edi], cl; xchg eax, ebp; ret
0x0005298e : div [ecx]; jmp [ebp + 0xffffffc7]
0x00015aab : mov [esp], ebx; call [eax + 0x1c]
0x00002d8a : mov [esp], ebx; call [eax + 0x34]
0x00012ccb : mov [esp], ebx; call [ecx + 0x1c]
0x0003e59b : add [eax + eax], ebx; leave ; ret
0x0003080d : push es; add eax, [edx]; call eax
0x00020c74 : mov [esp], ebx; call [eax + 0x40]
0x00031980 : add [edi], cl; xchg eax, esp; ret
0x0002045a : mov [esp], ebx; call [edi + 0x40]
0x0001f96d : mov [esp], ebx; call [eax + 0x24]
0x00045925 : push es; mov [esp], eax; call ebx
0x0000395b : mov [esp], ebx; call [eax + 0x2c]
0x000299af : mov [esp], eax; call [ebp + 0x10]
0x0005e802 : pop eax; add esp, 8; pop ebx; ret
0x000608fb : mov ebp, [ebp]; mov esp, ecx; ret
0x0001d9ae : mov [esp], ebx; call [edx + 0x18]
0x00000090 : sub [eax + 0xd2ff080c], 0xc9; ret
0x000000c8 : sub [eax + 0xc901080c], 0xf3; ret
0x00020920 : mov [esp], ebx; call [ecx + 0x38]
0x00045873 : push es; mov [esp], eax; call edi
0x00002620 : mov [esp], ebx; call [eax + 0x10]
0x00028be7 : add [edi], cl; xchg eax, ebp; ret
0x0001da51 : sub eax, 1; pop ebx; pop ebp; ret
0x0003e136 : mov [esp], ebx; call [ebp + 0x14]
0x0000d0ab : add [ecx], dh; sar [ecx], cl; ret
0x00000053 : sub [eax + 0xd0ff080c], 0xc9; ret
0x00021436 : mov [esp], ebx; call [eax + 0x44]
0x00020b96 : mov [esp], ebx; call [edx + 0x48]
0x0002e21c : mov [esp], edx; call [esi + 0x30]
0x000006d8 : mov [esp], eax; call [ebp + 0x14]
0x000446c4 : mov [esp], esi; call [eax + 0x40]
0x000206dd : add [eax], al; add [ecx], ch; ret
0x00029547 : mov [esp], ecx; call [ebp + 0x10]
0x00030bb4 : adc [ebx + 0x5e], bl; pop ebp; ret
0x00010928 : inc [ecx + 0xfffb28bd]; call [eax]
0x00008644 : inc [ebx + 0xfff75c85]; call [eax]
0x000601c6 : add [eax], al; add esp, 0x10c; ret
0x0001dfe7 : pop ebx; pop esi; pop ebp; jmp eax
0x0001c0bf : dec edi; mov eax, edx; leave ; ret
0x0003c3cc : not eax; and eax, edx; leave ; ret
0x0003c23f : mov eax, [eax + edx*4 + 0x40]; ret
0x0003c53e : add es:[ebp + 0xf7e37fdb], al; ret
0x0001dd35 : push [eax + esi + 0xffffff83]; ret
0x0004b34d : inc [ebx + 0xfffe54bd]; call [eax]
0x0000def4 : push [ebx + ecx + 0xffffff83]; ret
0x0005e61d : add [esi + 0x5f], bl; pop ebp; ret
0x00028824 : add [edi], ecx; xchg eax, esp; ret
0x0005d52c : add [eax], eax; add [ecx], al; ret
0x00052010 : pop es; add [eax], al; leave ; ret
0x00061dec : add [ebx + 0x840ffffa], eax; ret 1
0x00031056 : add es:[ebx + 0x5d5e5b01], cl; ret
0x00004012 : sub eax, [edx + 0xc]; pop ebp; ret
0x0002d5bd : inc [ebx + 0x576fdfa]; leave ; ret
0x00023757 : add [ebx + 0x5e], bl; pop ebp; ret
0x0005cff9 : mov [esp], eax; call [esi + ebx*4]
0x0001f316 : inc esp; and al, 4; call [ecx + 4]
0x000011e9 : add [ebp + 0x72], esi; leave ; ret
0x0001f315 : mov [esp + 4], eax; call [ecx + 4]
0x00052eb7 : xor eax, gs:[eax]; add cl, cl; ret
0x00061d7d : xor [esi + 0x5f], bl; pop ebp; ret
0x0001d8b8 : dec eax; and [ebx + 0x5d], bl; ret
0x0003247f : mov ch, bh; jmp [esi + 0xffffffc7]
0x0005e7fa : push esp; add esp, 8; pop ebx; ret
0x00002ed3 : push [edx + ebp + 0xffffff83]; ret
0x0002cad6 : pop esi; pop edi; pop ebp; ret 0xc
0x0005ced9 : mov [esp], edx; call [edi + ebx*4]
0x00030395 : into ; std ; jmp [esi + 0xffffff83]
0x0005e670 : add [eax + 0xd801ffff], ah; jmp eax
0x00023984 : add [ebx + 0x5e], ebx; pop ebp; ret
0x0001da5b : add eax, ebx; pop ebx; pop ebp; ret
0x0003b79a : mov eax, [eax]; sub eax, [edx]; ret
0x0000333f : adc [ebx + 0x5d5b04c4], al; jmp eax
0x00001002 : mov eax, edx; pop ebx; pop ebp; ret
0x00052e29 : push es; add [eax], al; leave ; ret
0x00008f8e : push ebp;  mov [esp], edx; call eax
0x00022bb6 : add [eax + 0x5f], eax; pop esi; ret
0x000602d4 : mov eax, edx; pop edi; pop ebp; ret
0x0005d628 : pop esi; pop edi; pop ebp; ret 0x10
0x0002e5d5 : pop esi; pop edi; pop ebp; ret 0x14
0x00021c6c : sub eax, ebx; pop ebx; pop ebp; ret
0x00002b66 : pop ebp; mov eax, [eax + 0x34]; ret
0x00002514 : mov [eax + 0x24], ecx; pop ebp; ret
0x00021fb4 : inc esi; add ebx, [esi + 0x5f]; ret
0x0003e59c : pop esp; add [eax], al; leave ; ret
0x0000292c : add eax, esi; pop esi; pop ebp; ret
0x0002121d : mov eax, ebx; pop ebx; pop ebp; ret
0x000080a4 : xor eax, eax; pop ebx; pop ebp; ret
0x0001d886 : mov [eax + 0x20], ecx; pop ebp; ret
0x0001a7e8 : pop edi; mov esp, ebp; pop ebp; ret
0x00002a23 : sub eax, ecx; pop ebx; pop ebp; ret
0x000248b0 : add [ebp + 0x7f], esi; pop ebp; ret
0x00030fcd : mov eax, ecx; pop ebx; pop ebp; ret
0x00003424 : sub eax, edi; pop edi; pop ebp; ret
0x000047df : pop ebp; add [eax], al; pop ebp; ret
0x0005e8db : sub ebx, edi; jmp [esi + 0xffffff90]
0x0001e6d6 : mov [esp + 8], edx; call [esi + 0xc]
0x000062fc : inc ebp; fdiv st(7); fsub [ecx]; ret
0x00002ec7 : mov [esp + 4], ecx; call [eax + 0xc]
0x0002142b : sub esi, edi; jmp [esi + 0xffffff90]
0x00005e47 : inc [ebx + 0x5e5b08c4]; pop ebp; ret
0x00032c7d : inc [ebx + 0x5e5b0cc4]; pop ebp; ret
0x0006078b : add es:[eax], al; add [eax], al; ret
0x0005b922 : sbb ebx, edi; jmp [esi + 0xffffffbe]
0x00028369 : add [esi + 3], bh; mov eax, edx; ret
0x00030bb1 : inc [ebx + 0x5e5b10c4]; pop ebp; ret
0x000320d0 : pop edx; pop ecx; pop eax; jmp [eax]
0x0000672d : add [eax], al; pop ebx; pop ebp; ret
0x00060e40 : add esp, 8; mov eax, 2; pop ebx; ret
0x00050280 : add [eax], al; add al, ch; clc ; ret
0x00060e24 : add esp, 8; mov eax, 4; pop ebx; ret
0x0004b3f3 : add [ebx + 0xfffe30bd], cl; call ecx
0x0003204e : dec esi; add [eax], eax; leave ; ret
0x00013dad : mov [ebp + 0xfffffb78], edi; jmp eax
0x0003f584 : mov [ebp + 0xffffefb4], edi; jmp eax
0x0000b30a : push edx; pop ds; add [eax], al; ret
0x0002c644 : inc esi; add esp, [ebx + eax*4]; ret
0x00002b30 : push ebp; mov ebp, esp; pop ebp; ret
0x00004d87 : inc [ebx + 0x5e5b24c4]; pop ebp; ret
0x0005608b : sbb al, 0x85; jmp [esi + 0xffffff90]
0x0002d946 : inc esp; add [ecx + ecx*4], esi; ret
0x00060e30 : add esp, 8; mov eax, 8; pop ebx; ret
0x0000e98b : int 0x8b; inc ebx; adc al, 0x83; ret
0x000090ab : dec [ebp + 0xe8002674]; dec ebx; ret
0x00002ec8 : dec esp; and al, 4; call [eax + 0xc]
0x000283a6 : add [eax], al; int 0x80; pop ebp; ret
0x0001e6d7 : push esp; and al, 8; call [esi + 0xc]
0x00020192 : mov [esp + 8], ebx; call [eax + 0x20]
0x0001903e : mov [ebp + 0xffffff38], edx; call ecx
0x0000cb70 : add [ebx + esi + 0xffffff83], dh; ret
0x0000b0a5 : push [edi + 3]; pop ebx; pop ebp; ret
0x0003e30f : inc esp; and al, 4; call [ebp + 0x14]
0x00039267 : sbb al, 0x24; call [ebp + 0xffffffe0]
0x0001f653 : inc esp; and al, 4; call [edi + 0x18]
0x000283f2 : sbb eax, eax; or eax, 1; pop ebp; ret
0x00038e8b : add al, 0x24; call [ebp + 0xffffffe4]
0x00013491 : mov eax, [eax*4 + 0x80aeee0]; jmp eax
0x0003ec59 : mov eax, [eax*4 + 0x80c1920]; jmp eax
0x00030c18 : mov [ebp + 0xffffffe0], ecx; call esi
0x0002546b : add [ecx], dh; jmp [esi + 0xffffff90]
0x00004e74 : mov [ebp + 0xfffffff0], eax; call edx
0x000390bb : inc ecx; std ; jmp [esi + 0xffffff90]
0x0003e08f : mov [esp + 4], edx; call [ebp + 0x14]
0x00035fea : adc al, 0x24; call [ebp + 0xffffffcc]
0x0003bb1c : add [ebx + 0xfffe5c8d], cl; jmp [ebx]
0x00001f7f : mov [esp + 4], edx; call [eax + 0x1c]
0x0001ee5b : inc esp; and al, 8; call [edx + 0x38]
0x00034bbd : add al, 0x24; call [ebp + 0xffffffd0]
0x0001ec69 : mov [esp + 4], eax; call [ecx + 0x18]
0x0000bf63 : int1 ; pop esi; pop ebx; pop edx; ret
0x00030466 : mov [ebp + 0xffffff80], edx; call ecx
0x00003278 : add esp, 4; pop ebx; pop ebp; jmp eax
0x00013b4a : mov [esp + 8], eax; call [ecx + 0x1c]
0x000112fb : add [ebx + 0xffff7c8d], al; jmp [eax]
0x00037493 : adc al, 0x24; call [ebp + 0xffffffd8]
0x0001f652 : mov [esp + 4], eax; call [edi + 0x18]
0x00013c1a : mov eax, [eax*4 + 0x80aebe0]; jmp eax
0x0005f2b4 : mov edi, [esp + 8]; add esp, 0xc; ret
0x0003e30e : mov [esp + 4], eax; call [ebp + 0x14]
0x0003df22 : mov [esp + 8], edx; call [ebp + 0x14]
0x00020193 : pop esp; and al, 8; call [eax + 0x20]
0x0000269d : dec esp; and al, 4; call [edx + 0x24]
0x0000269c : mov [esp + 4], ecx; call [edx + 0x24]
0x000396e7 : xor al, 0x24; call [ebp + 0xffffffdc]
0x0003c228 : mov [eax], edx; pop ebx; pop ebp; ret
0x0005e03f : int 0xfa; inc [eax + 0x8900f37d]; ret
0x0001ee5a : mov [esp + 8], eax; call [edx + 0x38]
0x0006055b : mov esi, [esp + 8]; add esp, 0xc; ret
0x0002a08c : pop ebp; setae al; movzx eax, al; ret
0x00011bea : adc [ebx + edx + 0xffffff83], dh; ret
0x0001ec6a : inc esp; and al, 4; call [ecx + 0x18]
0x00007d98 : mov [ebp + 0xffffffbc], edx; call eax
0x00011757 : add al, 0x24; call [ebp + 0xffffffd8]
0x000307fc : mov [ebp + 0xffffff80], ecx; call eax
0x000114d6 : mov [esp + 4], edi; call [ebp + 0x18]
0x00039026 : sbb al, 0x24; call [ebp + 0xffffffe4]
0x0000b034 : mov [edx], eax; pop ebx; pop ebp; ret
0x00020bc3 : mov [esp + 4], edx; call [eax + 0x40]
0x0003297b : add al, 0x24; call [ebp + 0xffffffe0]
0x00038468 : xor al, 0x24; call [ebp + 0xffffffd4]
0x00003e75 : mov edx, 1; mov eax, edx; leave ; ret
0x00034857 : adc al, 0x24; call [ebp + 0xffffffd0]
0x0001eae9 : dec esp; and al, 8; call [eax + 0x40]
0x0000d3c3 : mov [eax + eax], ecx; add cl, cl; ret
0x0003828b : dec edi; std ; jmp [esi + 0xffffff90]
0x00036335 : adc al, 0x24; call [ebp + 0xffffffc4]
0x000333cd : mov edx, [ebp + 0xffffffb4]; call edx
0x00013b4b : inc esp; and al, 8; call [ecx + 0x1c]
0x0001eae8 : mov [esp + 8], ecx; call [eax + 0x40]
0x0003f3d6 : mov eax, [eax*4 + 0x80c1620]; jmp eax
0x00021a7e : int1 ; pop ebx; pop esi; pop ebp; ret
0x0005161f : push ss; add edx, [eax + 4]; call edx
0x00000bda : adc [eax + 0x9066080c], ah; call [esi]
0x0003e090 : push esp; and al, 4; call [ebp + 0x14]
0x00044a9d : add [esi + eax + 0xffffff83], esi; ret
0x0000c6da : call [eax + 0x90909090]; int 0x80; ret
0x00001f80 : push esp; and al, 4; call [eax + 0x1c]
0x00041083 : add [ebx + 0xffef88bd], al; call [eax]
0x00000cdb : sbb [ecx + 0x13750804], al; call [esi]
0x00040cbd : add [eax + 0xffef1fbd], eax; jmp [eax]
0x00020bc4 : push esp; and al, 4; call [eax + 0x40]
0x00030cdc : add [eax], al; pop ebx; pop ebp; ret 8
0x00046b50 : push ebp; mov ebp, esp; pop ebp; ret 4
0x000400f2 : add [ebx + 0xffef4cbd], eax; jmp [eax]
0x000149d1 : add [eax + 0xfffb1bbd], eax; jmp [eax]
0x0004fb7c : pop ebp; cld ; sub esp, 4; leave ; ret
0x000489be : sub [ebx + 0xfffe54bd], al; call [eax]
0x0005d74a : push esp; cld ; jmp [esi + 0xffffffc7]
0x000025f3 : pop ebp; mov eax, [edx + 0xc]; jmp eax
0x000394b1 : mov eax, 1; mov ebp, esp; pop ebp; ret
0x00060e28 : add al, 0; add [eax], al; pop ebx; ret
0x000406ff : add [ebx + 0xffef84bd], al; call [eax]
0x000153b3 : add [eax + 0xfffadbbd], eax; jmp [eax]
0x00044251 : sub edx, 1; and eax, edx; pop ebp; ret
0x0003cc62 : pop ds; pop ebx; pop esi; pop edi; ret
0x0005e7cc : add esp, 8; xor eax, eax; pop ebx; ret
0x0003df23 : push esp; and al, 8; call [ebp + 0x14]
0x00000e25 : sbb [eax], al; add [eax], al; call eax
0x0002ff68 : inc ebx; or [ebx], al; pop es; call eax
0x0000165e : push cs; add [eax], al; add cl, cl; ret
0x0000672c : add ds:[eax], al; pop ebx; pop ebp; ret
0x000459a3 : dec ecx; add [eax], al; add cl, cl; ret
0x0005e7ea : pop esp; add esp, 8; pop ebx; nop ; ret
0x00032a0f : add [eax], al; mov [esp], eax; call edi
0x00000e08 : add [eax], al; mov [esp], eax; call edx
0x0003556f : mov [esp], ecx; call [ebp + 0xffffffcc]
0x00038467 : mov [esp], esi; call [ebp + 0xffffffd4]
0x00011756 : mov [esp], eax; call [ebp + 0xffffffd8]
0x0000ab43 : neg eax; pop ebx; pop esi; pop ebp; ret
0x0001c850 : add [eax], al; mov [esp], ebx; call ecx
0x000029ce : xor [eax + 0x189028b], dl; pop ebp; ret
0x0003cc5a : pop eax; pop ebx; pop esi; pop edi; ret
0x00010793 : mov bh, bh; inc [ebx + 0x5d5b04c4]; ret
0x000605e3 : sbb [ecx + 0x8c48310], cl; pop ebx; ret
0x00043c4b : add [eax], al; mov [esp], ebx; call edx
0x000293c6 : add [eax], al; mov [esp], ebx; call edi
0x00047ba7 : inc ebx; or [ebx + 0x5d5b1cc4], al; ret
0x0000400f : add cl, [ecx + 0xc422bc8]; pop ebp; ret
0x0000a67f : sbb [eax], al; add cl, ch; dec esi; ret
0x00016162 : inc [eax + 0xfffb58bd]; jmp [edi + ecx]
0x00011a1a : inc ebp; or [ecx + 0xfce82404], cl; ret
0x000201bf : movzx eax, [eax]; pop ebx; pop ebp; ret
0x000280d1 : adc dh, bh; inc [ebx + 0x5d5b04c4]; ret
0x00000b61 : pop ebx; pop esi; pop edi; pop ebp; ret
0x0001fe28 : pop ebp; mov eax, [eax + 0x10]; jmp eax
0x0006110b : adc [ebx + 0x8c48300], cl; pop ebx; ret
0x0000bf89 : add ch, cl; sbb [edx + 0x59], 0x5b; ret
0x00034243 : int3 ; sub [eax + 0xf028910], 0x85; ret
0x00011608 : mov [esp], ecx; call [ebp + 0xffffffd8]
0x00037492 : mov [esp], edx; call [ebp + 0xffffffd8]
0x000396e6 : mov [esp], esi; call [ebp + 0xffffffdc]
0x00027f19 : dec edx; or [ebp + 0x6b1174c9], al; ret
0x00003fdb : add ecx, [edi]; mov dh, 1; pop ebp; ret
0x000610ff : add [ebx + 0x8c48302], cl; pop ebx; ret
0x00019cba : inc [eax + 0xffff53bd]; jmp [edi + 0xf]
0x0004fcce : add [ecx + 0xfc5d8b02], cl; leave ; ret
0x000303ff : inc eax; add al, [eax]; add cl, ch; ret
0x00035fe9 : mov [esp], edx; call [ebp + 0xffffffcc]
0x00061276 : inc eax; pop esi; pop edi; pop ebp; ret
0x0002944a : inc ebp; or [ebp + 0xc90875d2], al; ret
0x0006038c : add [eax], eax; add [eax], al; call ecx
0x0003297a : mov [esp], eax; call [ebp + 0xffffffe0]
0x00039266 : mov [esp], ebx; call [ebp + 0xffffffe0]
0x0002f466 : inc eax; or [eax + 0xe90807a0], dl; ret
0x00009fc7 : dec [ebx + 0x1c8df055]; adc dh, dh; ret
0x00034bbc : mov [esp], eax; call [ebp + 0xffffffd0]
0x00060b95 : add [eax], eax; add [eax], al; call eax
0x000236da : adc [ecx + 0xf8458b10], cl; leave ; ret
0x00001857 : pop esi; pop edi; neg eax; pop ebp; ret
0x0000086a : pop esp; test al, 0; add [ecx], bh; ret
0x00046915 : mov [eax], 2; xor eax, eax; leave ; ret
0x0004dc46 : add [ebx + 0xfffe5485], eax; call [ecx]
0x0000161f : dec ebp; add [eax], al; add cl, cl; ret
0x00036334 : mov [esp], edx; call [ebp + 0xffffffc4]
0x00036d5c : mov [esp], ecx; call [ebp + 0xffffffd0]
0x00034856 : mov [esp], edx; call [ebp + 0xffffffd0]
0x0004fc5d : sbb [ecx + 0xfc5d8b02], cl; leave ; ret
0x00038e8a : mov [esp], eax; call [ebp + 0xffffffe4]
0x0003d064 : pop ebx; pop ebp; pop esi; pop edi; ret
0x00039025 : mov [esp], ebx; call [ebp + 0xffffffe4]
0x00000f42 : adc [ecx + 0x5f5e5bd0], cl; pop ebp; ret
0x00022c85 : push es; add edi, esi; rol [ecx], 1; ret
0x00011c72 : add [eax], al; xor eax, eax; leave ; ret
0x0005e17c : sub esp, 8; mov esp, ebp; pop ebp; ret 4
0x00008b42 : sbb [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x0003eed9 : dec esp; and al, 0xc; call [eax + edx*4]
0x0002f6b8 : mov eax, [ebx]; add eax, [edi]; call eax
0x00002b42 : sbb [ebx + 0xe589080c], ah; pop ebp; ret
0x0000ac19 : add [esi + 0xffffff89], ebx; xlatb ; ret
0x00045924 : mov eax, [esi]; mov [esp], eax; call ebx
0x00044226 : add [eax], al; add [ebx + 0x5d], bl; ret
0x0001daf3 : add cl, [ebx + 0xd0290841]; pop ebp; ret
0x0000bf8a : int 0x80; pop edx; pop ecx; pop ebx; ret
0x0003c535 : push [edi + 0x1e]; pop ebx; pop ebp; ret
0x000605e4 : mov [eax], edx; add esp, 8; pop ebx; ret
0x00010bf4 : add [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x00045872 : mov eax, [esi]; mov [esp], eax; call edi
0x0002949a : mov eax, [ebx]; mov [esp], eax; call esi
0x00003e78 : add [eax], al; mov eax, edx; leave ; ret
0x000555d2 : dec edi; cmp [ebp + 0x83002674], cl; ret
0x00027f27 : add cl, [ebx + 0xec89241c]; pop ebp; ret
0x000613bf : add [ebx + 0x5f5e40c4], al; pop ebp; ret
0x00061082 : add al, [ebx + 0x5e5b20c4]; pop edi; ret
0x0003f09b : lea edx, [edi + ebp*8 + 0x860fffff]; ret
0x00046766 : add [ecx], edi; ror [edi], 1; sahf ; ret
0x0000899e : push eax; pop ebx; pop esi; pop ebp; ret
0x0002f2b2 : mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x0003080c : mov eax, [esi]; add eax, [edx]; call eax
0x0004474e : inc eax; cmp [ebp + 0x5d0478c0], al; ret
0x0003abe5 : add [esi + 0xffffff90], ah; pop ebp; ret
0x0003eed8 : mov [esp + 0xc], ecx; call [eax + edx*4]
0x0004fc82 : mov dl, dh; std ; jmp [esi + 0xffffff90]
0x000010b0 : mov eax, [ebp + 0xfffffffc]; leave ; ret
0x000457f4 : add [ebp + 0xd6750142], cl; pop ebp; ret
0x00061100 : mov eax, [edx]; add esp, 8; pop ebx; ret
0x000320cf : add [edx + 0x59], bl; pop eax; jmp [eax]
0x000236dd : mov eax, [ebp + 0xfffffff8]; leave ; ret
0x00004d13 : add [ebx + 0x5e5b24c4], al; pop ebp; ret
0x0006110c : mov eax, [eax]; add esp, 8; pop ebx; ret
0x0001e709 : add al, [ebx + 0x5e5b24c4]; pop ebp; ret
0x00053005 : sub [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x0003a2ec : sub [edi], 0xfd; call [ebp + 0xffffff89]
0x0005005f : mov eax, [eax]; mov [esp], eax; call edi
0x0001ea30 : add [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x0006085b : mov edi, [ebp + 0xfffffffc]; leave ; ret
0x0001e060 : add al, [ebx + 0x5e5b08c4]; pop ebp; ret
0x00060e4f : add [ebx + 0xc03108c4], al; pop ebx; ret
0x0002f9fd : mov eax, [edx]; add eax, [ecx]; call eax
0x0000aeb0 : add [ecx + eax + 0x40], dh; pop edi; ret
0x00002831 : xor eax, eax; mov ebp, esp; pop ebp; ret
0x0002157d : adc [ecx + 0x5f5e5bf8], cl; pop ebp; ret
0x00044763 : add [eax + 0xffffffff], bh; pop ebp; ret
0x000320b0 : mov eax, [eax + 4]; sub eax, gs:[0]; ret
0x0003c227 : mov gs:[eax], edx; pop ebx; pop ebp; ret
0x00008431 : dec eax; idiv edi; jmp [ebp + 0xffffff83]
0x0003c486 : push ebx; sbb [ebx + 0x5d5b0cc4], al; ret
0x0000ad96 : add ecx, [ecx + 0x5faaf3d1]; pop ebp; ret
0x0004f7d6 : div bh; add esp, 8; pop ebx; pop ebp; ret
0x00021fb3 : lea eax, [esi + 3]; pop esi; pop edi; ret
0x0006240c : mov esi, [esp + 0x18]; add esp, 0x1c; ret
0x0002ed38 : push ebp; mov [ecx + 0x83049a74], cl; ret
0x00023a3b : add [eax], al; pop ebp; add eax, ecx; ret
0x0000cf65 : pop ebx; pop esi; pop edi; pop ebp; ret 4
0x0000b295 : pop ebp; clc ; mov esp, ebp; pop ebp; ret
0x00001d6b : push ecx; adc eax, [ecx]; add cl, cl; ret
0x0000d6f7 : pop ebx; pop esi; pop edi; pop ebp; ret 8
0x0001cb6b : pushal ; cmc ; or cl, [eax]; pop ebp; ret
0x000132ae : pop ebp; lea esp, [ecx + 0xfffffffc]; ret
0x00032089 : pop ebp; lea eax, [eax + 0xfffffff0]; ret
0x0000ad9a : stosb es:[edi], al; pop edi; pop ebp; ret
0x00051fce : mov es, [eax]; add [eax], al; leave ; ret
0x00022c82 : dec [ebp + 0xf7010674]; rol [ecx], 1; ret
0x0005e303 : mov ebp, [esp + 0x28]; add esp, 0x2c; ret
0x000394b4 : add [eax], al; mov ebp, esp; pop ebp; ret
0x0004fb7a : dec [ebx + 0xec83fc5d]; add al, 0xc9; ret
0x00028be3 : dec [edx + 0xf000000]; xchg eax, ebp; ret
0x0002bac8 : sub [eax], eax; add [eax + 0x29], dh; ret
0x0003c4ea : inc esp; and al, 8; mov esp, ecx; jmp edx
0x0002d5e0 : add [eax], al; add [eax], al; leave ; ret
0x000294d2 : popfd ; nop ; lea esi, [esi]; leave ; ret
0x000457f7 : add [ebp + 0xffffffd6], esi; pop ebp; ret
0x0005e6b2 : mov ebp, [esp + 0x38]; add esp, 0x3c; ret
0x0000495f : lea eax, [edx + 0xfffffffc]; pop ebp; ret
0x0000ed59 : add [ebp + 0x8ba275f6], al; push esp; ret
0x0003c0d4 : sbb [ebx], al; inc ecx; adc al, 0x39; ret
0x00028521 : adc [eax], al; add [eax], al; leave ; ret
0x0003c20b : mov dh, 0; add [eax], al; add bh, al; ret
0x00028537 : add [eax + 0x2000], bh; leave ; nop ; ret
0x00004973 : lea eax, [edx + 0xfffffff8]; pop ebp; ret
0x0003c0d1 : dec [ebx + 0x41031841]; adc al, 0x39; ret
0x00062314 : mov edi, [esp + 0x18]; add esp, 0x1c; ret
0x0003c4e9 : mov eax, [esp + 8]; mov esp, ecx; jmp edx
0x000206d9 : xor ecx, [ebp + 0xb6]; add [ecx], ch; ret
0x00060b92 : mov [esp], 1; call eax; add esp, 0x1c; ret
0x0001c84a : mov [esp + 4], 1; mov [esp], ebx; call ecx
0x00046914 : mov gs:[eax], 2; xor eax, eax; leave ; ret
0x000610fe : add es:[ebx + 0x8c48302], cl; pop ebx; ret
0x0002942b : mov [esp + 4], 3; mov [esp], ebx; call edi
0x00043c45 : mov [esp + 4], 1; mov [esp], ebx; call edx
0x00030cdb : add [eax], al; add [ebx + 0x5d], bl; ret 8
0x00002740 : add [eax], al; add [eax], al; pop ebp; ret
0x0001e94e : inc esp; mov [esp], eax; call [eax + 0x10]
0x00060b8e : mov [esp + 4], edx; mov [esp], 1; call eax
0x000293c0 : mov [esp + 4], 0; mov [esp], ebx; call edi
0x000293e2 : mov [esp + 4], 1; mov [esp], ebx; call edi
0x00004964 : lea esi, [esi]; xor eax, eax; pop ebp; ret
0x00060386 : inc esp; and al, 4; mov [esp], 1; call ecx
0x00023753 : mov eax, 1; pop ebx; pop esi; pop ebp; ret
0x00029404 : mov [esp + 4], 2; mov [esp], ebx; call edi
0x00032a09 : mov [esp + 8], 0; mov [esp], eax; call edi
0x0006060e : mov [ecx], eax; mov eax, [edx + 0x4c]; ret
0x0005e801 : inc edx; pop eax; add esp, 8; pop ebx; ret
0x00005e48 : add esp, 8; pop ebx; pop esi; pop ebp; ret
0x00023d48 : add esp, 4; pop ebx; pop esi; pop ebp; ret
0x00009df1 : adc [ebx + ebx + 0xffffffb9], dh; ret 0x14
0x00060e44 : add al, [eax]; add [eax], al; pop ebx; ret
0x00027f28 : mov ebx, [esp]; mov esp, ebp; pop ebp; ret
0x00060385 : mov [esp + 4], eax; mov [esp], 1; call ecx
0x00047fbb : lea eax, [eax + eax*8 + 0x8090105]; jmp eax
0x0005e7f9 : inc edx; push esp; add esp, 8; pop ebx; ret
0x000116c4 : inc esp; and al, 8; call [ebp + 0xffffffd8]
0x00001870 : xor [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x000087eb : add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00046110 : inc esp; and al, 4; call [ebp + 0xfffffff0]
0x0005bf53 : add bl, [ebx + 0x5e]; pop edi; pop ebp; ret
0x00005915 : sbb [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x000202a3 : push eax; cmp [ebx + 0x8e0f00f8], al; ret 0
0x000029ea : mov eax, [eax + 8]; sub eax, [edx + 8]; ret
0x0005bdb4 : mov [ebx + 0xc], eax; pop ebx; pop ebp; ret
0x0001f5b2 : push esp; mov [esp], edi; call [edi + 0x10]
0x000290e8 : pop es; mov eax, edx; pop ebx; pop ebp; ret
0x0003c23e : pop ebp; mov eax, [eax + edx*4 + 0x40]; ret
0x00018a6e : add [eax + 0xffff53bd], al; jmp [esi + 0xf]
0x00031f64 : mov [esp], eax; mov eax, [esp + 4]; ret 0xc
0x0005204e : push ds; pop es; add [eax], al; leave ; ret
0x00000964 : add [eax], eax; add [eax], al; pop ebp; ret
0x0000491d : adc [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0002cad5 : pop ebx; pop esi; pop edi; pop ebp; ret 0xc
0x000320af : add [ebx + 0x2b650440], cl; add eax, 0; ret
0x0003db6b : lea eax, [eax + eax*8 + 0x8085cb5]; jmp eax
0x00060b8f : push esp; and al, 4; mov [esp], 1; call eax
0x000324da : inc edx; mov ch, bh; jmp [esi + 0xffffffc7]
0x000115a9 : mov [esp + 8], ecx; call [ebp + 0xffffffd8]
0x0005200f : pop ebp; pop es; add [eax], al; leave ; ret
0x000115aa : dec esp; and al, 8; call [ebp + 0xffffffd8]
0x0004610f : mov [esp + 4], eax; call [ebp + 0xfffffff0]
0x000116c3 : mov [esp + 8], eax; call [ebp + 0xffffffd8]
0x00060b97 : add [eax], al; call eax; add esp, 0x1c; ret
0x000037e6 : sub [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x000601c1 : mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x00001c63 : inc [ebx + 0xea8301c1]; add [eax], edi; ret
0x0001dfe3 : adc [ebx + 0x5e5b08c4], al; pop ebp; jmp eax
0x000310b3 : xor eax, eax; pop ebx; pop esi; pop ebp; ret
0x000233b3 : mov [esp + 4], eax; mov [esp], edi; call esi
0x0003dbc9 : sbb eax, eax; neg eax; pop esi; pop edi; ret
0x00009982 : mov [esp], eax; mov [esp + 8], ebx; call edx
0x000020a1 : mov eax, esi; pop ebx; pop esi; pop ebp; ret
0x0000d0a9 : mov bl, 1; add [ecx], dh; sar [ecx], cl; ret
0x0005f23b : add [eax + 0xfffe59e9], al; jmp [esi + 0x3d]
0x00060320 : mov eax, edx; pop esi; pop edi; pop ebp; ret
0x0005d381 : mov eax, [eax + 4]; add eax, [ebx]; call eax
0x000233b4 : inc esp; and al, 4; mov [esp], edi; call esi
0x000231f5 : inc esp; and al, 8; mov [esp], edi; call ebx
0x0000a172 : mov eax, esi; pop esi; pop edi; pop ebp; ret
0x00032359 : mov [esp], ecx; mov [esp + 4], edx; call eax
0x00030f29 : mov [esp + 4], edx; mov [esp], eax; call ebx
0x00052e57 : inc ebp; push es; add [eax], al; leave ; ret
0x00000dde : mov [esp], esi; mov [esp + 4], eax; call edx
0x0002d5bc : push eax; inc [ebx + 0x576fdfa]; leave ; ret
0x0004451c : mov [esp + 8], eax; mov [esp], edx; call edi
0x000206db : mov dh, 0; add [eax], al; add [ecx], ch; ret
0x0005161e : mov edx, [esi]; add edx, [eax + 4]; call edx
0x000158dc : add [eax + 0xfffafbbd], al; call [ebx + 0xf]
0x000420aa : add [ebx + 0xffef50bd], al; call [ebx + 0xf]
0x00045cc5 : mov [esp], ecx; mov [esp + 8], eax; call edi
0x000602d3 : pop esi; mov eax, edx; pop edi; pop ebp; ret
0x0001d8b7 : mov [eax + 0x20], ecx; pop ebx; pop ebp; ret
0x00002545 : mov [eax + 0x24], ecx; pop ebx; pop ebp; ret
0x00036849 : mov [esp + 4], edx; mov [esp], ecx; call ebx
0x000029d0 : mov eax, [edx]; mov [ecx], eax; pop ebp; ret
0x0000292b : pop ebx; add eax, esi; pop esi; pop ebp; ret
0x0000925f : mov [esp], edx; mov [esp + 4], ecx; call eax
0x000231f4 : mov [esp + 8], eax; mov [esp], edi; call ebx
0x0002ff67 : mov eax, [ebx + 8]; add eax, [edi]; call eax
0x0000ab39 : sub eax, ecx; pop ebx; pop esi; pop ebp; ret
0x00009191 : mov [esp], edi; mov [esp + 4], edx; call eax
0x00020cb5 : mov [esp + 8], eax; mov [esp], ebx; call ecx
0x000440fe : add ebx, [ebx + 0x5e]; pop edi; pop ebp; ret
0x00017e0e : mov eax, ecx; pop ebx; pop esi; pop ebp; ret
0x000202ec : sub eax, esi; pop esi; pop edi; pop ebp; ret
0x0001a7e7 : pop esi; pop edi; mov esp, ebp; pop ebp; ret
0x0005ce85 : mov [esp + 4], esi; mov [esp], ebx; call edx
0x0000a2ff : mov [esp], esi; mov [esp + 4], edx; call eax
0x00028366 : add [ebx + 0x37e00fa], al; mov eax, edx; ret
0x00020cb6 : inc esp; and al, 8; mov [esp], ebx; call ecx
0x0003df4d : mov [esp], edi; mov [esp + 8], ecx; call ebx
0x0000291c : sub eax, edx; pop ebx; pop esi; pop ebp; ret
0x0002936b : mov [esp], esi; mov [esp + 4], eax; call edi
0x00001e40 : mov eax, edx; pop ebx; pop esi; pop ebp; ret
0x0005d627 : pop ebx; pop esi; pop edi; pop ebp; ret 0x10
0x0002e5d4 : pop ebx; pop esi; pop edi; pop ebp; ret 0x14
0x0001d0b3 : adc [ebx + 0xec892440], cl; pop ebp; jmp eax
0x00000e03 : xor edx, gs:[0x18]; mov [esp], eax; call edx
0x0004451d : inc esp; and al, 8; mov [esp], edx; call edi
0x0000333e : inc eax; adc [ebx + 0x5d5b04c4], al; jmp eax
0x00022e61 : mov eax, [edi + 8]; mov [esp], eax; call esi
0x0003a215 : mov eax, ebx; pop ebx; pop esi; pop ebp; ret
0x00060c13 : mov eax, edi; pop esi; pop edi; pop ebp; ret
0x0000471b : add [ebx + 0x5e], ebx; pop edi; pop ebp; ret
0x000098c9 : mov [esp], ebx; mov [esp + 4], edx; call eax
0x00003423 : pop esi; sub eax, edi; pop edi; pop ebp; ret
0x00045b08 : mov [esp + 8], edx; mov [esp], eax; call edi
0x00031fab : mov [esp], eax; mov eax, [esp + 4]; ret 0x14
0x0003b799 : pop ebp; mov eax, [eax]; sub eax, [edx]; ret
0x00051603 : mov esi, ebx; mov ebx, eax; nop ; call [ebx]
0x0000b451 : mov [ebp + 0x489080c], ah; and al, 0xe8; ret
0x0000337d : mov dh, 0; add esp, 4; pop ebx; pop ebp; ret
0x0000b3f2 : movsd es:[edi], [esi]; or al, 8; pop ebp; ret
0x000556a9 : lea ebp, [edi + edi*8 + 0xffffffff]; call ebx
0x00027ddf : add [ebx + 0x438904c0], al; sub al, 0x83; ret
0x0003192b : inc [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret
0x00008999 : push [ecx]; rol [ebx + 0x5e5b50c4], 0x5d; ret
0x00028547 : add [eax + 0xffffffff], bh; leave ; nop ; ret
0x0003721f : adc [ebx + 0x538801c0], al; add al, 0x83; ret
0x0000fc1b : dec [ebp + 0x5e5bf465]; pop edi; pop ebp; ret
0x0005298c : push [ecx]; div [ecx]; jmp [ebp + 0xffffffc7]
0x0001167b : inc [ebx + 0x5e5b5cc4]; pop edi; pop ebp; ret
0x00062d42 : add [eax], al; mov [esp], esi; call [ebp + 8]
0x00033a1a : inc [ebx + 0x5e5b10c4]; pop edi; pop ebp; ret
0x0003684a : push esp; and al, 4; mov [esp], ecx; call ebx
0x00054a0d : lea ebx, [edi + edi*8 + 0xffffffff]; call ebx
0x00045b09 : push esp; and al, 8; mov [esp], eax; call edi
0x0005b921 : dec ebx; sbb ebx, edi; jmp [esi + 0xffffffbe]
0x00023756 : add [eax], al; pop ebx; pop esi; pop ebp; ret
0x000469ce : adc [eax], al; add [eax], al; add bl, ch; ret
0x0000a461 : inc [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret
0x0001ef6f : inc [ebx + 0x5e5b48c4]; pop edi; pop ebp; ret
0x000479af : add cl, [ebx + 0x4203fc55]; add al, 0xc9; ret
0x00050262 : inc [ecx + 0xa8c4]; add [ebx + 0x5d], bl; ret
0x00046674 : mov [ebp + 0xffffff4c], edx; call [ebp + 0xc]
0x000244cd : add cl, [edi]; mov es, [ecx + 0x1fffffd]; ret
0x0005be4f : adc [ebx + 0x5d8b04ec], al; cld ; leave ; ret
0x000627b5 : dec [ebp + 0x452b0445]; add al, 0xe8; jmp edi
0x00030f2a : push esp; and al, 4; mov [esp], eax; call ebx
0x0000c99e : add [eax], eax; add [eax], al; pop ebp; ret 4
0x0001c9dc : add [eax], al; mov [esp], ebx; call [eax + 8]
0x0000265b : add [eax], al; mov eax, [edx + 0x20]; jmp eax
0x00032074 : pop eax; dec esi; add [eax], eax; leave ; ret
0x0001ea22 : adc [ecx + 0x59890c59], cl; adc al, 0x89; ret
0x0000273b : add [eax], al; mov [eax + 8], 0; pop ebp; ret
0x0000496f : add [ebx + 0x428df8e2], al; clc ; pop ebp; ret
0x00012b69 : mov [ebp + 0xfffffff0], edx; call [edi + 0x1c]
0x00048551 : dec [ebx + 0xfffe40b5]; jmp [ebp + 0xffffff8b]
0x000146c4 : mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x000485f6 : dec [ebx + 0xfffe3cbd]; jmp [ebp + 0xffffff89]
0x00060580 : mov eax, [esp + 4]; mov eax, [eax + 0x48]; ret
0x00060690 : mov eax, [esp + 4]; mov eax, [eax + 0x58]; ret
0x00060631 : inc esp; and al, 4; mov eax, [eax + 0x50]; ret
0x0004e08a : dec [ebx + 0xfffe7495]; jmp [ebp + 0xffffff8b]
0x0000c3ed : add [ecx], esp; rcr [ebx + 0x5e]; pop ebp; ret
0x00060625 : inc esp; and al, 4; mov [eax + 0x4c], edx; ret
0x000083ad : mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x0005e61b : mov [ebp], edi; pop esi; pop edi; pop ebp; ret
0x000485a5 : dec [ebx + 0xfffe5cb5]; jmp [ebp + 0xffffff89]
0x0004ac13 : dec [ebx + 0xfffe3c8d]; jmp [ebp + 0xffffff89]
0x0000df7d : add [eax], al; add [ebp + 0x83a474c0], al; ret
0x0002b95d : push edi; fisttp [ecx + 0xffff7c9d]; jmp [ecx]
0x0000ad5c : mov edi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x0002332f : dec [ecx + 0xfffebc9d]; jmp [ebp + 0xffffff8b]
0x0001dfe4 : add esp, 8; pop ebx; pop esi; pop ebp; jmp eax
0x0000193e : add [eax], al; add [eax + 0x5d5f5e5b], al; ret
0x00060641 : inc esp; and al, 4; mov eax, [eax + 0x5c]; ret
0x0000efef : dec [ecx + 0xffff489d]; jmp [esi + 0xffffff90]
0x00060581 : inc esp; and al, 4; mov eax, [eax + 0x48]; ret
0x00009972 : add [eax], al; add [ebx + 0x5d5b0cc4], al; ret
0x000401ad : mov [ebp + 0xffffeed4], edx; call [eax + 0x1c]
0x0003a0c5 : add [eax], al; add [ebx + 0x5d5b10c4], al; ret
0x0005d0ff : add [ecx + 0x588bd84d], ecx; adc al, 0x39; ret
0x0002b99c : lea edi, [edi + edi*8 + 0xffffffff]; jmp [ebx]
0x00031058 : mov eax, [ecx]; pop ebx; pop esi; pop ebp; ret
0x0004edf5 : dec [ebx + 0xfffe688d]; jmp [ebp + 0xffffff8b]
0x0004c155 : dec [ecx + 0xfffe20b5]; jmp [ebp + 0xffffff8b]
0x00009594 : add [eax], al; add [ebx + 0x44c708c2], al; ret
0x000605f0 : mov eax, [esp + 4]; mov eax, [eax + 0x4c]; ret
0x00002b71 : mov ebp, esp; mov eax, [ebp + 8]; pop ebp; ret
0x000366ed : mov eax, [ebp + 8]; mov [esp], eax; call [ebx]
0x000605f1 : inc esp; and al, 4; mov eax, [eax + 0x4c]; ret
0x00000bd7 : lea esi, [ebx*4 + 0x80ca010]; nop ; call [esi]
0x00003fd9 : push [esi + 3]; movzx eax, [ecx]; pop ebp; ret
0x0004aab9 : dec [ebx + 0xfffe3cb5]; jmp [ebp + 0xffffff89]
0x0001da59 : inc ebp; or [ecx], al; fcomp [ebx + 0x5d]; ret
0x0004c8e6 : dec [ecx + 0xfffe50bd]; jmp [ebp + 0xffffff8b]
0x00008657 : dec [ebx + 0xfff74895]; jmp [ebp + 0xffffff83]
0x0000b38d : add [eax], al; add [ecx + 0x39d8f7f0], cl; ret
0x000164a9 : mov [ebp + 0xfffffaa4], edx; call [ecx + 0x1c]
0x00060630 : mov eax, [esp + 4]; mov eax, [eax + 0x50]; ret
0x00048085 : dec [ecx + 0xfffe148d]; jmp [ebp + 0xffffff8b]
0x00036e6b : mov [esp], edx; mov [esp + 8], eax; call [esi]
0x0002f24b : mov ebx, [ebp + 0xfffffffc]; leave ; nop ; ret
0x00011699 : add eax, [ebx + 0x538b01ee]; add al, 0x83; ret
0x00060640 : mov eax, [esp + 4]; mov eax, [eax + 0x5c]; ret
0x00002e0b : add [eax], al; add [ebx + 0x5d5b04c4], al; ret
0x0004a492 : dec [ebx + 0xfffe5cbd]; jmp [ebp + 0xffffff8b]
0x0004f0ee : dec [ebx + 0xfffe68b5]; jmp [ebp + 0xffffff8b]
0x00053e9f : dec [ebx + 0xffff4495]; jmp [esi + 0xffffff90]
0x0005e03e : pop esi; int 0xfa; inc [eax + 0x8900f37d]; ret
0x000450f7 : dec [ecx + 0xfffbecbd]; jmp [esi + 0xffffff90]
0x0004b141 : dec [ebx + 0xfffe70bd]; jmp [esi + 0xffffff89]
0x000606a0 : mov eax, [esp + 4]; mov eax, [eax + 0x54]; ret
0x00034988 : mov [esp], ecx; mov [esp + 8], eax; call [esi]
0x0000209e : add [eax], al; add [ecx + 0x5d5e5bf0], cl; ret
0x00060691 : inc esp; and al, 4; mov eax, [eax + 0x58]; ret
0x00032840 : mov edx, [ebx + 0xc]; mov [esp], edx; call eax
0x0004f2e8 : dec [ebx + 0xfffe68bd]; jmp [ebp + 0xffffff8b]
0x0004fbeb : leave ; cmp eax, 1; sbb eax, eax; not eax; ret
0x00049d9e : dec [ebx + 0xfffe70bd]; jmp [ebp + 0xffffff89]
0x000606a1 : inc esp; and al, 4; mov eax, [eax + 0x54]; ret
0x0003cc61 : mov [edi], ebx; pop ebx; pop esi; pop edi; ret
0x000503f6 : add [eax], al; add [ebx + 0x850ffefb], al; ret
0x0003bb1e : lea ebx, [esi + edi*8 + 0xffffffff]; jmp [ebx]
0x0001daf4 : mov eax, [ecx + 8]; sub eax, edx; pop ebp; ret
0x000112fd : lea edi, [edi + edi*8 + 0xffffffff]; jmp [eax]
0x0000abf8 : add [eax + 0x2b], eax; inc esp; and al, 4; ret
0x00000bd9 : popfd ; adc [eax + 0x9066080c], ah; call [esi]
0x0004d7d0 : dec [ecx + 0xfffe5095]; jmp [ebp + 0xffffff8b]
0x00002a50 : mov esi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x0004decd : dec [ebx + 0xfffe549d]; jmp [ebp + 0xffffff89]
0x000159cf : mov [ebp + 0xfffffaa0], ecx; call [eax + 0x1c]
0x00017aea : dec [ebx + 0xfffb648d]; jmp [esi + 0xffffffbf]
0x0000def0 : add [eax], al; add [ebp + 0x830b74ff], al; ret
0x00023504 : mov [esp + 0xc], eax; mov [esp], edi; call esi
0x0000e96a : inc edx; test al, 0xff; jmp [esi + 0xffffff90]
0x0004aa89 : dec [ebx + 0xfffe3c95]; jmp [ebp + 0xffffff89]
0x00060624 : mov eax, [esp + 4]; mov [eax + 0x4c], edx; ret
0x0006031d : add [eax], al; add [ecx + 0x5d5f5ed0], cl; ret
0x00028374 : add [eax], al; add [ebp + 0xf30274c0], al; ret
0x0004568f : add [eax], al; add [ecx + 0xebd2311a], cl; ret
0x0004b298 : dec [ecx + 0xfffe70bd]; jmp [ebp + 0xffffff89]
0x00022467 : dec [ecx + 0xfffbd4b5]; jmp [esi + 0xffffff90]
0x000316bd : add [eax], al; add [ecx + 0x39028bc2], cl; ret
0x00010974 : add [ecx], ch; ror [ecx + 0x83fbd1c7], cl; ret
0x0003c6ae : add [eax], al; add [ebx + 0x5d5bffc8], al; ret
0x00052e88 : xchg eax, esp; xor eax, [eax]; add cl, cl; ret
0x00032358 : adc [ecx + 0x5489240c], cl; and al, 4; call eax
0x00030808 : dec [ebx + 0x68b0855]; add eax, [edx]; call eax
0x00060772 : add [eax], eax; add [ecx + 0x5d5f5ef0], cl; ret
0x00002589 : xor eax, eax; add esp, 8; pop ebx; pop ebp; ret
0x00013ad8 : mov edi, [ebp + 0xfffffac4]; call [ecx + edi*4]
0x00061bf1 : mov eax, [esp + 0x2c]; mov [esp], eax; call edx
0x00044a9c : push es; add [esi + eax + 0xffffff83], esi; ret
0x00044225 : mov ah, 0; add [eax], al; pop ebx; pop ebp; ret
0x0001d31e : add esp, 8; xor eax, eax; pop ebx; pop ebp; ret
0x0004fbea : dec ecx; cmp eax, 1; sbb eax, eax; not eax; ret
0x00060c10 : add [eax], eax; add [ecx + 0x5d5f5ef8], cl; ret
0x00001121 : add esp, 8; mov eax, edx; pop ebx; pop ebp; ret
0x0005e800 : mov eax, [edx + 0x58]; add esp, 8; pop ebx; ret
0x00060cea : mov eax, [esp + 0x18]; mov [esp], eax; call edx
0x0003cc59 : pop es; pop eax; pop ebx; pop esi; pop edi; ret
0x0005bd20 : pop ebp; cmp eax, 1; sbb eax, eax; not eax; ret
0x0003c41b : add [eax], al; sub eax, edx; sar eax, 0x10; ret
0x00028528 : xor eax, eax; leave ; nop ; lea esi, [esi]; ret
0x00000fff : add esp, 4; mov eax, edx; pop ebx; pop ebp; ret
0x000619d6 : mov eax, [esp + 0x28]; mov [esp], eax; call edx
0x0000966c : mov eax, ebx; add esp, 4; pop ebx; pop ebp; ret
0x00013710 : mov ecx, [ebp + 0xfffffb44]; call [ecx + edx*4]
0x00005f95 : add [eax + 0x8b417501], ch; add ebp, [ecx]; ret
0x00008396 : call [eax + 0xffffe8b8]; jmp [ebp + 0xffffffc7]
0x00032bfc : mov eax, [edx]; mov eax, [eax + 4]; leave ; ret
0x0003ded0 : add edi, eax; mov [esp], edi; call [ebp + 0x14]
0x0005e7f8 : mov eax, [edx + 0x54]; add esp, 8; pop ebx; ret
0x000479b1 : push ebp; cld ; add eax, [edx + 4]; leave ; ret
0x00027b10 : mov eax, ebx; add esp, 8; pop ebx; pop ebp; ret
0x0001d5f0 : add [eax], eax; add [ecx + 0x5d5e5bf0], cl; ret
0x00028539 : add [eax], ah; add [eax], al; leave ; nop ; ret
0x00000ddd : add [ecx + 0x44892434], cl; and al, 4; call edx
0x00030a36 : add [eax], eax; add [ecx + 0x8303ebc3], cl; ret
0x00007848 : pop esp; or [edi + esi*8], al; shl [ecx], 1; ret
0x0002cbc6 : mov eax, esi; pop esi; pop edi; pop ebp; ret 0xc
0x00020c72 : add [eax], al; mov [esp], ebx; call [eax + 0x40]
0x0001f96b : add [eax], al; mov [esp], ebx; call [eax + 0x24]
0x00053923 : mov [eax], es; add [eax], al; add [ecx], al; ret
0x00002e0c : add [eax], al; add esp, 4; pop ebx; pop ebp; ret
0x00002d88 : add [eax], al; mov [esp], ebx; call [eax + 0x34]
0x00009b24 : dec eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x000605d3 : mov [edx + eax*4], ecx; add esp, 8; pop ebx; ret
0x0000261e : add [eax], al; mov [esp], ebx; call [eax + 0x10]
0x0000f976 : dec [edi]; test bl, [ecx + 0x89000002]; ret 0x8b
0x00028be5 : add [eax], al; add [edi], cl; xchg eax, ebp; ret
0x0001c0bd : add [ebp + 0x4f], esi; mov eax, edx; leave ; ret
0x0005e7e9 : inc edx; pop esp; add esp, 8; pop ebx; nop ; ret
0x0004fc5c : inc eax; sbb [ecx + 0xfc5d8b02], cl; leave ; ret
0x000028bb : inc [ebx + 0xc483ef23]; or [ebx + 0x5d], bl; ret
0x00001e01 : add [eax], al; mov [esp], ebx; call [eax + 0x30]
0x0002df72 : pushal ; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000b02f : add [ebp + 0x890274d2], 2; pop ebx; pop ebp; ret
0x000394b0 : push ebp; mov eax, 1; mov ebp, esp; pop ebp; ret
0x0000921b : add [eax], al; add esp, 8; pop ebx; pop ebp; ret
0x00028169 : stosb es:[edi], al; std ; jmp [ebp + 0xffffffa1]
0x00023981 : add [eax + 8], 1; pop ebx; pop esi; pop ebp; ret
0x0001167e : pop esp; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001fe27 : pop ebx; pop ebp; mov eax, [eax + 0x10]; jmp eax
0x00004010 : mov eax, ecx; sub eax, [edx + 0xc]; pop ebp; ret
0x0000966b : add [ecx + 0x4c483d8], cl; pop ebx; pop ebp; ret
0x00002736 : mov [eax + 4], 0; mov [eax + 8], 0; pop ebp; ret
0x00061d78 : add bl, [ecx]; rol [ebx + 0x5f5e30c4], 0x5d; ret
0x00003959 : add [eax], al; mov [esp], ebx; call [eax + 0x2c]
0x00021434 : add [eax], al; mov [esp], ebx; call [eax + 0x44]
0x0003959c : pop eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x000236d9 : inc ebp; adc [ecx + 0xf8458b10], cl; leave ; ret
0x00023744 : xchg eax, esp; rol [ebx + 0x5e5b0cc4], 0x5d; ret
0x00039302 : inc eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x0003c3ca : sub edx, ecx; not eax; and eax, edx; leave ; ret
0x00000d2f : mov [edx + 0xc], ebp; mov [edx + 0x18], eax; ret
0x00001856 : pop ebx; pop esi; pop edi; neg eax; pop ebp; ret
0x0001c9d6 : mov [esp + 4], 0; mov [esp], ebx; call [eax + 8]
0x00051f11 : div bh; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x000482ec : pop ecx; pop ebx; pop esi; pop edi; pop ebp; ret
0x0002936a : add ecx, [ecx + 0x44892434]; and al, 4; call edi
0x000446c2 : add [eax], al; mov [esp], esi; call [eax + 0x40]
0x00010399 : dec esp; pop ebx; pop esi; pop edi; pop ebp; ret
0x0004f6ee : add [eax + 0xffffffa8], al; or al, 8; leave ; ret
0x000350fb : push eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x000522da : push esp; pop ebx; pop esi; pop edi; pop ebp; ret
0x00028a4f : add [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret
0x0005e8e4 : mov [ebx + 0xffffa034], cs; add ecx, ebx; jmp ecx
0x000121de : adc [eax + 0xffffffff], bh; pop ebx; pop ebp; ret
0x0000463e : inc [ebx + 0xc483080b]; adc [ebx + 0x5d], bl; ret
0x00008bff : add [ebx + 0x5e5b18c4], al; pop edi; pop ebp; ret
0x00002927 : add [ebx + 0x15b0845], cl;  pop esi; pop ebp; ret
0x000601c4 : add [ecx], al; add [eax], al; add esp, 0x10c; ret
0x00000b5d : add [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret
0x0006057f : add [ebx + 0x8b042444], cl; inc eax; dec eax; ret
0x00001120 : add [ebx + 0xd08908c4], al; pop ebx; pop ebp; ret
0x0006068f : add [ebx + 0x8b042444], cl; inc eax; pop eax; ret
0x000602d2 : add [esi + 0xffffff89], bl; rcr [edi + 0x5d]; ret
0x0006032d : add [ecx + 0xd0895ec2], cl; pop edi; pop ebp; ret
0x00044222 : add [ecx + 0xb4c4], al; add [ebx + 0x5d], bl; ret
0x0003ab6b : add [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret
0x00023755 : add [eax], al; add [ebx + 0x5e], bl; pop ebp; ret
0x00050340 : add [ecx + 0xa8c4], al; add [ebx + 0x5d], bl; ret
0x00039ad0 : sbb [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x0003c7a6 : add al, [ebx + 0x5e5b01e8]; pop edi; pop ebp; ret
0x0005fcc4 : add [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret
0x00023ad5 : sbb [ebx + 0x5e5b14c4], al; pop edi; pop ebp; ret
0x00022bf8 : add eax, [edx + edx*8 + 0x4040d375]; inc eax; ret
0x0005e87d : mov [ecx + 0x2071], 4; mov [ecx + 0x2070], 4; ret
0x0000512d : xor [ebx + 0x5e5b20c4], al; pop edi; pop ebp; ret
0x0001d8ec : mov [edx], ecx; add esp, 4; pop ebx; pop ebp; ret
0x0000c818 : add [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret
0x00002288 : add [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x00025cfc : add [ebx + 0x5e5b24c4], al; pop edi; pop ebp; ret
0x00034656 : xor [ebx + 0x5e5b14c4], al; pop edi; pop ebp; ret
0x00001197 : add [ecx + 0x10c483d8], cl; pop ebx; pop ebp; ret
0x0001eff1 : add al, [ebx + 0x5e5b48c4]; pop edi; pop ebp; ret
0x0001d31d : add al, [ebx + 0xc03108c4]; pop ebx; pop ebp; ret
0x0002c56f : adc [ebx + 0x5e5b10c4], al; pop edi; pop ebp; ret
0x00047fba : add cl, [ebp + 0x105c084]; or [eax], ecx; jmp eax
0x00005519 : add [ebx + 0x5e5b10c4], al; pop edi; pop ebp; ret
0x00009966 : adc [ebx + 0xc0310cc4], al; pop ebx; pop ebp; ret
0x0003db6a : add cl, [ebp + 0x5cb5c084]; or [eax], cl; jmp eax
0x0000496e : add es:[ebx + 0x428df8e2], al; clc ; pop ebp; ret
0x00039599 : add [ebx + 0x5e5b58c4], al; pop edi; pop ebp; ret
0x00011183 : add [ebx + 0x5e5b20c4], al; pop edi; pop ebp; ret
0x00033def : add [ebx + 0x5e5b14c4], al; pop edi; pop ebp; ret
0x00022bb4 : add [ecx + eax + 0x40], dh; pop edi; pop esi; ret
0x0002d396 : adc [ebx + 0x5e5b18c4], al; pop edi; pop ebp; ret
0x00002929 : inc ebp; or [ebx + 1], bl;  pop esi; pop ebp; ret
0x00000ffe : add [ebx + 0xd08904c4], al; pop ebx; pop ebp; ret
0x0006063f : add [ebx + 0x8b042444], cl; inc eax; pop esp; ret
0x00036848 : add [ecx + 0x89042454], cl; or al, 0x24; call ebx
0x00020962 : add al, [ebx + 0x5e5b10c4]; pop edi; pop ebp; ret
0x000605ef : add [ebx + 0x8b042444], cl; inc eax; dec esp; ret
0x0001e63d : lea esi, [esi]; add esp, 4; pop ebx; pop ebp; ret
0x00044277 : mov eax, [eax + 0x24]; mov eax, [eax + 0x28]; ret
0x00021a7a : add [ecx + ecx*8 + 0x5e5bf175], eax; pop ebp; ret
0x0003ddac : mov edi, [esp + 0x1c]; mov esp, ebp; pop ebp; ret
0x0000bf5f : add eax, [ebp + 0x5ef175c0]; pop ebx; pop edx; ret
0x00046e43 : adc [ebp + 0x5e5bf465], ecx; pop edi; pop ebp; ret
0x00023503 : add [ecx + 0x890c2444], cl; cmp al, 0x24; call esi
0x00004847 : mov [esi + 0x80c], dh; add [eax], al; pop ebp; ret
0x0001ccb9 : xchg eax, ebx; fdivp st(6); jmp [esi + 0xffffff83]
0x000442f1 : sub [ecx + 0x89042444], cl; cmp al, 0x24; call esi
0x0006024e : inc esp; and al, 8; mov [esp + 0xc], edx; call ecx
0x00023a3a : push cs; add [eax], al; pop ebp; add eax, ecx; ret
0x00025557 : xor [ebx + 0xffff50bd], cl; jmp [esi + 0xffffff90]
0x0004bcfb : add [ebx + 0xfffe7095], cl; jmp [ebp + 0xffffffc7]
0x0004cf91 : add [ebx + 0xfffe70bd], cl; jmp [ebp + 0xffffffc7]
0x0001839f : pop edi; pop ebp; lea esp, [ecx + 0xfffffffc]; ret
0x0004725c : add [ecx + 0x858bc445], cl; sar ch, 0xff; call ecx
0x0004b553 : add [ebx + 0xfffe5cbd], cl; jmp [esi + 0xffffffba]
0x000145f7 : add [ecx + 0xfffb64a5], cl; jmp [ebp + 0xffffff8b]
0x0006062f : add [ebx + 0x8b042444], cl; inc eax; push eax; ret
0x0000071b : mov [esp + 4], edx; mov [esp], ecx; call [ebp + 8]
0x000443a3 : add [ecx + 0x89042444], cl; cmp al, 0x24; call esi
0x000310e7 : add [ecx + 0xfffdc085], cl; jmp [esi + 0xffffff90]
0x0001fdfa : mov edi, [esp + 8]; mov esp, ebp; pop ebp; jmp eax
0x000231f3 : add [ecx + 0x89082444], cl; cmp al, 0x24; call ebx
0x0000008a : inc esp; and al, 4; mov [esp], 0x80ca880; call edx
0x000457f6 : inc edx; add [ebp + 0xffffffd6], esi; pop ebp; ret
0x00046a78 : leave ; test eax, eax; sete al; movzx eax, al; ret
0x0000842e : add [ebx + 0xfff74895], cl; jmp [ebp + 0xffffff83]
0x0000fc27 : add [ebx + 0xfffe5c9d], cl; jmp [esi + 0xffffff90]
0x00000089 : mov [esp + 4], eax; mov [esp], 0x80ca880; call edx
0x0000ac16 : sbb eax, eax; or al, 1; pop esi; mov edi, edx; ret
0x0002f2ad : inc [ebp + 0x8b0578c0]; pop ebp; cld ; leave ; ret
0x00028f17 : add [ebx + 0xf883f845], cl; jmp [esi + 0xffffff90]
0x0006024d : mov [esp + 8], eax; mov [esp + 0xc], edx; call ecx
0x0004da46 : add [ebx + 0xfffe708d], cl; jmp [ebp + 0xffffffc7]
0x0006069f : add [ebx + 0x8b042444], cl; inc eax; push esp; ret
0x000080a2 : add [eax], al; xor eax, eax; pop ebx; pop ebp; ret
0x000397f0 : adc [ebx + 0x5e5b58c4], eax; pop edi; pop ebp; ret
0x00053171 : adc [ebx + 0x5e5b28c4], eax; pop edi; pop ebp; ret
0x00056087 : add [ebx + 0x851c247c], cl; jmp [esi + 0xffffff90]
0x0006060d : pop ds; mov [ecx], eax; mov eax, [edx + 0x4c]; ret
0x000440fd : add al, 3; pop ebx; pop esi; pop edi; pop ebp; ret
0x00002830 : push ebp; xor eax, eax; mov ebp, esp; pop ebp; ret
0x0004451b : add [ecx + 0x89082444], cl; adc al, 0x24; call edi
0x0005f24f : add [ebx + 0x1c890cec], al; and al, 0xe8; ret 0x19
0x0003c0d3 : inc ecx; sbb [ebx], al; inc ecx; adc al, 0x39; ret
0x00022d5a : add ecx, [ecx + 0x5e5b084f]; pop edi; pop ebp; ret
0x00016f56 : add [ecx + 0xfffb50a5], cl; jmp [ebp + 0xffffff8b]
0x00010bf2 : add al, 0; add [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x0003c7a7 : sub eax, 1; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001f965 : mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x00062a62 : mov eax, 8; pop ebx; pop esi; pop edi; pop ebp; ret
0x00039717 : mov eax, 6; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000071c : push esp; and al, 4; mov [esp], ecx; call [ebp + 8]
0x0001d11c : xor [ecx + 0xffffffff], al; call [ebp + 0xffffff89]
0x0005fe3f : mov eax, 3; pop ebx; pop esi; pop edi; pop ebp; ret
0x00060e3e : add [eax], al; add esp, 8; mov eax, 2; pop ebx; ret
0x00005985 : add [ecx + 0x28c483d8], cl; pop ebx; pop ebp; ret 4
0x00003953 : mov [esp + 4], 0; mov [esp], ebx; call [eax + 0x2c]
0x00027f25 : add al, 3; add cl, [ebx + 0xec89241c]; pop ebp; ret
0x0001ee58 : sub eax, edi; mov [esp + 8], eax; call [edx + 0x38]
0x0002f464 : add bh, al; inc eax; or [eax + 0xe90807a0], dl; ret
0x0000cd12 : mov eax, 1; pop ebx; pop esi; pop edi; pop ebp; ret
0x00004e9c : add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret
0x0003f582 : add [eax], al; mov [ebp + 0xffffefb4], edi; jmp eax
0x00013dab : add [eax], al; mov [ebp + 0xfffffb78], edi; jmp eax
0x00013b48 : sub eax, edx; mov [esp + 8], eax; call [ecx + 0x1c]
0x0000131d : add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000337c : movzx eax, [eax]; add esp, 4; pop ebx; pop ebp; ret
0x000446bc : mov [esp + 8], 0; mov [esp], esi; call [eax + 0x40]
0x00002b2e : add [eax], al; push ebp; mov ebp, esp; pop ebp; ret
0x0005c6f0 : add [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret 8
0x0000abf6 : add [ecx + eax + 0x40], dh; sub eax, [esp + 4]; ret
0x00020e06 : mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x40]
0x00022d5c : dec edi; or [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00002b2a : lea esi, [esi]; push ebp; mov ebp, esp; pop ebp; ret
0x000368f2 : mov eax, [ebp + 0xc]; mov [esp + 4], eax; call [ebx]
0x00030ca1 : mov eax, [ebp + 0xc]; mov [esp], eax; call [ebp + 8]
0x0000aeae : add bh, bh; add [ecx + eax + 0x40], dh; pop edi; ret
0x000112f9 : add [eax], al; add [ebx + 0xffff7c8d], al; jmp [eax]
0x0003f2bc : mov [esp + 8], ecx; mov [esp], ebx; call [edx + edi]
0x0005d380 : pop es; mov eax, [eax + 4]; add eax, [ebx]; call eax
0x000029e9 : pop ebp; mov eax, [eax + 8]; sub eax, [edx + 8]; ret
0x00030836 : mov [ebp + 0xffffff80], ecx; call [ebp + 0xffffffb8]
0x00038e17 : mov eax, [ebx + 0xc]; mov [esp], eax; call [ebx + 4]
0x000605ee : add es:[ebx + 0x8b042444], cl; inc eax; dec esp; ret
0x0001e6d3 : mov [esp], esi; mov [esp + 8], edx; call [esi + 0xc]
0x00002c67 : add [ebx + 0xc483fe23], al; or [ebx + 0x5d], bl; ret
0x0004fb7b : mov ebx, [ebp + 0xfffffffc]; sub esp, 4; leave ; ret
0x000320ab : mov edi, 0; mov eax, [eax + 4]; sub eax, gs:[0]; ret
0x0001dc9b : mov eax, [eax + 0xc]; mov esp, ebp; pop ebp; jmp eax
0x00028a4e : add es:[ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret
0x00034cf8 : mov eax, [ebp + 0xc]; mov [esp + 4], eax; call [edi]
0x0000ab38 : leave ; sub eax, ecx; pop ebx; pop esi; pop ebp; ret
0x0006068e : add es:[ebx + 0x8b042444], cl; inc eax; pop eax; ret
0x00025469 : add [eax], al; add [ecx], dh; jmp [esi + 0xffffff90]
0x000347e7 : mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x00060e3a : lea esi, [esi]; add esp, 8; mov eax, 2; pop ebx; ret
0x000601c0 : dec esp; mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x0005161d : pop es; mov edx, [esi]; add edx, [eax + 4]; call edx
0x00001c62 : pop edx; inc [ebx + 0xea8301c1]; add [eax], edi; ret
0x00001855 : xor [ebx + 0x5e], bl; pop edi; neg eax; pop ebp; ret
0x0003f2bd : dec esp; and al, 8; mov [esp], ebx; call [edx + edi]
0x0003741f : mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x0005be50 : sub esp, 4; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x000320ce : add [eax], eax; pop edx; pop ecx; pop eax; jmp [eax]
0x0000c666 : add es:[ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x000131f2 : dec [ecx + 0x5489241c]; and al, 4; call [eax + 0x1c]
0x0005c792 : stosb es:[edi], al; inc esp; std ; call [esi + 0x56]
0x00017f5c : inc esi; xor [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0001f5d7 : mov [esp + 8], eax; mov [esp], ebx; call [edx + 0x40]
0x00020f20 : dec esp; and al, 8; mov [esp], ebx; call [edx + 0x40]
0x00001f7c : mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x00002884 : add eax, [ebx + 0xc483ef23]; or [ebx + 0x5d], bl; ret
0x0003e132 : mov [esp + 4], esi; mov [esp], ebx; call [ebp + 0x14]
0x000114d3 : mov [esp], eax; mov [esp + 4], edi; call [ebp + 0x18]
0x0001296b : mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret
0x000333ca : mov [esp], eax; mov edx, [ebp + 0xffffffb4]; call edx
0x000202eb : pop ebx; sub eax, esi; pop esi; pop edi; pop ebp; ret
0x0001e05e : dec [ebx + 0x8c48302]; pop ebx; pop esi; pop ebp; ret
0x000203e2 : mov [esp + 4], esi; mov [esp], ebx; call [eax + 0x3c]
0x000127e5 : mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001d9aa : mov [esp + 4], eax; mov [esp], ebx; call [edx + 0x18]
0x000114f5 : mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret
0x0003deee : inc esp; and al, 8; mov [esp], edx; call [ebp + 0x14]
0x00029543 : mov [esp + 4], eax; mov [esp], ecx; call [ebp + 0x10]
0x000006d4 : mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0x14]
0x00032ea9 : mov ecx, [ebp + 0xffffffe0]; mov [esp], ecx; call esi
0x0002029b : mov [esp + 4], edi; mov [esp], ebx; call [eax + 0x38]
0x0001dfe2 : inc eax; adc [ebx + 0x5e5b08c4], al; pop ebp; jmp eax
0x00020f1f : mov [esp + 8], ecx; mov [esp], ebx; call [edx + 0x40]
0x000615ba : inc eax; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x0002091d : inc esp; and al, 4; mov [esp], ebx; call [ecx + 0x38]
0x000460c2 : mov [ebp + 0xffffffec], ecx; mov [esp], edx; call eax
0x0001fc0d : mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x48]
0x000202ea : sbb [ebx + 0x29], bl;  pop esi; pop edi; pop ebp; ret
0x0001e917 : mov edx, esi; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000261b : adc [eax + eax + 0x1c890000], 0x24; call [eax + 0x10]
0x00008641 : pop eax; idiv edi; inc [ebx + 0xfff75c85]; call [eax]
0x00012cc8 : inc esp; and al, 4; mov [esp], ebx; call [ecx + 0x1c]
0x0003df1f : mov [esp], ebx; mov [esp + 8], edx; call [ebp + 0x14]
0x00008d1c : mov edx, [ebp + 0xffffffec]; mov [esp], edx; call eax
0x0002018f : mov [esp], esi; mov [esp + 8], ebx; call [eax + 0x20]
0x00020b93 : inc esp; and al, 4; mov [esp], ebx; call [edx + 0x48]
0x00030c9e : dec [ecx + 0xc458b02]; mov [esp], eax; call [ebp + 8]
0x0001d0b4 : mov eax, [eax + 0x24]; mov esp, ebp; pop ebp; jmp eax
0x0001f9ed : mov [esp + 8], esi; mov [esp], edi; call [eax + 0x40]
0x00020b58 : inc esp; and al, 8; mov [esp], ebx; call [ecx + 0x40]
0x0001cfe9 : mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x00003422 : pop ebx; pop esi; sub eax, edi; pop edi; pop ebp; ret
0x00029544 : inc esp; and al, 4; mov [esp], ecx; call [ebp + 0x10]
0x0001a7e6 : pop ebx; pop esi; pop edi; mov esp, ebp; pop ebp; ret
0x00041ed3 : mov [esp + 8], edi; mov [esp], ebx; call [eax + 0x1c]
0x00020457 : inc esp; and al, 8; mov [esp], ebx; call [edi + 0x40]
0x00030c15 : mov [esp], edi; mov [ebp + 0xffffffe0], ecx; call esi
0x0000fc26 : add es:[ebx + 0xfffe5c9d], cl; jmp [esi + 0xffffff90]
0x00002d85 : adc [eax + eax + 0x1c890000], 0x24; call [eax + 0x34]
0x0003e60b : pop esp; and al, 8; mov [esp], ecx; call [eax + 0x1c]
0x0003bb1a : add eax, [eax]; add [ebx + 0xfffe5c8d], cl; jmp [ebx]
0x00015aa7 : mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x1c]
0x00012cc7 : mov [esp + 4], eax; mov [esp], ebx; call [ecx + 0x1c]
0x00020b92 : mov [esp + 4], eax; mov [esp], ebx; call [edx + 0x48]
0x00062751 : mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret
0x00060308 : mov [esp + 0xc], edi; mov [esp + 0x28], eax; call ecx
0x00004ebb : xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x00060e4e : add [eax], al; add esp, 8; xor eax, eax; pop ebx; ret
0x00002699 : mov [esp], eax; mov [esp + 4], ecx; call [edx + 0x24]
0x0001d737 : mov [esp + 4], esi; mov [esp], ebx; call [eax + 0x1c]
0x0002091c : mov [esp + 4], eax; mov [esp], ebx; call [ecx + 0x38]
0x00020b57 : mov [esp + 8], eax; mov [esp], ebx; call [ecx + 0x40]
0x0005297b : mov edx, edi; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001e9b3 : inc esp; and al, 4; mov [esp], edi; call [edx + 0x48]
0x0004424e : movzx edx, dl; sub edx, 1; and eax, edx; pop ebp; ret
0x00008f8d : mov edx, [ebp + 0xfffffff0]; mov [esp], edx; call eax
0x0003e60a : mov [esp + 8], ebx; mov [esp], ecx; call [eax + 0x1c]
0x0001f5d8 : inc esp; and al, 8; mov [esp], ebx; call [edx + 0x40]
0x00002876 : mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x18]
0x0005e7e8 : mov eax, [edx + 0x5c]; add esp, 8; pop ebx; nop ; ret
0x00020456 : mov [esp + 8], eax; mov [esp], ebx; call [edi + 0x40]
0x0001e8f8 : mov [esp + 8], eax; mov [esp], edi; call [ecx + 0x40]
0x00006f20 : mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret
0x00001dfe : adc [eax + eax + 0x1c890000], 0x24; call [eax + 0x30]
0x0003deed : mov [esp + 8], eax; mov [esp], edx; call [ebp + 0x14]
0x0001e9b2 : mov [esp + 4], eax; mov [esp], edi; call [edx + 0x48]
0x00002657 : mov edx, [eax + 0x94]; mov eax, [edx + 0x20]; jmp eax
0x0000a171 : pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x00028f35 : adc [ebx + 0xffffff8b], dl; pop ebp; or al, 0xb8; ret
0x00000f43 : mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret
0x0003d062 : mov eax, ebp; pop ebx; pop ebp; pop esi; pop edi; ret
0x000299ac : mov eax, [ebp + 8]; mov [esp], eax; call [ebp + 0x10]
0x0001903b : mov [esp], edi; mov [ebp + 0xffffff38], edx; call ecx
0x00020c6c : mov [esp + 0xc], 0; mov [esp], ebx; call [eax + 0x40]
0x0001d9ab : inc esp; and al, 4; mov [esp], ebx; call [edx + 0x18]
0x0001d0b2 : dec ebp; adc [ebx + 0xec892440], cl; pop ebp; jmp eax
0x00021431 : adc [eax + eax + 0x1c890000], 0x24; call [eax + 0x44]
0x0003feb4 : dec esp; and al, 4; mov [esp], ebx; call [eax + 0x1c]
0x00028f16 : add es:[ebx + 0xf883f845], cl; jmp [esi + 0xffffff90]
0x00021d30 : sub eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001e8f9 : inc esp; and al, 8; mov [esp], edi; call [ecx + 0x40]
0x00023982 : inc eax; or [ecx], al; pop ebx; pop esi; pop ebp; ret
0x0000263b : mov [ebx + 4], edx; add esp, 4; pop ebx; pop ebp; ret
0x0003feb3 : mov [esp + 4], ecx; mov [esp], ebx; call [eax + 0x1c]
0x0006062e : add es:[ebx + 0x8b042444], cl; inc eax; push eax; ret
0x000006d5 : dec esp; and al, 4; mov [esp], eax; call [ebp + 0x14]
0x000206d7 : adc bl, ch; xor ecx, [ebp + 0xb6]; add [ecx], ch; ret
0x0003c25a : adc [ebp + 0x650974d2], al; add eax, [0]; pop ebp; ret
0x0005be4e : inc ebx; adc [ebx + 0x5d8b04ec], al; cld ; leave ; ret
0x0001ea21 : pop ecx; adc [ecx + 0x59890c59], cl; adc al, 0x89; ret
0x000482e8 : dec [ebp + 0x5b59f065]; pop esi; pop edi; pop ebp; ret
0x0005ced6 : inc esp; and al, 4; mov [esp], edx; call [edi + ebx*4]
0x0001dc0c : mov [eax + 0x24], 0; add esp, 4; pop ebx; pop ebp; ret
0x00002e07 : mov [ebx + 0x28], 0; add esp, 4; pop ebx; pop ebp; ret
0x0004fccc : add al, [eax]; add [ecx + 0xfc5d8b02], cl; leave ; ret
0x0003f2bb : dec [ecx + 0x8908244c]; sbb al, 0x24; call [edx + edi]
0x00060e4a : lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret
0x0005ced5 : mov [esp + 4], eax; mov [esp], edx; call [edi + ebx*4]
0x00002877 : push esp; and al, 4; mov [esp], ebx; call [eax + 0x18]
0x000615b7 : inc [ebx + 0xf08940c4]; pop esi; pop edi; pop ebp; ret
0x00044451 : push esp; mov [esp + 4], eax; mov [esp], edi; call esi
0x0000ab40 : movzx eax, cl; neg eax; pop ebx; pop esi; pop ebp; ret
0x00000e06 : sbb [eax], al; add [eax], al; mov [esp], eax; call edx
0x00015aa8 : push esp; and al, 4; mov [esp], ebx; call [eax + 0x1c]
0x00062e67 : sub [eax], al; add [eax], al; mov [esp], eax; call edi
0x00032a0d : add [eax], al; add [eax], al; mov [esp], eax; call edi
0x0005cff5 : mov [esp + 4], edx; mov [esp], eax; call [esi + ebx*4]
0x00011244 : inc ebp; clc ; ldmxcsr [ebp + 0xfffffff8]; leave ; ret
0x0000bf87 : add [eax], al; add ch, cl; sbb [edx + 0x59], 0x5b; ret
0x000406fd : add eax, [eax]; add [ebx + 0xffef84bd], al; call [eax]
0x000087ea : add [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x000225c4 : add al, 0; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0001fc0e : push esp; and al, 4; mov [esp], ebx; call [eax + 0x48]
0x00046a77 : add cl, cl; test eax, eax; sete al; movzx eax, al; ret
0x00029408 : add al, [eax]; add [eax], al; mov [esp], ebx; call edi
0x0001a7e3 : add [ecx + 0x5f5e5bf8], cl; mov esp, ebp; pop ebp; ret
0x000310a4 : add esp, 8; mov eax, 1; pop ebx; pop esi; pop ebp; ret
0x000469cd : inc ebx; adc [eax], al; add [eax], al; add bl, ch; ret
0x0001cb6a : add [eax + 0xfffffff5], ah; or cl, [eax]; pop ebp; ret
0x000293c4 : add [eax], al; add [eax], al; mov [esp], ebx; call edi
0x000291bf : add [ebp + 0x8b0378d2], al; inc ebp; clc ; leave ; ret
0x00041081 : add [eax], eax; add [ebx + 0xffef88bd], al; call [eax]
0x00002a20 : mov eax, [ebx + 8]; sub eax, ecx; pop ebx; pop ebp; ret
0x0000209a : add [ecx + 0xb4c4], al; add [ecx + 0x5d5e5bf0], cl; ret
0x00030fca : mov [ecx + 4], eax; mov eax, ecx; pop ebx; pop ebp; ret
0x0000bf88 : add [eax], al; int 0x80; pop edx; pop ecx; pop ebx; ret
0x000320ae : add [eax], al; mov eax, [eax + 4]; sub eax, gs:[0]; ret
0x000236c9 : xchg eax, ebx; test [eax], 0; xor eax, eax; leave ; ret
0x0002f24a : push es; mov ebx, [ebp + 0xfffffffc]; leave ; nop ; ret
0x00004d11 : add [eax], al; add [ebx + 0x5e5b24c4], al; pop ebp; ret
0x0001c84e : add [eax], eax; add [eax], al; mov [esp], ebx; call ecx
0x00000bd6 : adc ecx, [ebp + 0xa0109d34]; or al, 8; nop ; call [esi]
0x0003cc58 : mov [edi], eax; pop eax; pop ebx; pop esi; pop edi; ret
0x0000e7ff : mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x00041ed2 : dec [ecx + 0x8908247c]; sbb al, 0x24; call [eax + 0x1c]
0x00031d4d : adc [eax], al; add [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x00012cc6 : dec [ecx + 0x89042444]; sbb al, 0x24; call [ecx + 0x1c]
0x00011838 : mov eax, [edx]; mov [esp], eax; call [ebp + 0xffffffd8]
0x00037891 : inc ebp; fadd [ebx + 0x5e5b4cc4]; pop edi; pop ebp; ret
0x0005cff6 : push esp; and al, 4; mov [esp], eax; call [esi + ebx*4]
0x00009971 : push ss; add [eax], al; add [ebx + 0x5d5b0cc4], al; ret
0x0003ace5 : mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x0001e9d9 : mov [esp + 0xc], ecx; mov [esp], edi; call [eax + 0x40]
0x00046c9e : mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 8
0x000132ac : mov esp, ebp; pop ebp; lea esp, [ecx + 0xfffffffc]; ret
0x0000082b : mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001d4a2 : add [eax], al; add [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x0000cf63 : mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x00061fbc : neg [ebx + 0xffffff89];  pop esi; pop edi; pop ebp; ret
0x0000b294 : mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x00046917 : add al, [eax]; add [eax], al; xor eax, eax; leave ; ret
0x000010ae : add [eax], al; mov eax, [ebp + 0xfffffffc]; leave ; ret
0x000293e6 : add [eax], eax; add [eax], al; mov [esp], ebx; call edi
0x0001d883 : mov [eax + 8], edx; mov [eax + 0x20], ecx; pop ebp; ret
0x000098c7 : push ebp;  mov [esp], ebx; mov [esp + 4], edx; call eax
0x00032087 : mov ebp, esp; pop ebp; lea eax, [eax + 0xfffffff0]; ret
0x0003c23d : add [ebp + 0xffffff8b], bl; inc esp; nop ; inc eax; ret
0x0001da58 : mov eax, [ebp + 8]; add eax, ebx; pop ebx; pop ebp; ret
0x0002942f : add eax, [eax]; add [eax], al; mov [esp], ebx; call edi
0x00060e4d : add [eax], al; add [ebx + 0xc03108c4], al; pop ebx; ret
0x00002b63 : mov eax, [ebp + 8]; pop ebp; mov eax, [eax + 0x34]; ret
0x00044761 : add [eax], al; add [eax + 0xffffffff], bh; pop ebp; ret
0x0001ea2e : add [eax], al; add [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x0003c6ad : push ss; add [eax], al; add [ebx + 0x5d5bffc8], al; ret
0x0002e5d0 : adc [ebp + 0x5e5bf465], ecx; pop edi; pop ebp; ret 0x14
0x00043c49 : add [eax], eax; add [eax], al; mov [esp], ebx; call edx
0x00044530 : mov ebx, [ebp + 0xfffffff4]; mov esp, ebp; pop ebp; ret
0x0003feb2 : dec [ecx + 0x8904244c]; sbb al, 0x24; call [eax + 0x1c]
0x000013a6 : mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00002698 : add [ecx + 0x4c892404], cl; and al, 4; call [edx + 0x24]
0x0000261a : mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x10]
0x000602ce : mov edx, 2; pop esi; mov eax, edx; pop edi; pop ebp; ret
0x0004fc5e : mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x00031fdf : mov ecx, [ebx + 0x10]; mov eax, [ebx + 0x14]; call [ebx]
0x0000ed57 : add al, [eax]; add [ebp + 0x8ba275f6], al; push esp; ret
0x00021207 : inc ebx; or [ecx + 0xcc483d8], cl; pop ebx; pop ebp; ret
0x0000e62f : dec [ebx + 0xc283b455]; add [ecx + 0x89082454], ecx; ret
0x0001e525 : mov eax, [eax + 0xb8]; mov [esp], ebx; call [eax + 0x34]
0x000310b0 : add esp, 8; xor eax, eax; pop ebx; pop esi; pop ebp; ret
0x0003c3c9 : pop ds; sub edx, ecx; not eax; and eax, edx; leave ; ret
0x0004fc4b : mov [eax], edx; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x00060c0c : add [ecx + 0x150c4], al; add [ecx + 0x5d5f5ef8], cl; ret
0x0000918f : push ebp; or [ecx + 0x5489243c], cl; and al, 4; call eax
0x00023413 : add [eax], eax; add [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x00002b70 : push ebp; mov ebp, esp; mov eax, [ebp + 8]; pop ebp; ret
0x00028535 : add [eax], al; add [eax + 0x2000], bh; leave ; nop ; ret
0x00003e76 : add [eax], eax; add [eax], al; mov eax, edx; leave ; ret
0x0001cb69 : add [eax], al; pushal ; cmc ; or cl, [eax]; pop ebp; ret
0x00008430 : xchg eax, ebp; dec eax; idiv edi; jmp [ebp + 0xffffff83]
0x00023a39 : adc [esi], cl; add [eax], al; pop ebp; add eax, ecx; ret
0x0005484d : inc edi; test edx, [edi + edi*8 + 0xffffffff]; jmp [edi]
0x0001f5b0 : mov edi, [ebx + 0x54]; mov [esp], edi; call [edi + 0x10]
0x000320aa : lea edi, [edi]; mov eax, [eax + 4]; sub eax, gs:[0]; ret
0x00023116 : add [eax], eax; add [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x00021430 : mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x44]
0x00001dfd : mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x30]
0x0002f246 : inc [ebp + 0x8b0675c0]; pop ebp; cld ; leave ; nop ; ret
0x0003bb19 : add eax, cs:[eax]; add [ebx + 0xfffe5c8d], cl; jmp [ebx]
0x00051592 : inc ebp; cmpsd [esi], es:[edi]; add dh, al; inc ebp; ret
0x00030a35 : pop eax; add [eax], eax; add [ecx + 0x8303ebc3], cl; ret
0x000236db : mov [eax], edx; mov eax, [ebp + 0xfffffff8]; leave ; ret
0x0001e442 : mov [ebx + 0x3c], edx; add esp, 8; pop ebx; pop ebp; ret
0x00001e3d : add esp, 4; mov eax, edx; pop ebx; pop esi; pop ebp; ret
0x00060771 : inc eax; add [eax], eax; add [ecx + 0x5d5f5ef0], cl; ret
0x0003f688 : inc edi; test ecx, [edi + ebp*8 + 0xffffffff]; jmp [eax]
0x0000c3eb : sub edx, 1; and eax, edx; pop ebx; pop esi; pop ebp; ret
0x0001e94b : mov [esp + 0x44], eax; mov [esp], eax; call [eax + 0x10]
0x00060bcc : push ebp; or [ecx + 0x44892434], cl; and al, 4; call edx
0x00021ac9 : dec [ebx + 0x758bf85d]; cld ; mov esp, ebp; pop ebp; ret
0x000610fc : lea esi, [esi]; mov eax, [edx]; add esp, 8; pop ebx; ret
0x0002a03b : adc [ebp + 0x8b1074c9], eax; pop edx; adc [ecx], ah; ret
0x00002d84 : mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x34]
0x00020bc0 : dec esp; and al, 8; mov [esp + 4], edx; call [eax + 0x40]
0x0003e08c : inc esp; and al, 8; mov [esp + 4], edx; call [ebp + 0x14]
0x0005e6b0 : mov [ecx], edx; mov ebp, [esp + 0x38]; add esp, 0x3c; ret
0x000069ea : inc ebp; rol [ebx + 0x5e5b30c4], 1; pop edi; pop ebp; ret
0x00009c3b : inc ebx; or [ebx + 0x5e5b14c4], al; pop edi; pop ebp; ret
0x0002efb9 : mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret 0xc
0x000316bb : mov dh, 0; add [eax], al; add [ecx + 0x39028bc2], cl; ret
0x0002cad3 : mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 0xc
0x000394b2 : add [eax], eax; add [eax], al; mov ebp, esp; pop ebp; ret
0x0005f2b0 : mov esi, [esp + 4]; mov edi, [esp + 8]; add esp, 0xc; ret
0x000028ba : inc eax; inc [ebx + 0xc483ef23]; or [ebx + 0x5d], bl; ret
0x000594fd : add [ebx + 0x5e], bl; pop edi; mov esp, ebp; pop ebp; ret
0x00032efa : mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret 0xc
0x00010972 : add al, 0; add [ecx], ch; ror [ecx + 0x83fbd1c7], cl; ret
0x0004bcc8 : inc edi; test edx, [esi + edi*8 + 0xffffffff]; call [eax]
0x00035674 : inc ebp; rol [ebx + 0x5e5b68c4], 1; pop edi; pop ebp; ret
0x00033787 : mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret 8
0x0002aae0 : push 0; add [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x0000b4cc : add [ebx + 0xcb6a015], cl; or [ebp + 0xc74c75d2], al; ret
0x0004708c : inc edx; or [ebx + 0x5e5b20c4], al; pop edi; pop ebp; ret
0x00053922 : inc ebp; mov [eax], es; add [eax], al; add [ecx], al; ret
0x00060557 : mov ebx, [esp + 4]; mov esi, [esp + 8]; add esp, 0xc; ret
0x00060c0f : push eax; add [eax], eax; add [ecx + 0x5d5f5ef8], cl; ret
0x00060558 : pop esp; and al, 4; mov esi, [esp + 8]; add esp, 0xc; ret
0x0001d8b3 : pop eax; or [ecx + 0x20488910], cl; pop ebx; pop ebp; ret
0x0003e30a : mov [esp + 8], ecx; mov [esp + 4], eax; call [ebp + 0x14]
0x0003e08b : mov [esp + 8], eax; mov [esp + 4], edx; call [ebp + 0x14]
0x0003e30b : dec esp; and al, 8; mov [esp + 4], eax; call [ebp + 0x14]
0x00032a07 : add [eax], al; mov [esp + 8], 0; mov [esp], eax; call edi
0x0000d6f2 : inc ebp; fmul [ebp + 0x5e5bf465]; pop edi; pop ebp; ret 8
0x0003e9e0 : mov [esp + 8], esi; mov [esp + 4], edx; call [eax + 0x1c]
0x00030f35 : mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret 4
0x0001eae4 : mov [esp + 4], edx; mov [esp + 8], ecx; call [eax + 0x40]
0x00062950 : mov [ecx], edx; mov ebp, [esp + 0x28]; add esp, 0x2c; ret
0x00051f10 : pop edi; div bh; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x00020bbf : mov [esp + 8], ecx; mov [esp + 4], edx; call [eax + 0x40]
0x0002308c : lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; call ebx
0x00002511 : mov [eax + 0xc], edx; mov [eax + 0x24], ecx; pop ebp; ret
0x0004586d : dec [ecx + 0x8b04245c]; push es; mov [esp], eax; call edi
0x00060781 : xor esi, esi; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x0005f3e8 : mov edx, [ebx + ecx*4 + 0xffffa45c]; add edx, ebx; jmp edx
0x0003a211 : add [ebx + 0xd88914c4], al; pop ebx; pop esi; pop ebp; ret
0x0001bdde : sbb [eax + 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret
0x000284bd : pop ds; or eax, 1; pop ebx; pop esi; pop edi; pop ebp; ret
0x0005bdb2 : add [eax], al; mov [ebx + 0xc], eax; pop ebx; pop ebp; ret
0x00005f93 : add al, 0; add [eax + 0x8b417501], ch; add ebp, [ecx]; ret
0x0002d588 : add al, [ebx + 0x5e5b08c4]; pop edi; neg eax; pop ebp; ret
0x00051601 : mov edi, esi; mov esi, ebx; mov ebx, eax; nop ; call [ebx]
0x0005d625 : mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret 0x10
0x00034655 : inc edx; xor [ebx + 0x5e5b14c4], al; pop edi; pop ebp; ret
0x0000512c : dec edx; xor [ebx + 0x5e5b20c4], al; pop edi; pop ebp; ret
0x0001fe23 : add [ecx + 0x5d5b085d], cl; mov eax, [eax + 0x10]; jmp eax
0x00043d13 : add [ebx + 0xd08978c4], al; pop ebx; pop esi; pop ebp; ret
0x0005e66d : mov eax, [ebx + eax*4 + 0xffffa000]; add eax, ebx; jmp eax
0x00023ad4 : inc ecx; sbb [ebx + 0x5e5b14c4], al; pop edi; pop ebp; ret
0x0005ec77 : mov eax, [ebx + edx*4 + 0xffffa3f0]; add eax, ebx; jmp eax
0x00017e0c : add ecx, eax; mov eax, ecx; pop ebx; pop esi; pop ebp; ret
0x0000b95e : add [eax], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00022c4c : add [ebx + ebx*8 + 0x5e5bdf75], eax; pop edi; pop ebp; ret
0x0001e244 : mov [edx], ecx; add esp, 8; pop ebx; pop esi; pop ebp; ret
0x00022703 : mov esi, eax; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x0005bbfd : inc ebp; or [ecx + 0xd9e82404], cl; aad 0xff; dec ecx; ret
0x000028de : push [ebp + 0xffffffdb]; add esp, 8; pop ebx; pop ebp; ret
0x00027f26 : add eax, [edx]; mov ebx, [esp]; mov esp, ebp; pop ebp; ret
0x0001e05f : mov eax, [edx]; add esp, 8; pop ebx; pop esi; pop ebp; ret
0x0005eff7 : mov eax, [ebx + eax*4 + 0xffffa444]; add eax, ebx; jmp eax
0x000025f0 : mov [ebp + 8], eax; pop ebp; mov eax, [edx + 0xc]; jmp eax
0x0001d027 : add esi, eax; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x0001eae5 : push esp; and al, 4; mov [esp + 8], ecx; call [eax + 0x40]
0x00044276 : pop ebp; mov eax, [eax + 0x24]; mov eax, [eax + 0x28]; ret
0x00047ba2 : sbb cl, [eax + 0x43890000]; or [ebx + 0x5d5b1cc4], al; ret
0x0004b552 : pop es; add [ebx + 0xfffe5cbd], cl; jmp [esi + 0xffffffba]
0x00044b0b : add [ebx + 0xd08918c4], al; pop ebx; pop esi; pop ebp; ret
0x00004717 : mov [esi + 0x5b01080c], dh; pop esi; pop edi; pop ebp; ret
0x0002c56e : inc ebp; adc [ebx + 0x5e5b10c4], al; pop edi; pop ebp; ret
0x0005e8e3 : mov ecx, [ebx + ecx*4 + 0xffffa034]; add ecx, ebx; jmp ecx
0x00060e9d : mov eax, [ebx + eax*4 + 0xffffa51c]; add eax, ebx; jmp eax
0x000320ad : add [eax], al; add [ebx + 0x2b650440], cl; add eax, 0; ret
0x0006032e : mov edx, eax; pop esi; mov eax, edx; pop edi; pop ebp; ret
0x0001e914 : add [ecx + 0x5bf289d8], cl; pop esi; pop edi; pop ebp; ret
0x0005e7e7 : add [ebx + 0xc4835c42], cl; or [ebx + 0xffffff90], bl; ret
0x0006290b : mov eax, [ebx + eax*4 + 0xffffa550]; add eax, ebx; jmp eax
0x00036847 : add [eax], al; mov [esp + 4], edx; mov [esp], ecx; call ebx
0x00011604 : mov [esp + 8], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x000479ad : add cl, [ebx + 0xfc558b02]; add eax, [edx + 4]; leave ; ret
0x0001da4c : sub eax, edx; sar eax, 2; sub eax, 1; pop ebx; pop ebp; ret
0x00034853 : inc esp; and al, 4; mov [esp], edx; call [ebp + 0xffffffd0]
0x0000d15b : add [eax], eax; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0004794f : lea esp, [ebp + 0xfffffff8]; pop ebx; pop esi; pop ebp; ret
0x000202e7 : adc [ebx + 0x295b18c4], al;  pop esi; pop edi; pop ebp; ret
0x00038463 : mov [esp + 4], edx; mov [esp], esi; call [ebp + 0xffffffd4]
0x0006031e : add [eax], al; mov eax, edx; pop esi; pop edi; pop ebp; ret
0x0003ec56 : sbb [eax + ecx], ecx; mov eax, [eax*4 + 0x80c1920]; jmp eax
0x00036330 : mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffc4]
0x000602d1 : add [eax], al; pop esi; mov eax, edx; pop edi; pop ebp; ret
0x0000ed56 : add al, cs:[eax]; add [ebp + 0x8ba275f6], al; push esp; ret
0x00035fe5 : mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffcc]
0x000352d5 : mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd8]
0x000396e3 : mov esi, [ebp + 8]; mov [esp], esi; call [ebp + 0xffffffdc]
0x000386e5 : pop esp; and al, 4; mov [esp], esi; call [ebp + 0xffffffd4]
0x0006024c : add [ecx + 0x89082444], cl; push esp; and al, 0xc; call ecx
0x00002875 : add [ecx + 0x89042454], cl; sbb al, 0x24; call [eax + 0x18]
0x00017aec : lea esp, [ebx + edi*8 + 0xffffffff]; jmp [esi + 0xffffffbf]
0x0000ab36 : movzx ecx, cl; sub eax, ecx; pop ebx; pop esi; pop ebp; ret
0x0000ad97 : mov ecx, edx; rep stosb es:[edi], al; pop edi; pop ebp; ret
0x00036d58 : mov [esp + 4], edx; mov [esp], ecx; call [ebp + 0xffffffd0]
0x000231f2 : add [eax], al; mov [esp + 8], eax; mov [esp], edi; call ebx
0x0004610c : mov [esp], edx; mov [esp + 4], eax; call [ebp + 0xfffffff0]
0x0003ebd0 : add bh, al; test ecx, [edi + ebp*8 + 0xffffffff]; jmp [eax]
0x00034bb9 : dec esp; and al, 4; mov [esp], eax; call [ebp + 0xffffffd0]
0x0003556c : inc esp; and al, 8; mov [esp], ecx; call [ebp + 0xffffffcc]
0x00022d5b : mov [edi + 8], ecx; pop ebx; pop esi; pop edi; pop ebp; ret
0x0004451a : add [eax], al; mov [esp + 8], eax; mov [esp], edx; call edi
0x00034852 : mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd0]
0x00039acf : push ebx; sbb [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x00060773 : add [eax], al; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x0003748f : inc esp; and al, 4; mov [esp], edx; call [ebp + 0xffffffd8]
0x000443a2 : add [eax], al; mov [esp + 4], eax; mov [esp], edi; call esi
0x0003556b : mov [esp + 8], eax; mov [esp], ecx; call [ebp + 0xffffffcc]
0x0000a170 : sbb [ebx + 0xffffff89], bl;  pop esi; pop edi; pop ebp; ret
0x000386e4 : mov [esp + 4], ebx; mov [esp], esi; call [ebp + 0xffffffd4]
0x00031f61 : mov ecx, [esp]; mov [esp], eax; mov eax, [esp + 4]; ret 0xc
0x0001d9a9 : add [ecx + 0x89042444], cl; sbb al, 0x24; call [edx + 0x18]
0x00060c11 : add [eax], al; mov eax, edi; pop esi; pop edi; pop ebp; ret
0x0000209f : add [eax], al; mov eax, esi; pop ebx; pop esi; pop ebp; ret
0x0001fc0c : add [ecx + 0x89042454], cl; sbb al, 0x24; call [eax + 0x48]
0x00022bf7 : push eax; add eax, [edx + edx*8 + 0x4040d375]; inc eax; ret
0x00032976 : mov [esp + 4], edx; mov [esp], eax; call [ebp + 0xffffffe0]
0x00036331 : inc esp; and al, 4; mov [esp], edx; call [ebp + 0xffffffc4]
0x00039263 : dec esp; and al, 4; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00016c19 : lea ecx, [ebx + edi*8 + 0xffffffff]; jmp [esi + 0xffffff89]
0x000420a8 : add al, [eax]; add [ebx + 0xffef50bd], al; call [ebx + 0xf]
0x00035fe6 : inc esp; and al, 4; mov [esp], edx; call [ebp + 0xffffffcc]
0x00046142 : mov [esp], ecx; mov [esp + 4], eax; call [ebp + 0xfffffff0]
0x00034bb8 : mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd0]
0x00060b95 : add [eax], eax; add [eax], al; call eax; add esp, 0x1c; ret
0x000442f0 : inc ebx; sub [ecx + 0x89042444], cl; cmp al, 0x24; call esi
0x000158da : add [eax], al; add [eax + 0xfffafbbd], al; call [ebx + 0xf]
0x0001839e : pop esi; pop edi; pop ebp; lea esp, [ecx + 0xfffffffc]; ret
0x0003c23c : mov eax, [eax]; pop ebp; mov eax, [eax + edx*4 + 0x40]; ret
0x0003f3d3 : sbb [eax + ecx], ecx; mov eax, [eax*4 + 0x80c1620]; jmp eax
0x00023115 : add fs:[eax], eax; add [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x0003503b : mov [esp + 4], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x00039262 : mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00028364 : add [eax], al; add [ebx + 0x37e00fa], al; mov eax, edx; ret
0x000352d6 : dec esp; and al, 4; mov [esp], eax; call [ebp + 0xffffffd8]
0x0003748e : mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x0005f239 : add [eax], al; add [eax + 0xfffe59e9], al; jmp [esi + 0x3d]
0x00000ddc : add [eax], al; mov [esp], esi; mov [esp + 4], eax; call edx
0x0002d589 : add esp, 8; pop ebx; pop esi; pop edi; neg eax; pop ebp; ret
0x0001fe25 : pop ebp; or [ebx + 0x5d], bl; mov eax, [eax + 0x10]; jmp eax
0x00032977 : push esp; and al, 4; mov [esp], eax; call [ebp + 0xffffffe0]
0x00028545 : add [eax], al; add [eax + 0xffffffff], bh; leave ; nop ; ret
0x00045921 : inc esp; and al, 4; mov eax, [esi]; mov [esp], eax; call ebx
0x00030809 : mov edx, [ebp + 8]; mov eax, [esi]; add eax, [edx]; call eax
0x00011605 : push esp; and al, 8; mov [esp], ecx; call [ebp + 0xffffffd8]
0x000479b0 : mov edx, [ebp + 0xfffffffc]; add eax, [edx + 4]; leave ; ret
0x00048850 : add bh, al; test edx, [esi + edi*8 + 0xffffffff]; call [eax]
0x0001c9da : add [eax], al; add [eax], al; mov [esp], ebx; call [eax + 8]
0x0002f6b5 : mov edi, [ebp + 8]; mov eax, [ebx]; add eax, [edi]; call eax
0x00003275 : mov eax, [eax + 0x14]; add esp, 4; pop ebx; pop ebp; jmp eax
0x00062a61 : dec esp; mov eax, 8; pop ebx; pop esi; pop edi; pop ebp; ret
0x00002971 : xor [ebx + 0x758bf85d], cl; cld ; mov esp, ebp; pop ebp; ret
0x0003503c : push esp; and al, 4; mov [esp], ecx; call [ebp + 0xffffffd8]
0x0000b02d : add ch, cl; add [ebp + 0x890274d2], 2; pop ebx; pop ebp; ret
0x0002f9fa : mov ecx, [ebp + 8]; mov eax, [edx]; add eax, [ecx]; call eax
0x00029369 : mov eax, [ebx]; mov [esp], esi; mov [esp + 4], eax; call edi
0x00002739 : add [eax], al; add [eax], al; mov [eax + 8], 0; pop ebp; ret
0x00047962 : dec [ebx + 0x658de845]; clc ; pop ebx; pop esi; pop ebp; ret
0x0000333d : mov eax, [eax + 0x10]; add esp, 4; pop ebx; pop ebp; jmp eax
0x00029542 : int3 ; mov [esp + 4], eax; mov [esp], ecx; call [ebp + 0x10]
0x0004591e : inc ebp; ror [ecx + 0x8b042444], 6; mov [esp], eax; call ebx
0x000534fd : add [ebx + 0xeb83344e], cl; add [ebp + 0x83002674], ecx; ret
0x0004586f : pop esp; and al, 4; mov eax, [esi]; mov [esp], eax; call edi
0x00062d40 : sub [eax], al; add [eax], al; mov [esp], esi; call [ebp + 8]
0x00032cf1 : add [ebx + 0x758bf85d], cl; cld ; mov esp, ebp; pop ebp; ret
0x00031fa8 : mov ecx, [esp]; mov [esp], eax; mov eax, [esp + 4]; ret 0x14
0x0004586e : mov [esp + 4], ebx; mov eax, [esi]; mov [esp], eax; call edi
0x00054a0b : add [ebx], ch; lea ebx, [edi + edi*8 + 0xffffffff]; call ebx
0x0002dfa8 : pushal ; mov eax, 1; pop ebx; pop esi; pop edi; pop ebp; ret
0x00045920 : mov [esp + 4], eax; mov eax, [esi]; mov [esp], eax; call ebx
0x0005fe3e : dec esp; mov eax, 3; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001d8b5 : mov [eax], edx; mov [eax + 0x20], ecx; pop ebx; pop ebp; ret
0x00039716 : pop eax; mov eax, 6; pop ebx; pop esi; pop edi; pop ebp; ret
0x00036d59 : push esp; and al, 4; mov [esp], ecx; call [ebp + 0xffffffd0]
0x00038464 : push esp; and al, 4; mov [esp], esi; call [ebp + 0xffffffd4]
0x0000491b : mov [eax + edx], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x00059742 : add [ebx + 0xf78813c], al; test ebx, [esi + 0x83fffffb]; ret
0x000222db : add [ebx + 0xb60f01c1], eax; sbb al, [ebx + 0x9d8801c2]; ret
0x0001ff11 : xchg [edi + edi*8 + 0xffffffff], edx; jmp [esi + 0xffffff90]
0x000028db : sbb [ebx + 0xdb75fff8], al; add esp, 8; pop ebx; pop ebp; ret
0x00023502 : add [eax], al; mov [esp + 0xc], eax; mov [esp], edi; call esi
0x00023754 : add [eax], eax; add [eax], al; pop ebx; pop esi; pop ebp; ret
0x0003986e : call [eax + 0xbecca155]; or al, 8; mov ebp, esp; pop ebp; ret
0x0003210d : pop ebp; add [eax], eax; pop edx; pop ecx; pop eax; jmp [eax]
0x00053a2c : add [eax], al; fldz ; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001d8e8 : add [ebx + 0xa8904c1], eax; add esp, 4; pop ebx; pop ebp; ret
0x0003212d : pop edx; add [eax], eax; pop edx; pop ecx; pop eax; jmp [eax]
0x00032b29 : xchg eax, esi; mov edx, [ebx + 0xc]; mov [esp], edx; call eax
0x00046671 : mov [esp], eax; mov [ebp + 0xffffff4c], edx; call [ebp + 0xc]
0x000320ed : pop ebx; add [eax], eax; pop edx; pop ecx; pop eax; jmp [eax]
0x00054877 : add [ecx + 0xffff549d], cl; inc [ebx + 0xffff5485]; jmp [edi]
0x0001eee3 : mov edi, [ebp + 0xffffffd0]; mov [esp], edi; call [edi + 0xc]
0x0001d93a : adc [ecx + 0xc0310c50], cl; add esp, 8; pop ebx; pop ebp; ret
0x0001f1bd : mov edx, [ebp + 0xffffffd0]; mov [esp], edx; call [edx + 0xc]
0x00021217 : add [ecx], dh; fild [ebx + 0xd8890cc4]; pop ebx; pop ebp; ret
0x000440fc : lea eax, [ebx + eax]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0006069e : add [eax], al; mov eax, [esp + 4]; mov eax, [eax + 0x54]; ret
0x00022bb2 : add bh, bh; add [ecx + eax + 0x40], dh; pop edi; pop esi; ret
0x0006057e : add [eax], al; mov eax, [esp + 4]; mov eax, [eax + 0x48]; ret
0x00027b0e : xor ebx, ebx; mov eax, ebx; add esp, 8; pop ebx; pop ebp; ret
0x0002e216 : lea esi, [ebx + 0x80ccac4]; mov [esp], edx; call [esi + 0x30]
0x00033a18 : push edi; std ; inc [ebx + 0x5e5b10c4]; pop edi; pop ebp; ret
0x000320cd : pop esp; add [eax], eax; pop edx; pop ecx; pop eax; jmp [eax]
0x00053b5c : add [eax], al; fchs ; pop ebx; pop esi; pop edi; pop ebp; ret
0x00002e09 : sub [eax], al; add [eax], al; add [ebx + 0x5d5b04c4], al; ret
0x000601bf : inc esi; dec esp; mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x00000ff9 : mov [eax], 4; add esp, 4; mov eax, edx; pop ebx; pop ebp; ret
0x0005d526 : adc [ebp + 0x1840fc0], al; add [eax], eax; add [ecx], al; ret
0x000503ae : call [eax + 0xca84a155]; or al, 8; mov ebp, esp; pop ebp; ret
0x0000d3bd : inc ebp; or [ecx + 0x89e82404], cl; or al, 0; add cl, cl; ret
0x0003c6ac : add [esi], dl; add [eax], al; add [ebx + 0x5d5bffc8], al; ret
0x0001d8e9 : add ecx, 4; mov [edx], ecx; add esp, 4; pop ebx; pop ebp; ret
0x00059b9a : sbb [ebx + 0xfb8330eb], al; or [edi], ecx; xchg eax, edi; ret
0x0001f048 : mov ecx, [ebp + 0xffffffd0]; mov [esp], ecx; call [ecx + 0xc]
0x0004568d : add [eax], al; add [eax], al; add [ecx + 0xebd2311a], cl; ret
0x00055bbd : inc ebp; or [ecx + 0xd9e82404], cl; fdivr st(7); dec ecx; ret
0x00010bee : inc [ecx + 0x4f8c4]; add [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x0006063e : add [eax], al; mov eax, [esp + 4]; mov eax, [eax + 0x5c]; ret
0x00031dec : inc [ecx + 0x1010c4]; add [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x0000111f : add [eax], al; add esp, 8; mov eax, edx; pop ebx; pop ebp; ret
0x0002cbc4 : mov esi, eax; mov eax, esi; pop esi; pop edi; pop ebp; ret 0xc
0x0005e7f6 : add [eax], al; mov eax, [edx + 0x54]; add esp, 8; pop ebx; ret
0x0006068c : lea esi, [esi]; mov eax, [esp + 4]; mov eax, [eax + 0x58]; ret
0x00062dd1 : inc esp; mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret
0x0005fdc6 : dec esp; xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x00022694 : inc esp; mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000d5bf : sub eax, [ebx + 4]; add esp, 8; pop ebx; pop esi; pop ebp; ret
0x0001d31b : adc [ecx + 0x8c48302], cl; xor eax, eax; pop ebx; pop ebp; ret
0x00029427 : mov [esp + 8], ecx; mov [esp + 4], 3; mov [esp], ebx; call edi
0x00032a01 : mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp], eax; call edi
0x0001c847 : inc esp; and al, 8; mov [esp + 4], 1; mov [esp], ebx; call ecx
0x0004ab44 : add edi, eax; test edx, [esi + edi*8 + 0xffffffff]; call [eax]
0x0000ad59 : mov esi, [esp]; mov edi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x0002d744 : dec eax; mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret
0x0004f69d : inc ebp; or [ecx + 0xb9e82404], cl; mov edi, edi; dec ecx; ret
0x00050099 : pop eax; mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret
0x00029400 : mov [esp + 8], esi; mov [esp + 4], 2; mov [esp], ebx; call edi
0x00031054 : lea esi, [esi]; mov eax, [ecx]; pop ebx; pop esi; pop ebp; ret
0x00002730 : mov [eax], 0; mov [eax + 4], 0; mov [eax + 8], 0; pop ebp; ret
0x000605ec : lea esi, [esi]; mov eax, [esp + 4]; mov eax, [eax + 0x4c]; ret
0x0001c846 : mov [esp + 8], eax; mov [esp + 4], 1; mov [esp], ebx; call ecx
0x00043c41 : mov [esp + 8], eax; mov [esp + 4], 1; mov [esp], ebx; call edx
0x0005c6ee : add al, 0; add [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret 8
0x0005297a : pop esp; mov edx, edi; pop ebx; pop esi; pop edi; pop ebp; ret
0x00060699 : lea esi, [esi]; mov eax, [esp + 4]; mov eax, [eax + 0x54]; ret
0x00036841 : mov [esp + 8], 0; mov [esp + 4], edx; mov [esp], ecx; call ebx
0x00000ffd : add [eax], al; add esp, 4; mov eax, edx; pop ebx; pop ebp; ret
0x0000966a : add [eax], al; mov eax, ebx; add esp, 4; pop ebx; pop ebp; ret
0x0000495c : add [ecx + ecx + 0xffffff8d], esi; inc edx; cld ; pop ebp; ret
0x00029428 : dec esp; and al, 8; mov [esp + 4], 3; mov [esp], ebx; call edi
0x00031f30 : add eax, [eax]; add [eax], al; add [ebx + 0x5d5b0cc4], al; ret
0x00006f1f : pop eax; mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret
0x00002656 : pop ebp; mov edx, [eax + 0x94]; mov eax, [edx + 0x20]; jmp eax
0x0000e986 : inc eax; or [ebp + 0x8bcd75c0], al; inc ebx; adc al, 0x83; ret
0x0004439c : mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edi; call esi
0x000293bc : mov [esp + 8], esi; mov [esp + 4], 0; mov [esp], ebx; call edi
0x00060579 : lea edi, [edi]; mov eax, [esp + 4]; mov eax, [eax + 0x48]; ret
0x000293de : mov [esp + 8], esi; mov [esp + 4], 1; mov [esp], ebx; call edi
0x00036df2 : pop esp; mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret
0x0006062c : lea esi, [esi]; mov eax, [esp + 4]; mov eax, [eax + 0x50]; ret
0x0003c23b : mov eax, gs:[eax]; pop ebp; mov eax, [eax + edx*4 + 0x40]; ret
0x000147b4 : mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00043c42 : inc esp; and al, 8; mov [esp + 4], 1; mov [esp], ebx; call edx
0x00002a4d : mov ebx, [esp]; mov esi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x00060639 : lea esi, [esi]; mov eax, [esp + 4]; mov eax, [eax + 0x5c]; ret
0x0000e81c : inc eax; or [ebp + 0x8bda75c0], al; inc ebx; adc al, 0x83; ret
0x0000bf84 : add [eax + 0xf0], bh; int 0x80; pop edx; pop ecx; pop ebx; ret
0x00060b8e : mov [esp + 4], edx; mov [esp], 1; call eax; add esp, 0x1c; ret
0x000608f8 : mov edi, [ebp + 0xfffffffc]; mov ebp, [ebp]; mov esp, ecx; ret
0x00000ddb : add [eax], al; add [ecx + 0x44892434], cl; and al, 4; call edx
0x0001e9b1 : dec esp; mov [esp + 4], eax; mov [esp], edi; call [edx + 0x48]
0x00017f5b : lea eax, [esi + 0x30]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00028f34 : dec ebp; adc [ebx + 0xffffff8b], dl; pop ebp; or al, 0xb8; ret
0x0004fccb : inc esp; add al, [eax]; add [ecx + 0xfc5d8b02], cl; leave ; ret
0x0003b805 : xchg eax, ebx; or [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x00002734 : add [eax], al; mov [eax + 4], 0; mov [eax + 8], 0; pop ebp; ret
0x000115a6 : pop esp; and al, 4; mov [esp + 8], ecx; call [ebp + 0xffffffd8]
0x0000cd0f : add esp, 4; mov eax, 1; pop ebx; pop esi; pop edi; pop ebp; ret
0x000613bc : dec [ebp + 0xc4830076]; inc eax; pop esi; pop edi; pop ebp; ret
0x0003f330 : sub eax, edx; sar eax, 2; mov [esp + 8], eax; call [ecx + 0x1c]
0x00013da3 : mov [ebp + 0xfffffb08], 1; mov [ebp + 0xfffffb78], edi; jmp eax
0x0003f57a : mov [ebp + 0xffffef3c], 1; mov [ebp + 0xffffefb4], edi; jmp eax
0x0002b2e9 : dec [ebp + 0xd089f465]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0002d741 : inc [ebx + 0xf88948c4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0003e825 : dec [ebp + 0xd889f465]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0005d369 : lea esi, [eax + edi*4 + 0xfffffffc]; lea esi, [esi]; call [esi]
0x0000abf4 : add bh, bh; add [ecx + eax + 0x40], dh; sub eax, [esp + 4]; ret
0x00003957 : add [eax], al; add [eax], al; mov [esp], ebx; call [eax + 0x2c]
0x000446c0 : add [eax], al; add [eax], al; mov [esp], esi; call [eax + 0x40]
0x00029a4d : dec [ecx + 0x2cc483d8]; pop ebx; pop esi; pop edi; pop ebp; ret
0x000602cd : add [edx + 2], bh; pop esi; mov eax, edx; pop edi; pop ebp; ret
0x00002e0a : add [eax], al; add [eax], al; add esp, 4; pop ebx; pop ebp; ret
0x000116c0 : pop esp; and al, 4; mov [esp + 8], eax; call [ebp + 0xffffffd8]
0x00020c70 : add [eax], al; add [eax], al; mov [esp], ebx; call [eax + 0x40]
0x0001ca5a : inc [ebx + 0xf08908c4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001c9d4 : add [eax], al; mov [esp + 4], 0; mov [esp], ebx; call [eax + 8]
0x00044450 : inc ebx; push esp; mov [esp + 4], eax; mov [esp], edi; call esi
0x0002d593 : add esp, 8; mov eax, 1; pop ebx; pop esi; pop edi; pop ebp; ret
0x000116bf : mov [esp + 4], ebx; mov [esp + 8], eax; call [ebp + 0xffffffd8]
0x0000341e : adc [ebx + 0x5e5b14c4], al; sub eax, edi; pop edi; pop ebp; ret
0x000460c0 : inc ebp;  mov [ebp + 0xffffffec], ecx; mov [esp], edx; call eax
0x00009073 : inc [ebx + 0xf0890cc4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000b95a : inc [ecx + 0x88c4]; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00009669 : adc al, [eax]; add [ecx + 0x4c483d8], cl; pop ebx; pop ebp; ret
0x0005e7f1 : lea esi, [esi]; mov eax, [edx + 0x54]; add esp, 8; pop ebx; ret
0x0002b4e6 : dec [ebp + 0xf889f465]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00061108 : mov eax, [esp + 0x10]; mov eax, [eax]; add esp, 8; pop ebx; ret
0x000114f1 : inc [ebx + 0xf8892cc4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00060b8f : push esp; and al, 4; mov [esp], 1; call eax; add esp, 0x1c; ret
0x0005fdc3 : inc [ebx + 0xc0314cc4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001d31c : mov [edx], eax; add esp, 8; xor eax, eax; pop ebx; pop ebp; ret
0x0001f969 : add [eax], al; add [eax], al; mov [esp], ebx; call [eax + 0x24]
0x0003c4e6 : mov ebp, [eax + 0xc]; mov eax, [esp + 8]; mov esp, ecx; jmp edx
0x0001d7ec : push eax; mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret
0x00003339 : add [ecx + 0x408b085d], cl; adc [ebx + 0x5d5b04c4], al; jmp eax
0x000280cb : dec [ecx + 0xdce8241c]; adc dh, bh; inc [ebx + 0x5d5b04c4]; ret
0x000605e0 : mov edx, [esp + 0x18]; mov [eax], edx; add esp, 8; pop ebx; ret
0x00013ad5 : mov [esp], ebx; mov edi, [ebp + 0xfffffac4]; call [ecx + edi*4]
0x00023742 : add [edi], cl; xchg eax, esp; rol [ebx + 0x5e5b0cc4], 0x5d; ret
0x00008b65 : inc [ebx + 0xf08918c4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00046141 : adc [ecx + 0x4489240c], ecx; and al, 4; call [ebp + 0xfffffff0]
0x000115a5 : mov [esp + 4], ebx; mov [esp + 8], ecx; call [ebp + 0xffffffd8]
0x000225c3 : inc eax; add al, 0; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00025cfa : add [eax], al; add [ebx + 0x5e5b24c4], al; pop edi; pop ebp; ret
0x00005517 : add [eax], al; add [ebx + 0x5e5b10c4], al; pop edi; pop ebp; ret
0x00020cb1 : mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call ecx
0x00011181 : add [eax], al; add [ebx + 0x5e5b20c4], al; pop edi; pop ebp; ret
0x000602d0 : add [eax], al; add [esi + 0xffffff89], bl; rcr [edi + 0x5d]; ret
0x00000b5b : add [eax], al; add [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret
0x00000dd7 : xor edx, gs:[0x18]; mov [esp], esi; mov [esp + 4], eax; call edx
0x0000918e : mov edx, [ebp + 8]; mov [esp], edi; mov [esp + 4], edx; call eax
0x00002928 : mov eax, [ebp + 8]; pop ebx; add eax, esi; pop esi; pop ebp; ret
0x0005fcc2 : add [eax], al; add [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret
0x00060bcb : mov edx, [ebp + 8]; mov [esp], esi; mov [esp + 4], eax; call edx
0x00023a38 : leave ; adc [esi], cl; add [eax], al; pop ebp; add eax, ecx; ret
0x0001d49e : add [ecx + 0xb4c4], al; add [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x00008bfd : add [eax], al; add [ebx + 0x5e5b18c4], al; pop edi; pop ebp; ret
0x00060246 : mov [esp], 1; mov [esp + 8], eax; mov [esp + 0xc], edx; call ecx
0x0003df49 : mov [esp + 4], esi; mov [esp], edi; mov [esp + 8], ecx; call ebx
0x0000c816 : add [eax], al; add [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret
0x0006032b : add [eax], al; add [ecx + 0xd0895ec2], cl; pop edi; pop ebp; ret
0x00022e5e : inc esp; and al, 4; mov eax, [edi + 8]; mov [esp], eax; call esi
0x00022e5d : mov [esp + 4], eax; mov eax, [edi + 8]; mov [esp], eax; call esi
0x0000941d : mov edx, [ebp + 4]; mov [esp], edi; mov [esp + 4], edx; call eax
0x00045202 : inc [ecx + 0x43cc4]; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0006063d : add [eax], al; add [ebx + 0x8b042444], cl; inc eax; pop esp; ret
0x00001195 : add [eax], al; add [ecx + 0x10c483d8], cl; pop ebx; pop ebp; ret
0x0000111e : add [eax], al; add [ebx + 0xd08908c4], al; pop ebx; pop ebp; ret
0x00002925 : add [eax], al; add [ebx + 0x15b0845], cl;  pop esi; pop ebp; ret
0x00062408 : mov ebx, [esp + 0x14]; mov esi, [esp + 0x18]; add esp, 0x1c; ret
0x0006057d : add [eax], al; add [ebx + 0x8b042444], cl; inc eax; dec eax; ret
0x0000997f : dec esp; and al, 4; mov [esp], eax; mov [esp + 8], ebx; call edx
0x00036846 : add [eax], al; add [ecx + 0x89042454], cl; or al, 0x24; call ebx
0x00030f25 : mov [esp + 8], esi; mov [esp + 4], edx; mov [esp], eax; call ebx
0x00002542 : mov [eax + 4], edx; mov [eax + 0x24], ecx; pop ebx; pop ebp; ret
0x00045cc1 : mov [esp + 4], edx; mov [esp], ecx; mov [esp + 8], eax; call edi
0x00002286 : add [eax], al; add [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x00039597 : add [eax], al; add [ebx + 0x5e5b58c4], al; pop edi; pop ebp; ret
0x0005ce81 : mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call edx
0x00060381 : mov [esp + 0xc], edx; mov [esp + 4], eax; mov [esp], 1; call ecx
0x0004fcc8 : add [ebx + 0x24480], cl; add [ecx + 0xfc5d8b02], cl; leave ; ret
0x000225c0 : inc [ecx + 0x440c4]; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x000316b7 : add bl, ch; or [ebp + 0xb6], cl; add [ecx + 0x39028bc2], cl; ret
0x0000997e : mov [esp + 4], ecx; mov [esp], eax; mov [esp + 8], ebx; call edx
0x00000ffc : add [eax], al; add [ebx + 0xd08904c4], al; pop ebx; pop ebp; ret
0x0000925c : mov ecx, [ebp + 4]; mov [esp], edx; mov [esp + 4], ecx; call eax
0x0005e2ff : mov edi, [esp + 0x24]; mov ebp, [esp + 0x28]; add esp, 0x2c; ret
0x00062310 : mov esi, [esp + 0x14]; mov edi, [esp + 0x18]; add esp, 0x1c; ret
0x0002d394 : add [ecx], al; adc [ebx + 0x5e5b18c4], al; pop edi; pop ebp; ret
0x0004fa56 : add [eax], al; add [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret
0x0000842c : add [eax], al; add [ebx + 0xfff74895], cl; jmp [ebp + 0xffffff83]
0x00023412 : pop esp; add [eax], eax; add [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x00001658 : inc ebp; or [ecx + 0xee82404], cl; add [eax], al; add cl, cl; ret
0x0000cd20 : add esp, 4; xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x000001f3 : add [ebp + eax + 0xffffffe8], dh; cmc ; rol [eax], 0; leave ; ret
0x00046512 : mov al, 0; add [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00001e3c : pop ecx; add esp, 4; mov eax, edx; pop ebx; pop esi; pop ebp; ret
0x0004bcf9 : add [eax], al; add [ebx + 0xfffe7095], cl; jmp [ebp + 0xffffffc7]
0x0005dcec : add esp, 4; mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret
0x000386e3 : add [ecx + 0x8904245c], cl; xor al, 0x24; call [ebp + 0xffffffd4]
0x000320a9 : add [ebp + 0xbf], cl; add [ebx + 0x2b650440], cl; add eax, 0; ret
0x00045bc2 : add [ecx + 0x168c4], al; add [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x0001ca5b : add esp, 8; mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret
0x0002d558 : sub eax, ebx; add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret
0x00002ec4 : mov [ebp + 0xffffffec], edx; mov [esp + 4], ecx; call [eax + 0xc]
0x00037590 : add [ecx + 0x89042444], cl; adc al, 0x24; call [ebp + 0xffffffd8]
0x000352d4 : add [ecx + 0x8904244c], cl; add al, 0x24; call [ebp + 0xffffffd8]
0x000145f5 : add [eax], al; add [ecx + 0xfffb64a5], cl; jmp [ebp + 0xffffff8b]
0x00045755 : xor eax, eax; add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret
0x0002a04f : add [ebx + 0x748b241c], cl; and al, 4; mov esp, ebp; pop ebp; ret
0x00034bb7 : add [ecx + 0x8904244c], cl; add al, 0x24; call [ebp + 0xffffffd0]
0x00035fe4 : add [ecx + 0x89042444], cl; adc al, 0x24; call [ebp + 0xffffffcc]
0x0000282e : add [eax], al; push ebp; xor eax, eax; mov ebp, esp; pop ebp; ret
0x0003ab69 : mov [eax], 0; add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret
0x0005f09d : int3 ; add [eax], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00016f54 : add [eax], al; add [ecx + 0xfffb50a5], cl; jmp [ebp + 0xffffff8b]
0x0002a2bc : add esp, 4; mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret
0x00006d44 : add esp, 4; mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret
0x00000960 : sbb dl, cl; or al, 8; add [eax], eax; add [eax], al; pop ebp; ret
0x0005bf4f : sub eax, edi; sar eax, 2; pop ebx; pop esi; pop edi; pop ebp; ret
0x0006024b : add [eax], al; mov [esp + 8], eax; mov [esp + 0xc], edx; call ecx
0x000231ec : mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edi; call ebx
0x0004da44 : add [eax], al; add [ebx + 0xfffe708d], cl; jmp [ebp + 0xffffffc7]
0x000231f1 : add [eax], al; add [ecx + 0x89082444], cl; cmp al, 0x24; call ebx
0x0004725a : add [eax], al; add [ecx + 0x858bc445], cl; sar ch, 0xff; call ecx
0x000310e5 : add [eax], al; add [ecx + 0xfffdc085], cl; jmp [esi + 0xffffff90]
0x00004eb8 : add esp, 8; xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x00022c8d : add esp, 4; mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret
0x000443a1 : add [eax], al; add [ecx + 0x89042444], cl; cmp al, 0x24; call esi
0x00032086 : push ebp; mov ebp, esp; pop ebp; lea eax, [eax + 0xfffffff0]; ret
0x0003940a : add [ecx + 0x8904244c], cl; sbb al, 0x24; call [ebp + 0xffffffe0]
0x00032dd6 : xor eax, eax; add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret
0x00020cb2 : push esp; and al, 4; mov [esp + 8], eax; mov [esp], ebx; call ecx
0x00023112 : add [ecx + 0x164c4], al; add [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x00044519 : add [eax], al; add [ecx + 0x89082444], cl; adc al, 0x24; call edi
0x0002340f : add [ecx + 0x15cc4], al; add [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x00051600 : int3 ; mov edi, esi; mov esi, ebx; mov ebx, eax; nop ; call [ebx]
0x0001d5eb : push eax; or [ecx + 0x168c4], al; add [ecx + 0x5d5e5bf0], cl; ret
0x000293bb : mov fs:[esp + 8], esi; mov [esp + 4], 0; mov [esp], ebx; call edi
0x0006069d : add [eax], al; add [ebx + 0x8b042444], cl; inc eax; push esp; ret
0x00044514 : mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edx; call edi
0x00023501 : add [eax], al; add [ecx + 0x890c2444], cl; cmp al, 0x24; call esi
0x00046a76 : add [eax], al; leave ; test eax, eax; sete al; movzx eax, al; ret
0x0004cf8f : add [eax], al; add [ebx + 0xfffe70bd], cl; jmp [ebp + 0xffffffc7]
0x00002638 : add edx, 1; mov [ebx + 4], edx; add esp, 4; pop ebx; pop ebp; ret
0x00045cc2 : push esp; and al, 4; mov [esp], ecx; mov [esp + 8], eax; call edi
0x000083a9 : mov esi, [esp + 4]; mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x000146c0 : mov [esp + 4], ecx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00036e68 : pop esp; and al, 4; mov [esp], edx; mov [esp + 8], eax; call [esi]
0x0005e8e2 : leave ; mov ecx, [ebx + ecx*4 + 0xffffa034]; add ecx, ebx; jmp ecx
0x00045b04 : mov [esp + 0xc], ebx; mov [esp + 8], edx; mov [esp], eax; call edi
0x00014a7d : mov [esp + 8], edx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00003951 : add [eax], al; mov [esp + 4], 0; mov [esp], ebx; call [eax + 0x2c]
0x0003b796 : mov edx, [ebp + 0xc]; pop ebp; mov eax, [eax]; sub eax, [edx]; ret
0x00001d95 : inc ebp; or [ecx + 0x71e82404], cl; add al, [eax]; add cl, cl; ret
0x0001e94a : push esp; mov [esp + 0x44], eax; mov [esp], eax; call [eax + 0x10]
0x00060e1f : add [eax + eax*8 + 0xc483f275], al; or [eax + 4], bh; pop ebx; ret
0x000146c1 : dec esp; and al, 4; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00034985 : pop esp; and al, 4; mov [esp], ecx; mov [esp + 8], eax; call [esi]
0x00002b0a : lea esi, [esi]; push ebp; xor eax, eax; mov ebp, esp; pop ebp; ret
0x00009deb : dec [ebx + 0x703b1446]; adc [ebx + ebx + 0xffffffb9], dh; ret 0x14
0x0001dc0d : inc eax; and al, 0; add [eax], al; add [ebx + 0x5d5b04c4], al; ret
0x00060620 : mov edx, [esp + 8]; mov eax, [esp + 4]; mov [eax + 0x4c], edx; ret
0x00012b66 : inc esp; and al, 4; mov [ebp + 0xfffffff0], edx; call [edi + 0x1c]
0x0004599d : inc ebp; or [ecx + 0x49e82404], cl; add [eax], al; add cl, cl; ret
0x00034984 : mov [esp + 4], ebx; mov [esp], ecx; mov [esp + 8], eax; call [esi]
0x0005eff6 : pop es; mov eax, [ebx + eax*4 + 0xffffa444]; add eax, ebx; jmp eax
0x00060e3c : add [eax], al; add [eax], al; add esp, 8; mov eax, 2; pop ebx; ret
0x00012b65 : mov [esp + 4], eax; mov [ebp + 0xfffffff0], edx; call [edi + 0x1c]
0x00001619 : inc ebp; or [ecx + 0x4de82404], cl; add [eax], al; add cl, cl; ret
0x00002829 : lea edi, [edi]; push ebp; xor eax, eax; mov ebp, esp; pop ebp; ret
0x0001c135 : inc ebp; or [ecx + 0x71e82404], cl; adc al, [eax]; add cl, cl; ret
0x00020e04 : add [eax], al; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x40]
0x0003e9df : add cl, [ecx + 0x89082474]; push esp; and al, 4; call [eax + 0x1c]
0x00036e67 : mov [esp + 4], ebx; mov [esp], edx; mov [esp + 8], eax; call [esi]
0x000233af : mov [esp + 0xc], ecx; mov [esp + 4], eax; mov [esp], edi; call esi
0x0001f963 : add [eax], al; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x00051f89 : inc ebp; or [ecx + 0xcde82404], cl; add [eax], al; add cl, cl; ret
0x00002b2c : add [eax], al; add [eax], al; push ebp; mov ebp, esp; pop ebp; ret
0x000201bb : inc ebx; or [ebx + 9], dh; movzx eax, [eax]; pop ebx; pop ebp; ret
0x00031d49 : add [ecx + 0x1010c4], al; add [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x00028bdf : push [ecx]; fild [ecx + 0x8aff]; add [edi], cl; xchg eax, ebp; ret
0x000446ba : add [eax], al; mov [esp + 8], 0; mov [esp], esi; call [eax + 0x40]
0x0003ab6a : add [eax], al; add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret
0x00051fc8 : inc ebp; or [ecx + 0x8ee82404], cl; add [eax], al; add cl, cl; ret
0x000401a9 : mov [esp + 8], edx; mov [ebp + 0xffffeed4], edx; call [eax + 0x1c]
0x000366ea : inc esp; and al, 8; mov eax, [ebp + 8]; mov [esp], eax; call [ebx]
0x00060e4b : mov dh, 0; add [eax], al; add [ebx + 0xc03108c4], al; pop ebx; ret
0x000366e9 : mov [esp + 8], eax; mov eax, [ebp + 8]; mov [esp], eax; call [ebx]
0x000601be : mov [esi + 0x4c], eax; mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x00017e0a : div ebx; add ecx, eax; mov eax, ecx; pop ebx; pop esi; pop ebp; ret
0x00023e8b : sbb al, [ebx + 0xf8890cc4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x000047db : add [edi], ecx; test eax, ebp; pop ebp; add [eax], al; pop ebp; ret
0x000247d5 : add [ebx + 0xd8891cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00011d76 : adc [eax + 0xffffffff], bh; pop ebx; pop esi; pop edi; pop ebp; ret
0x00036def : add [ebx + 0xf0895cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00061eb7 : add [ebx + 0xf0897cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0003a471 : mov ebx, eax; mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret
0x0005f09a : add [ecx + 0xccc4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0001e915 : mov eax, ebx; mov edx, esi; pop ebx; pop esi; pop edi; pop ebp; ret
0x0002f462 : adc [eax], eax; add bh, al; inc eax; or [eax + 0xe90807a0], dl; ret
0x00060621 : push esp; and al, 8; mov eax, [esp + 4]; mov [eax + 0x4c], edx; ret
0x000069e8 : dec [ebx + 0xc483d045]; xor [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00020bf0 : sbb [ecx + 0x84c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0005299b : mov eax, esi; mov edx, edi; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000a4c3 : add [ebx + 0xc0311cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00013da9 : add [eax], eax; add [eax], al; mov [ebp + 0xfffffb78], edi; jmp eax
0x000234fc : mov [esp + 0x10], 0; mov [esp + 0xc], eax; mov [esp], edi; call esi
0x0004650f : sub [ecx + 0xb0c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x000619d3 : inc esp; and al, 4; mov eax, [esp + 0x28]; mov [esp], eax; call edx
0x0005010c : add [ebx + 0xd08958c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x000442ef : lea eax, [ebx + 0x28]; mov [esp + 4], eax; mov [esp], edi; call esi
0x0002bcb5 : add [ebp + 0xf889f465], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x00046525 : add [eax + 0xffffffff], bh; pop ebx; pop esi; pop edi; pop ebp; ret
0x00006e3c : add [ebx + 0xd08904c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0004444f : lea eax, [ebx + 0x54]; mov [esp + 4], eax; mov [esp], edi; call esi
0x00060ce6 : mov [esp + 4], eax; mov eax, [esp + 0x18]; mov [esp], eax; call edx
0x0001d026 : pop ebx; add esi, eax; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x00001d65 : inc ebp; or [ecx + 0x51e82404], cl; adc eax, [ecx]; add cl, cl; ret
0x0005bea3 : adc [ebp + 0xffffffda], dh; pop ebx; pop esi; pop edi; pop ebp; ret
0x00028274 : add [ebp + 0xf089f465], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x00020b75 : adc [ecx + 0x84c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0002a3f7 : add [ebx + 0xf08908c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000d17a : add [eax], al; shl eax, cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x0002da05 : add [ebx + 0xf88948c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x000619d2 : mov [esp + 4], eax; mov eax, [esp + 0x28]; mov [esp], eax; call edx
0x0000cd1f : add [ebx + 0xc03104c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x000018a3 : dec [ebx + 0xc483f045]; xor [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00006f1c : add [ebx + 0xf08958c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001efef : add [ebx + 0x48c48302], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x00013c13 : movzx eax, [eax + 0x80aef40]; mov eax, [eax*4 + 0x80aebe0]; jmp eax
0x00061797 : mov esi, eax; pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x0001c38a : sbb [ebx + 0xf0891cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000feb3 : add [ebx + 0xd0891cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00014a7e : push esp; and al, 8; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0001c165 : inc ebp; or [ecx + 0xa1e82404], cl; adc eax, [eax]; add cl, cl; ret
0x0004fc67 : add [ebx + 0x2890c53], cl; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x00001dfb : add al, 1; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x30]
0x0003ec52 : movzx eax, [edi + 0x80c1980]; mov eax, [eax*4 + 0x80c1920]; jmp eax
0x00061bed : mov [esp + 4], eax; mov eax, [esp + 0x2c]; mov [esp], eax; call edx
0x00006d43 : adc [ebx + 0xd08904c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001348a : movzx eax, [eax + 0x80aef40]; mov eax, [eax*4 + 0x80aeee0]; jmp eax
0x00022702 : pop ebx; mov esi, eax; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x00009135 : add [ebx + 0xf0890cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00060ce7 : inc esp; and al, 4; mov eax, [esp + 0x18]; mov [esp], eax; call edx
0x000500e6 : sub edx, ebx; mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001ee55 : mov [esp], ebx; sub eax, edi; mov [esp + 8], eax; call [edx + 0x38]
0x0004fc57 : add [ebx + 0x408b0c53], cl; sbb [ecx + 0xfc5d8b02], cl; leave ; ret
0x0003bd45 : add [ebp + 0xc031f465], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001a7e4 : mov eax, edi; pop ebx; pop esi; pop edi; mov esp, ebp; pop ebp; ret
0x0003f3cf : movzx eax, [ecx + 0x80c1980]; mov eax, [eax*4 + 0x80c1620]; jmp eax
0x00039718 : push es; add [eax], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00061fbb : xor esi, esi; pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x00008b3f : add [ebx + 0xf08918c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00052eb1 : inc ebp; or [ecx + 0x65e82404], cl; xor eax, [eax]; add cl, cl; ret
0x0003f580 : add [eax], eax; add [eax], al; mov [ebp + 0xffffefb4], edi; jmp eax
0x00052e82 : inc ebp; or [ecx + 0x94e82404], cl; xor eax, [eax]; add cl, cl; ret
0x00061bee : inc esp; and al, 4; mov eax, [esp + 0x2c]; mov [esp], eax; call edx
0x000437b2 : sbb [ebx + 0xf08920c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00053002 : add [ebx + 0xd88928c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x000401aa : push esp; and al, 8; mov [ebp + 0xffffeed4], edx; call [eax + 0x1c]
0x00030c0f : mov [eax], 0; mov [esp], edi; mov [ebp + 0xffffffe0], ecx; call esi
0x00004eb7 : add [ebx + 0xc03108c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00002c65 : add [eax], al; add [ebx + 0xc483fe23], al; or [ebx + 0x5d], bl; ret
0x000363c5 : add [ebx + 0xf0896cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00000f3f : add [ebx + 0xd08910c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0005de91 : add [eax], eax; add [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret 8
0x000002e1 : add [ebp + eax + 0xffffffe8], dh; pop es; rol [eax], 0; leave ; ret
0x0001bf28 : add [ebx + 0xd0890cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0004b550 : inc esi; pop es; add [ebx + 0xfffe5cbd], cl; jmp [esi + 0xffffffba]
0x0003423d : add [ecx + 0x80008bc2], cl; int3 ; sub [eax + 0xf028910], 0x85; ret
0x000615ca : inc eax; xor esi, esi; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x00039978 : add al, [ebx + 0xc03124c4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x000603d9 : add [ecx + 0xecc4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0000e026 : add esp, 8; mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x0001dc99 : pop ebp; clc ; mov eax, [eax + 0xc]; mov esp, ebp; pop ebp; jmp eax
0x00051590 : add dh, al; inc ebp; cmpsd [esi], es:[edi]; add dh, al; inc ebp; ret
0x000236d7 : add [ebx + 0x10891045], cl; mov eax, [ebp + 0xfffffff8]; leave ; ret
0x00000e1b : mov eax, [ebx + eax + 0xc]; ror eax, 9; xor eax, gs:[0x18]; call eax
0x00021d2d : movzx eax, al; sub eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret
0x0002340e : add es:[ecx + 0x15cc4], al; add [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x000087e5 : add [ecx + 0x8d4c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0005f238 : pushal ; add [eax], al; add [eax + 0xfffe59e9], al; jmp [esi + 0x3d]
0x0001ea2f : add [eax], al; mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret
0x00030c9f : mov [edx], eax; mov eax, [ebp + 0xc]; mov [esp], eax; call [ebp + 8]
0x00011753 : mov eax, [ebp + 0xffffffc4]; mov [esp], eax; call [ebp + 0xffffffd8]
0x0000d157 : add [ecx + 0x1d4c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x000437af : add [ecx + 0xc4831843], cl; and [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x0001fc0b : add [eax], al; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x48]
0x00002289 : lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00011243 : mov [ebp + 0xfffffff8], eax; ldmxcsr [ebp + 0xfffffff8]; leave ; ret
0x0001fe24 : mov [ebp + 8], ebx; pop ebx; pop ebp; mov eax, [eax + 0x10]; jmp eax
0x000202e6 : inc ebp; adc [ebx + 0x295b18c4], al;  pop esi; pop edi; pop ebp; ret
0x0001903a : xchg eax, esp; mov [esp], edi; mov [ebp + 0xffffff38], edx; call ecx
0x00030c13 : add [eax], al; mov [esp], edi; mov [ebp + 0xffffffe0], ecx; call esi
0x00060e4c : add [eax], al; add [eax], al; add esp, 8; xor eax, eax; pop ebx; ret
0x000539c7 : sbb [ecx + 0xe8c4], eax; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00002874 : add [eax], al; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x18]
0x00002697 : add [eax], al; mov [esp], eax; mov [esp + 4], ecx; call [edx + 0x24]
0x0004fc47 : add [ebx + 0x10890c43], cl; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x00031f60 : pop edx; mov ecx, [esp]; mov [esp], eax; mov eax, [esp + 4]; ret 0xc
0x00039022 : mov ebx, [ebp + 0xffffffdc]; mov [esp], ebx; call [ebp + 0xffffffe4]
0x000594fc : add [eax], al; pop ebx; pop esi; pop edi; mov esp, ebp; pop ebp; ret
0x0005e7e6 : add [eax], al; mov eax, [edx + 0x5c]; add esp, 8; pop ebx; nop ; ret
0x0001839d : pop ebx; pop esi; pop edi; pop ebp; lea esp, [ecx + 0xfffffffc]; ret
0x0003e00d : pop esp; add [eax], eax; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0001bec9 : add [ebx + 0xc03114c4], eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x00010bf3 : add [eax], al; mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret
0x00038e87 : mov eax, [ebp + 0xffffffdc]; mov [esp], eax; call [ebp + 0xffffffe4]
0x00002b3f : add [ebp + 0xffffffa1], dl; sbb [ebx + 0xe589080c], ah; pop ebp; ret
0x0002a09b : add al, 0; cmp eax, [ebp + 8]; pop ebp; setae al; movzx eax, al; ret
0x0003e9de : inc [edx]; mov [esp + 8], esi; mov [esp + 4], edx; call [eax + 0x1c]
0x0000a197 : add [ebp + 0xc4830870], cl; sbb [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x0001d9a8 : add [eax], al; mov [esp + 4], eax; mov [esp], ebx; call [edx + 0x18]
0x00046760 : adc [ebx + 0x148de845], cl; add [ecx], edi; ror [edi], 1; sahf ; ret
0x000223d4 : add [eax], al; xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001bdd1 : add [ebx + 0xc03118c4], eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x0002a04e : add es:[ebx + 0x748b241c], cl; and al, 4; mov esp, ebp; pop ebp; ret
0x00052ee2 : inc ebp; or [ecx + 0xf4e82404], cl; bound eax, [eax]; add cl, cl; ret
0x0003db66 : sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 0x8085cb5]; jmp eax
0x0003a0c2 : inc ebx; or [eax], al; add [eax], al; add [ebx + 0x5d5b10c4], al; ret
0x00046a75 : add [eax], al; add cl, cl; test eax, eax; sete al; movzx eax, al; ret
0x00029b14 : add [ecx + 0x2010c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0005beac : lea esi, [esi]; xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x0005e7e2 : lea esi, [esi]; mov eax, [edx + 0x5c]; add esp, 8; pop ebx; nop ; ret
0x0001dfe1 : mov eax, [eax + 0x10]; add esp, 8; pop ebx; pop esi; pop ebp; jmp eax
0x0005005c : mov eax, [ebp + 0xffffffbc]; mov eax, [eax]; mov [esp], eax; call edi
0x0005e179 : mov edi, [ebp + 0xfffffffc]; sub esp, 8; mov esp, ebp; pop ebp; ret 4
0x0000b95d : mov [eax], al; add [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00060858 : mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; leave ; ret
0x0003eed2 : mov edx, [ebp + 0xffffef8c]; mov [esp + 0xc], ecx; call [eax + edx*4]
0x0001d93b : mov [eax + 0xc], edx; xor eax, eax; add esp, 8; pop ebx; pop ebp; ret
0x00002b61 : mov ebp, esp; mov eax, [ebp + 8]; pop ebp; mov eax, [eax + 0x34]; ret
0x00052f11 : inc ebp; or [ecx + 0xc5e82404], cl; bound eax, [eax]; add cl, cl; ret
0x000446b4 : mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], esi; call [eax + 0x40]
0x0001cb68 : add [eax], al; add [eax + 0xfffffff5], ah; or cl, [eax]; pop ebp; ret
0x00047fb6 : sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 0x8090105]; jmp eax
0x0000b380 : mov eax, ebx; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x00020dfe : mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x40]
0x00029b17 : adc [eax], ah; add [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0003ace1 : add [ebp + 0xf889f465], cl; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x00002e05 : add [eax], al; mov [ebx + 0x28], 0; add esp, 4; pop ebx; pop ebp; ret
0x000236c4 : adc ecx, [ebx + 0x93e8f845]; test [eax], 0; xor eax, eax; leave ; ret
0x0003c221 : add [eax + 0xfffffffc], edi; mov gs:[eax], edx; pop ebx; pop ebp; ret
0x0000394b : mov [esp + 8], 0; mov [esp + 4], 0; mov [esp], ebx; call [eax + 0x2c]
0x0001dc0a : add [eax], al; mov [eax + 0x24], 0; add esp, 4; pop ebx; pop ebp; ret
0x00032356 : push esp; cmp dl, [eax]; mov [esp], ecx; mov [esp + 4], edx; call eax
0x00046c9a : add [ebp + 0xf089f465], cl; pop ebx; pop esi; pop edi; pop ebp; ret 8
0x0003e00a : sbb eax, [ecx + 0x15cc4]; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x000244c7 : dec [ebx + 0xf883e845]; add cl, [edi]; mov es, [ecx + 0x1fffffd]; ret
0x0004452e : sub eax, ebx; mov ebx, [ebp + 0xfffffff4]; mov esp, ebp; pop ebp; ret
0x0001f95d : mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x00060e1e : add es:[eax + eax*8 + 0xc483f275], al; or [eax + 4], bh; pop ebx; ret
0x00031fa7 : pop edx; mov ecx, [esp]; mov [esp], eax; mov eax, [esp + 4]; ret 0x14
0x0001e1c1 : mov eax, [eax + 0x14]; add esp, 8; pop ebx; pop esi; pop ebp; jmp eax
0x0004447a : add [esp + ecx], ch; or [ebx + 0x5e5b28c4], al; pop edi; pop ebp; ret
0x00029541 : push ebp; int3 ; mov [esp + 4], eax; mov [esp], ecx; call [ebp + 0x10]
0x000450f1 : dec [ecx + 0xfffbdc8d]; dec [ecx + 0xfffbecbd]; jmp [esi + 0xffffff90]
0x00053e99 : dec [ecx + 0xffff3495]; dec [ebx + 0xffff4495]; jmp [esi + 0xffffff90]
0x000291bd : add [eax], eax; add [ebp + 0x8b0378d2], al; inc ebp; clc ; leave ; ret
0x0001a7e1 : add [eax], eax; add [ecx + 0x5f5e5bf8], cl; mov esp, ebp; pop ebp; ret
0x0004854b : dec [ebx + 0xfffe6c85]; dec [ebx + 0xfffe40b5]; jmp [ebp + 0xffffff8b]
0x0001e240 : add [ebx + 0xa8904c1], eax; add esp, 8; pop ebx; pop esi; pop ebp; ret
0x0001a5b3 : add [ebp + 0x73], esi; add esp, 8; mov eax, edx; pop ebx; pop ebp; ret
0x0005d525 : inc ebx; adc [ebp + 0x1840fc0], al; add [eax], eax; add [ecx], al; ret
0x0002dbe3 : adc [ecx + 0xc4830c41], cl; or [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00032421 : lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x0000d6f4 : lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret 8
0x0004dec7 : dec [ecx + 0xfffe60b5]; dec [ebx + 0xfffe549d]; jmp [ebp + 0xffffff89]
0x00030cd5 : add [ecx + 0xd4c481d8], cl; add [eax], al; add [ebx + 0x5d], bl; ret 8
0x00002586 : mov [ebx + 0x10], eax; xor eax, eax; add esp, 8; pop ebx; pop ebp; ret
0x0000d175 : lea ecx, [edx*8]; shl eax, cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x0004c059 : dec [ecx + 0xfffe20b5]; dec [ebx + 0xfffe5cbd]; jmp [ebp + 0xffffff8b]
0x0001fdf6 : mov esi, [esp + 4]; mov edi, [esp + 8]; mov esp, ebp; pop ebp; jmp eax
0x0001e241 : add ecx, 4; mov [edx], ecx; add esp, 8; pop ebx; pop esi; pop ebp; ret
0x000503f2 : dec [edi]; test ch, ah; add [eax], al; add [ebx + 0x850ffefb], al; ret
0x0000cd1e : add es:[ebx + 0xc03104c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00052009 : inc ebp; or [ecx + 0x5de82404], cl; pop es; add [eax], al; leave ; ret
0x0005fe40 : add eax, [eax]; add [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00043c79 : push ebp; cwde ; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x48]
0x0004c14f : dec [ebx + 0xfffe68bd]; dec [ecx + 0xfffe20b5]; jmp [ebp + 0xffffff8b]
0x000320ac : add [eax], al; add [eax], al; mov eax, [eax + 4]; sub eax, gs:[0]; ret
0x00009963 : inc ebp; or [ecx + 0xcc48310], cl; xor eax, eax; pop ebx; pop ebp; ret
0x00052048 : inc ebp; or [ecx + 0x1ee82404], cl; pop es; add [eax], al; leave ; ret
0x0001d87f : dec eax; or [ecx + 0x8508910], cl; mov [eax + 0x20], ecx; pop ebp; ret
0x00002e08 : inc ebx; sub [eax], al; add [eax], al; add [ebx + 0x5d5b04c4], al; ret
0x0000efe9 : dec [ecx + 0xffff4cb5]; dec [ecx + 0xffff489d]; jmp [esi + 0xffffff90]
0x0004a48c : dec [ebx + 0xfffe689d]; dec [ebx + 0xfffe5cbd]; jmp [ebp + 0xffffff8b]
0x0004859f : dec [ecx + 0xfffe6c85]; dec [ebx + 0xfffe5cb5]; jmp [ebp + 0xffffff89]
0x00004eb6 : add es:[ebx + 0xc03108c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00060e2b : add [ebx + 0xffffffc3], bl; nop ; add esp, 8; mov eax, 8; pop ebx; ret
0x0003e595 : inc ebp; or [ecx + 0x1e82404], cl; pop esp; add [eax], al; leave ; ret
0x000320ec : inc eax; pop ebx; add [eax], eax; pop edx; pop ecx; pop eax; jmp [eax]
0x0004c8e0 : dec [ebx + 0xfffe68b5]; dec [ecx + 0xfffe50bd]; jmp [ebp + 0xffffff8b]
0x0004f0e8 : dec [ecx + 0xfffe608d]; dec [ebx + 0xfffe68b5]; jmp [ebp + 0xffffff8b]
0x0000cd13 : add [eax], eax; add [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00000718 : inc esp; and al, 8; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 8]
0x00000829 : pop ebp; clc ; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0000209d : mov ah, 0; add [eax], al; mov eax, esi; pop ebx; pop esi; pop ebp; ret
0x00006728 : add [edi], ecx; test esi, esp; add ds:[eax], al; pop ebx; pop ebp; ret
0x0004475f : add [ecx], cl; add [eax], al; add [eax + 0xffffffff], bh; pop ebp; ret
0x00000717 : mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 8]
0x00008b3e : add es:[ebx + 0xf08918c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00060380 : add cl, [ecx + 0x890c2454]; inc esp; and al, 4; mov [esp], 1; call ecx
0x000602cc : add [eax], al; mov edx, 2; pop esi; mov eax, edx; pop edi; pop ebp; ret
0x0002efb5 : add [ebx + 0xd88920c4], al; pop ebx; pop esi; pop edi; pop ebp; ret 0xc
0x0004fccd : add [eax], al; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x0001d939 : push eax; adc [ecx + 0xc0310c50], cl; add esp, 8; pop ebx; pop ebp; ret
0x00012512 : add [ebx + 0xc483f045], cl; xor [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0000131a : mov [ecx + 8], esi; add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret
0x00052e22 : inc ebp; or [ecx + 0x74e82404], cl; push es; add [eax], al; leave ; ret
0x00060c0a : add [eax], al; add [ecx + 0x150c4], al; add [ecx + 0x5d5f5ef8], cl; ret
0x0001c8e9 : lea esp, gs:[ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00030a34 : xchg eax, esi; pop eax; add [eax], eax; add [ecx + 0x8303ebc3], cl; ret
0x00033565 : add [ebp + 0xd089f465], cl; pop ebx; pop esi; pop edi; pop ebp; ret 0xc
0x000028da : push eax; sbb [ebx + 0xdb75fff8], al; add esp, 8; pop ebx; pop ebp; ret
0x000438a7 : sbb [ecx + 0xc483144b], cl; and [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00009668 : pop ds; adc al, [eax]; add [ecx + 0x4c483d8], cl; pop ebx; pop ebp; ret
0x00013b44 : mov [esp + 4], edx; sub eax, edx; mov [esp + 8], eax; call [ecx + 0x1c]
0x0001d31a : inc ebx; adc [ecx + 0x8c48302], cl; xor eax, eax; pop ebx; pop ebp; ret
0x0000809f : add [eax + eax], cl; add [eax], al; xor eax, eax; pop ebx; pop ebp; ret
0x00002696 : add [eax], al; add [ecx + 0x4c892404], cl; and al, 4; call [edx + 0x24]
0x0003d20e : adc [ecx + 0xc4839904], cl; sub [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0001c9d0 : mov eax, [ebx + 0x94]; mov [esp + 4], 0; mov [esp], ebx; call [eax + 8]
0x0002cbc3 : pop ebx; mov esi, eax; mov eax, esi; pop esi; pop edi; pop ebp; ret 0xc
0x00027adc : add cl, [ebx + 0xc483e445]; and [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x000605cf : mov ecx, [esp + 0x18]; mov [edx + eax*4], ecx; add esp, 8; pop ebx; ret
0x0002c56c : add [ebx + 0xc4831045], cl; adc [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0001d881 : mov [eax], edx; mov [eax + 8], edx; mov [eax + 0x20], ecx; pop ebp; ret
0x000320a8 : add [eax], al; lea edi, [edi]; mov eax, [eax + 4]; sub eax, gs:[0]; ret
0x00001937 : add [ecx], bl; rol [ebx + 0x2d30c4], 0; add [eax + 0x5d5f5e5b], al; ret
0x0000d156 : add es:[ecx + 0x1d4c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00052e51 : inc ebp; or [ecx + 0x45e82404], cl; push es; add [eax], al; leave ; ret
0x00004e99 : mov [esi + 4], ebx; add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret
0x00000d2c : mov [edx + 0x14], ecx; mov [edx + 0xc], ebp; mov [edx + 0x18], eax; ret
0x00038e13 : mov [esp + 8], eax; mov eax, [ebx + 0xc]; mov [esp], eax; call [ebx + 4]
0x00017f57 : add eax, [ebx + 0x468d1cc4]; xor [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0003dda8 : mov esi, [esp + 0x18]; mov edi, [esp + 0x1c]; mov esp, ebp; pop ebp; ret
0x00034cf5 : inc esp; and al, 8; mov eax, [ebp + 0xc]; mov [esp + 4], eax; call [edi]
0x0005391d : dec [ebx + 0x45c7904d]; mov [eax], es; add [eax], al; add [ecx], al; ret
0x0003741c : inc esp; and al, 8; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x0003741b : mov [esp + 8], eax; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x000615c7 : add [ebx + 0xf63140c4], al; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x000594fb : adc [eax], al; add [ebx + 0x5e], bl; pop edi; mov esp, ebp; pop ebp; ret
0x00032a05 : add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp], eax; call edi
0x00043c77 : add [ebp + 0x54899855], cl; and al, 4; mov [esp], ebx; call [eax + 0x48]
0x0001dfdd : add [ecx + 0x408b085d], cl; adc [ebx + 0x5e5b08c4], al; pop ebp; jmp eax
0x00047b04 : inc ebx; or [ebx + 0x658d14ec], al; clc ; pop ebx; pop esi; pop ebp; ret
0x00038e14 : inc esp; and al, 8; mov eax, [ebx + 0xc]; mov [esp], eax; call [ebx + 4]
0x000320a4 : lea esi, [esi]; lea edi, [edi]; mov eax, [eax + 4]; sub eax, gs:[0]; ret
0x000347e3 : mov [esp + 8], eax; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x000347e4 : inc esp; and al, 8; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x0003e306 : dec [ecx + 0x4c89243c]; and al, 8; mov [esp + 4], eax; call [ebp + 0x14]
0x0003b804 : inc esp; xchg eax, ebx; or [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x00002b6c : lea esi, [esi]; push ebp; mov ebp, esp; mov eax, [ebp + 8]; pop ebp; ret
0x00034cf4 : mov [esp + 8], eax; mov eax, [ebp + 0xc]; mov [esp + 4], eax; call [edi]
0x0000341d : inc ebp; adc [ebx + 0x5e5b14c4], al; sub eax, edi; pop edi; pop ebp; ret
0x0003b800 : dec [ecx + 0x93448b38]; or [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x00060e9b : mov edi, edx; mov eax, [ebx + eax*4 + 0xffffa51c]; add eax, ebx; jmp eax
0x0001e6d0 : inc esp; and al, 4; mov [esp], esi; mov [esp + 8], edx; call [esi + 0xc]
0x00013b45 : push esp; and al, 4; sub eax, edx; mov [esp + 8], eax; call [ecx + 0x1c]
0x00030f33 : pop ebp; clc ; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret 4
0x00033aa1 : lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret 0xc
0x0002f6b2 : add esi, 8; mov edi, [ebp + 8]; mov eax, [ebx]; add eax, [edi]; call eax
0x0005e66b : mov edi, edx; mov eax, [ebx + eax*4 + 0xffffa000]; add eax, ebx; jmp eax
0x0003e087 : dec [ecx + 0x4489241c]; and al, 8; mov [esp + 4], edx; call [ebp + 0x14]
0x000368ef : inc esp; and al, 8; mov eax, [ebp + 0xc]; mov [esp + 4], eax; call [ebx]
0x00039596 : pop es; add [eax], al; add [ebx + 0x5e5b58c4], al; pop edi; pop ebp; ret
0x000104ae : dec [ebx + 0xc483e045]; dec esp; pop ebx; pop esi; pop edi; pop ebp; ret
0x00010971 : xchg eax, esp; add al, 0; add [ecx], ch; ror [ecx + 0x83fbd1c7], cl; ret
0x00047960 : sbb ah, bh; dec [ebx + 0x658de845]; clc ; pop ebx; pop esi; pop ebp; ret
0x0000b4ca : add [eax], al; add [ebx + 0xcb6a015], cl; or [ebp + 0xc74c75d2], al; ret
0x000368ee : mov [esp + 8], eax; mov eax, [ebp + 0xc]; mov [esp + 4], eax; call [ebx]
0x0001e6cf : mov [esp + 4], eax; mov [esp], esi; mov [esp + 8], edx; call [esi + 0xc]
0x00020c68 : mov [esp + 8], edi; mov [esp + 0xc], 0; mov [esp], ebx; call [eax + 0x40]
0x00020b53 : mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call [ecx + 0x40]
0x0006077f : add [eax], al; xor esi, esi; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x0001eae1 : mov [esp], edi; mov [esp + 4], edx; mov [esp + 8], ecx; call [eax + 0x40]
0x00015aa3 : mov [esp + 8], edi; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x1c]
0x000299a9 : inc esp; and al, 4; mov eax, [ebp + 8]; mov [esp], eax; call [ebp + 0x10]
0x0001e1bf : pop ebp; or [ebx + 0xc4831440], cl; or [ebx + 0x5e], bl; pop ebp; jmp eax
0x000098c6 : mov edx, [ebp + 0xfffffff0]; mov [esp], ebx; mov [esp + 4], edx; call eax
0x00008f89 : mov [esp + 4], edx; mov edx, [ebp + 0xfffffff0]; mov [esp], edx; call eax
0x0002e5d1 : lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret 0x14
0x0002018c : dec esp; and al, 4; mov [esp], esi; mov [esp + 8], ebx; call [eax + 0x20]
0x00020f1b : mov [esp + 4], eax; mov [esp + 8], ecx; mov [esp], ebx; call [edx + 0x40]
0x00002916 : add [eax + 0xf4750a3a], eax; sub eax, edx; pop ebx; pop esi; pop ebp; ret
0x00062908 : movzx eax, al; mov eax, [ebx + eax*4 + 0xffffa550]; add eax, ebx; jmp eax
0x0001cd10 : mov [esp + 8], esi; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0001f9e9 : mov [esp + 4], ebx; mov [esp + 8], esi; mov [esp], edi; call [eax + 0x40]
0x0001e912 : add [eax], al; add [ecx + 0x5bf289d8], cl; pop esi; pop edi; pop ebp; ret
0x0001d733 : mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call [eax + 0x1c]
0x000203de : mov [esp + 8], ecx; mov [esp + 4], esi; mov [esp], ebx; call [eax + 0x3c]
0x0000a2fc : mov edx, [ebp + 0xffffffec]; mov [esp], esi; mov [esp + 4], edx; call eax
0x0001f9ea : pop esp; and al, 4; mov [esp + 8], esi; mov [esp], edi; call [eax + 0x40]
0x0005e8e0 : movzx ecx, cl; mov ecx, [ebx + ecx*4 + 0xffffa034]; add ecx, ebx; jmp ecx
0x00043d11 : add [eax], al; add [ebx + 0xd08978c4], al; pop ebx; pop esi; pop ebp; ret
0x00060568 : mov eax, [eax]; mov ebx, [esp + 4]; mov esi, [esp + 8]; add esp, 0xc; ret
0x00060304 : mov [esp + 8], esi; mov [esp + 0xc], edi; mov [esp + 0x28], eax; call ecx
0x00020f1c : inc esp; and al, 4; mov [esp + 8], ecx; mov [esp], ebx; call [edx + 0x40]
0x000203df : dec esp; and al, 8; mov [esp + 4], esi; mov [esp], ebx; call [eax + 0x3c]
0x00001f78 : mov [esp + 8], edi; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0003e307 : mov [esp], edi; mov [esp + 8], ecx; mov [esp + 4], eax; call [ebp + 0x14]
0x0003e606 : mov [esp + 4], edx; mov [esp + 8], ebx; mov [esp], ecx; call [eax + 0x1c]
0x0004f6e8 : inc [ebp + 0xc70674c0]; add [eax + 0xffffffa8], al; or al, 8; leave ; ret
0x0004568b : add bh, al; add [eax], al; add [eax], al; add [ecx + 0xebd2311a], cl; ret
0x0001dfdf : pop ebp; or [ebx + 0xc4831040], cl; or [ebx + 0x5e], bl; pop ebp; jmp eax
0x0002dbe4 : mov [ecx + 0xc], eax; add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret
0x00020297 : mov [esp + 8], ecx; mov [esp + 4], edi; mov [esp], ebx; call [eax + 0x38]
0x00020298 : dec esp; and al, 8; mov [esp + 4], edi; mov [esp], ebx; call [eax + 0x38]
0x0001fe21 : add [eax], al; add [ecx + 0x5d5b085d], cl; mov eax, [eax + 0x10]; jmp eax
0x0006032c : add [eax], al; mov edx, eax; pop esi; mov eax, edx; pop edi; pop ebp; ret
0x00045b03 : add [ecx + 0x890c245c], cl; push esp; and al, 8; mov [esp], eax; call edi
0x00044b09 : add [eax], al; add [ebx + 0xd08918c4], al; pop ebx; pop esi; pop ebp; ret
0x0001e8f4 : mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], edi; call [ecx + 0x40]
0x0005e7e5 : add [eax], al; add [ebx + 0xc4835c42], cl; or [ebx + 0xffffff90], bl; ret
0x00000ffb : add al, 0; add [eax], al; add esp, 4; mov eax, edx; pop ebx; pop ebp; ret
0x0003e088 : mov [esp], ebx; mov [esp + 8], eax; mov [esp + 4], edx; call [ebp + 0x14]
0x0000fc15 : add [ebx + 0xfffe5085], cl; dec [ebp + 0x5e5bf465]; pop edi; pop ebp; ret
0x00020918 : mov [esp + 8], edx; mov [esp + 4], eax; mov [esp], ebx; call [ecx + 0x38]
0x0003df1b : mov [esp + 4], edi; mov [esp], ebx; mov [esp + 8], edx; call [ebp + 0x14]
0x0002018b : mov [esp + 4], ecx; mov [esp], esi; mov [esp + 8], ebx; call [eax + 0x20]
0x0005f3e6 : add [eax], al; mov edx, [ebx + ecx*4 + 0xffffa45c]; add edx, ebx; jmp edx
0x00020bbc : mov [esp], ebx; mov [esp + 8], ecx; mov [esp + 4], edx; call [eax + 0x40]
0x000299a8 : mov [esp + 4], eax; mov eax, [ebp + 8]; mov [esp], eax; call [ebp + 0x10]
0x0001f5d3 : mov [esp + 4], esi; mov [esp + 8], eax; mov [esp], ebx; call [edx + 0x40]
0x0005ec74 : movzx edx, dl; mov eax, [ebx + edx*4 + 0xffffa3f0]; add eax, ebx; jmp eax
0x00008d18 : mov [esp + 4], edx; mov edx, [ebp + 0xffffffec]; mov [esp], edx; call eax
0x00020452 : mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call [edi + 0x40]
0x00002691 : mov [esp + 0xc], 0; mov [esp], eax; mov [esp + 4], ecx; call [edx + 0x24]
0x0003e12e : mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call [ebp + 0x14]
0x0003a20f : add [eax], al; add [ebx + 0xd88914c4], al; pop ebx; pop esi; pop ebp; ret
0x00000185 : add [ebp + eax + 0xffffffe8], dh; arpl cx, ax; add [eax], al; leave ; ret
0x00032355 : mov edx, [edx + edi + 0x10]; mov [esp], ecx; mov [esp + 4], edx; call eax
0x0003dee9 : mov [esp + 4], edi; mov [esp + 8], eax; mov [esp], edx; call [ebp + 0x14]
0x0005f2ad : mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; add esp, 0xc; ret
0x0001fafd : mov [esp], ebx; mov [esp + 4], edx; mov [esp + 8], ecx; call [eax + 0x40]
0x0001ea1c : sbb [ecx + 0x59890459], ecx; adc [ecx + 0x59890c59], cl; adc al, 0x89; ret
0x0006061f : add [ebx + 0x8b082454], cl; inc esp; and al, 4; mov [eax + 0x4c], edx; ret
0x000443a0 : add [eax], al; add [eax], al; mov [esp + 4], eax; mov [esp], edi; call esi
0x0006024a : add [eax], al; add [ecx + 0x89082444], cl; push esp; and al, 0xc; call ecx
0x00029405 : inc esp; and al, 4; add al, [eax]; add [eax], al; mov [esp], ebx; call edi
0x00036845 : add [eax], al; add [eax], al; mov [esp + 4], edx; mov [esp], ecx; call ebx
0x00008d19 : push esp; and al, 4; mov edx, [ebp + 0xffffffec]; mov [esp], edx; call eax
0x00008f8a : push esp; and al, 4; mov edx, [ebp + 0xfffffff0]; mov [esp], edx; call eax
0x000556a3 : add [ebx + 0xb60f0441], ecx; lea ebp, [edi + edi*8 + 0xffffffff]; call ebx
0x000352d3 : add [eax], al; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd8]
0x00035fe3 : add [eax], al; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffcc]
0x00002873 : add [eax], al; add [ecx + 0x89042454], cl; sbb al, 0x24; call [eax + 0x18]
0x0005eff5 : mov eax, [edi]; mov eax, [ebx + eax*4 + 0xffffa444]; add eax, ebx; jmp eax
0x0001e8f5 : push esp; and al, 4; mov [esp + 8], eax; mov [esp], edi; call [ecx + 0x40]
0x00020453 : push esp; and al, 4; mov [esp + 8], eax; mov [esp], ebx; call [edi + 0x40]
0x00000dda : sbb [eax], al; add [eax], al; mov [esp], esi; mov [esp + 4], eax; call edx
0x0000ab33 : movzx eax, al; movzx ecx, cl; sub eax, ecx; pop ebx; pop esi; pop ebp; ret
0x0000530b : add [ecx + 0x241c8bd0], cl; mov esi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x00022461 : add [ecx + 0xfffbdc8d], cl; dec [ecx + 0xfffbd4b5]; jmp [esi + 0xffffff90]
0x000293c1 : inc esp; and al, 4; add [eax], al; add [eax], al; mov [esp], ebx; call edi
0x00020919 : push esp; and al, 8; mov [esp + 4], eax; mov [esp], ebx; call [ecx + 0x38]
0x00001df9 : add [edx + 4], 1; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x30]
0x0003ebce : add [eax], al; add bh, al; test ecx, [edi + ebp*8 + 0xffffffff]; jmp [eax]
0x000602cf : add al, [eax]; add [eax], al; pop esi; mov eax, edx; pop edi; pop ebp; ret
0x00060bc7 : add [ebx + 0x558b0c45], cl; or [ecx + 0x44892434], cl; and al, 4; call edx
0x00034bb6 : add [eax], al; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd0]
0x0005f3e2 : lea esi, [esi]; mov edx, [ebx + ecx*4 + 0xffffa45c]; add edx, ebx; jmp edx
0x000029e6 : mov edx, [ebp + 0xc]; pop ebp; mov eax, [eax + 8]; sub eax, [edx + 8]; ret
0x00020b54 : push esp; and al, 4; mov [esp + 8], eax; mov [esp], ebx; call [ecx + 0x40]
0x00039409 : add [eax], al; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x000231f0 : add [eax], al; add [eax], al; mov [esp + 8], eax; mov [esp], edi; call ebx
0x000386e2 : add [eax], al; mov [esp + 4], ebx; mov [esp], esi; call [ebp + 0xffffffd4]
0x00004919 : xor ecx, edi; mov [eax + edx], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x00062e64 : inc esp; and al, 4; sub [eax], al; add [eax], al; mov [esp], eax; call edi
0x00032a0a : inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp], eax; call edi
0x00001191 : add [edi], ecx; test esp, [esi + 0x89000000]; fadd [ebx + 0x5d5b10c4]; ret
0x00060864 : add [ebx + 0x758bf45d], cl; clc ; mov edi, [ebp + 0xfffffffc]; leave ; ret
0x00044518 : add [eax], al; add [eax], al; mov [esp + 8], eax; mov [esp], edx; call edi
0x0001fc0a : add [eax], al; add [ecx + 0x89042454], cl; sbb al, 0x24; call [eax + 0x48]
0x0003e607 : push esp; and al, 4; mov [esp + 8], ebx; mov [esp], ecx; call [eax + 0x1c]
0x0003758f : add [eax], al; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x00030f24 : push edi; mov [esp + 8], esi; mov [esp + 4], edx; mov [esp], eax; call ebx
0x0001d9a7 : add [eax], al; add [ecx + 0x89042444], cl; sbb al, 0x24; call [edx + 0x18]
0x0001ff0f : add [edi], cl; xchg [edi + edi*8 + 0xffffffff], edx; jmp [esi + 0xffffff90]
0x0005be4d : mov [ebx + 0x10], eax; sub esp, 4; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x0001dc05 : mov [eax + 0x28], 0; mov [eax + 0x24], 0; add esp, 4; pop ebx; pop ebp; ret
0x00000ff7 : xor edx, edx; mov [eax], 4; add esp, 4; mov eax, edx; pop ebx; pop ebp; ret
0x000164a3 : mov ecx, [ebp + 0xfffffb78]; mov [ebp + 0xfffffaa4], edx; call [ecx + 0x1c]
0x0001e9d5 : mov [esp + 8], esi; mov [esp + 0xc], ecx; mov [esp], edi; call [eax + 0x40]
0x00044512 : inc ebp;  mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edx; call edi
0x00011835 : inc esp; and al, 4; mov eax, [edx]; mov [esp], eax; call [ebp + 0xffffffd8]
0x00032cef : add [eax], al; add [ebx + 0x758bf85d], cl; cld ; mov esp, ebp; pop ebp; ret
0x000280c9 : adc dh, bh; dec [ecx + 0xdce8241c]; adc dh, bh; inc [ebx + 0x5d5b04c4]; ret
0x000114d0 : add edi, [ebp + 0xc]; mov [esp], eax; mov [esp + 4], edi; call [ebp + 0x18]
0x0001c84b : inc esp; and al, 4; add [eax], eax; add [eax], al; mov [esp], ebx; call ecx
0x0006274c : inc edx; or [ebx + 0xe8893cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x000159c9 : mov [ebp + 0xfffffaa4], edx; mov [ebp + 0xfffffaa0], ecx; call [eax + 0x1c]
0x000534fb : add [eax], al; add [ebx + 0xeb83344e], cl; add [ebp + 0x83002674], ecx; ret
0x0005da3d : int3 ; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00059740 : add [eax], al; add [ebx + 0xf78813c], al; test ebx, [esi + 0x83fffffb]; ret
0x00054a09 : add [eax], al; add [ebx], ch; lea ebx, [edi + edi*8 + 0xffffffff]; call ebx
0x00002923 : mov dh, 0; add [eax], al; add [ebx + 0x15b0845], cl;  pop esi; pop ebp; ret
0x0000b02b : add [eax], al; add ch, cl; add [ebp + 0x890274d2], 2; pop ebx; pop ebp; ret
0x0004fa54 : add al, 1; add [eax], al; add [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret
0x00043c46 : inc esp; and al, 4; add [eax], eax; add [eax], al; mov [esp], ebx; call edx
0x0003ea1f : dec [ecx + 0x88e82404]; cmpsd [esi], es:[edi]; cld ; jmp [esi + 0xffffff83]
0x00046140 : mov [ecx], edx; mov [esp], ecx; mov [esp + 4], eax; call [ebp + 0xfffffff0]
0x0001e949 : inc edi; push esp; mov [esp + 0x44], eax; mov [esp], eax; call [eax + 0x10]
0x00002e00 : mov [ebx + 0x2c], 0; mov [ebx + 0x28], 0; add esp, 4; pop ebx; pop ebp; ret
0x0002942c : inc esp; and al, 4; add eax, [eax]; add [eax], al; mov [esp], ebx; call edi
0x00011834 : mov [esp + 4], eax; mov eax, [edx]; mov [esp], eax; call [ebp + 0xffffffd8]
0x000006d1 : mov eax, [ebp + 0xc]; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0x14]
0x00060ce5 : pop es; mov [esp + 4], eax; mov eax, [esp + 0x18]; mov [esp], eax; call edx
0x000293e3 : inc esp; and al, 4; add [eax], eax; add [eax], al; mov [esp], ebx; call edi
0x0002f461 : pop ss; adc [eax], eax; add bh, al; inc eax; or [eax + 0xe90807a0], dl; ret
0x0004884e : adc [eax], al; add bh, al; test edx, [esi + edi*8 + 0xffffffff]; call [eax]
0x00010393 : add [ebx + 0xc483e045], cl; dec esp; pop ebx; pop esi; pop edi; pop ebp; ret
0x000479ae : mov eax, [edx]; mov edx, [ebp + 0xfffffffc]; add eax, [edx + 4]; leave ; ret
0x00001dfa : inc edx; add al, 1; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x30]
0x0003ca94 : xor [ebx + 0xc483c445], cl; dec eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x000067ca : add [edi], ecx; test ebp, [esi + 0x3e]; add [eax], al; pop ebx; pop ebp; ret
0x00002617 : mov ebx, [ebp + 8]; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x10]
0x0006069c : add [eax], al; add [eax], al; mov eax, [esp + 4]; mov eax, [eax + 0x54]; ret
0x0001d49c : sbb bh, bh; add [ecx + 0xb4c4], al; add [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x0001370a : mov edx, [ebp + 0xfffffb50]; mov ecx, [ebp + 0xfffffb44]; call [ecx + edx*4]
0x000437b1 : inc ebx; sbb [ebx + 0xf08920c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001c389 : inc ebx; sbb [ebx + 0xf0891cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x000397ed : dec ebp; and [ecx + 0x58c48311], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x00023500 : add [eax], al; add [eax], al; mov [esp + 0xc], eax; mov [esp], edi; call esi
0x00002a8f : xor eax, eax; mov ebx, [esp]; mov esi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x00021215 : add [eax], al; add [ecx], dh; fild [ebx + 0xd8890cc4]; pop ebx; pop ebp; ret
0x00002c55 : inc ebx; and [ebp + 0xf], dh; or [ebx], 1; add esp, 8; pop ebx; pop ebp; ret
0x000348f5 : add [ebx + 0xc483e045], cl; pop esp; pop ebx; pop esi; pop edi; pop ebp; ret
0x0006063c : add [eax], al; add [eax], al; mov eax, [esp + 4]; mov eax, [eax + 0x5c]; ret
0x00020bef : dec ebx; sbb [ecx + 0x84c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0004fcca : add [edx + eax], 0; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x00054875 : add [eax], al; add [ecx + 0xffff549d], cl; inc [ebx + 0xffff5485]; jmp [edi]
0x00002636 : mov dh, 2; add edx, 1; mov [ebx + 4], edx; add esp, 4; pop ebx; pop ebp; ret
0x0002374f : add [ebx + 0x1b80cc4], al; add [eax], al; add [ebx + 0x5e], bl; pop ebp; ret
0x0001e9ae : lea eax, [esp + 0x4c]; mov [esp + 4], eax; mov [esp], edi; call [edx + 0x48]
0x00038525 : add [ebx + 0xc483d845], cl; dec esp; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001d9a4 : mov edx, [ebx + 0x94]; mov [esp + 4], eax; mov [esp], ebx; call [edx + 0x18]
0x0005f2c6 : add [ebx + 0x748b241c], cl; and al, 4; mov edi, [esp + 8]; add esp, 0xc; ret
0x00022cd6 : push [edi + 0xffffffdf]; add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret
0x00020b8e : lea eax, [esp + 0x24]; mov [esp + 4], eax; mov [esp], ebx; call [edx + 0x48]
0x0000530c : mov eax, edx; mov ebx, [esp]; mov esi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x00060ff0 : add [eax + 0x747a097e], al; or [ecx], esi; rol [ebx + 0x5e5b20c4], 0x5f; ret
0x0001fc07 : mov eax, [eax + 0x94]; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x48]
0x0001d0b1 : mov [ebp + 0x10], ecx; mov eax, [eax + 0x24]; mov esp, ebp; pop ebp; jmp eax
0x000310e3 : inc [eax]; add [eax], al; add [ecx + 0xfffdc085], cl; jmp [esi + 0xffffff90]
0x000218e5 : add [ebx + 0x658be045], cl; ror [ebp + 0x5e5bf465], 1; pop edi; pop ebp; ret
0x00002870 : mov eax, [ebx + 0x94]; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x18]
0x0000ad57 : mov eax, edi; mov esi, [esp]; mov edi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x00033a17 : xchg eax, ebp; push edi; std ; inc [ebx + 0x5e5b10c4]; pop edi; pop ebp; ret
0x0001eae0 : add [ecx + 0x5489243c], cl; and al, 4; mov [esp + 8], ecx; call [eax + 0x40]
0x0001fafc : adc [ecx + 0x5489241c], cl; and al, 4; mov [esp + 8], ecx; call [eax + 0x40]
0x0006057c : add [eax], al; add [eax], al; mov eax, [esp + 4]; mov eax, [eax + 0x48]; ret
0x0005f237 : dec ecx; pushal ; add [eax], al; add [eax + 0xfffe59e9], al; jmp [esi + 0x3d]
0x00035fdd : mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffcc]
0x000350f5 : add [ebx + 0xc483d445], cl; push eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x000352cd : mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd8]
0x0000863b : dec [ebx + 0x8d010849]; pop eax; idiv edi; inc [ebx + 0xfff75c85]; call [eax]
0x0003dee8 : dec [ecx + 0x8904247c]; inc esp; and al, 8; mov [esp], edx; call [ebp + 0x14]
0x0004439a : add [eax], al; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edi; call esi
0x00030c98 : dec [ebp + 0xffff4c85]; dec [ecx + 0xc458b02]; mov [esp], eax; call [ebp + 8]
0x0001d8e7 : mov eax, [ecx]; add ecx, 4; mov [edx], ecx; add esp, 4; pop ebx; pop ebp; ret
0x00034bb0 : mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd0]
0x000329ff : add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp], eax; call edi
0x0003683f : add [eax], al; mov [esp + 8], 0; mov [esp + 4], edx; mov [esp], ecx; call ebx
0x0003a46d : inc [ebx + 0xc38920c4]; mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret
0x0002a7ad : push es; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000250e : mov [eax + 4], edx; mov [eax + 0xc], edx; mov [eax + 0x24], ecx; pop ebp; ret
0x0004650e : push ecx; sub [ecx + 0xb0c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00029426 : xchg eax, ebp; mov [esp + 8], ecx; mov [esp + 4], 3; mov [esp], ebx; call edi
0x0001d5dc : mov eax, [ebp + 0xfffffff4]; mov [esp + 4], 0; mov [esp], ebx; call [eax + 8]
0x00029364 : sbb eax, [ebp + 0x8bed74db]; add ecx, [ecx + 0x44892434]; and al, 4; call edi
0x000482e9 : lea esp, [ebp + 0xfffffff0]; pop ecx; pop ebx; pop esi; pop edi; pop ebp; ret
0x00060bc6 : add es:[ebx + 0x558b0c45], cl; or [ecx + 0x44892434], cl; and al, 4; call edx
0x0003241d : inc ebp; ror [ecx + 0xf4658d39], 1; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x00039403 : mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00037589 : mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x0001839c : pop ecx; pop ebx; pop esi; pop edi; pop ebp; lea esp, [ecx + 0xfffffffc]; ret
0x0002937f : sbb eax, [ebp + 0x8bd274db]; add ecx, [ecx + 0x44892434]; and al, 4; call edi
0x000202e4 : dec [ebx + 0xc4831045]; sbb [ebx + 0x29], bl;  pop esi; pop edi; pop ebp; ret
0x0005bea2 : push ebp; adc [ebp + 0xffffffda], dh; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000bf82 : add [eax], al; add [eax + 0xf0], bh; int 0x80; pop edx; pop ecx; pop ebx; ret
0x00023acf : adc [ecx + 0x41891c59], cl; sbb [ebx + 0x5e5b14c4], al; pop edi; pop ebp; ret
0x00023089 : inc esp; and al, 8; lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; call ebx
0x000386dc : mov [esp + 8], 0; mov [esp + 4], ebx; mov [esp], esi; call [ebp + 0xffffffd4]
0x00020b74 : push ebp; adc [ecx + 0x84c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00023088 : mov [esp + 8], eax; lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; call ebx
0x0005e7f4 : add [eax], al; add [eax], al; mov eax, [edx + 0x54]; add esp, 8; pop ebx; ret
0x00002a1d : sub ecx, [edx + 0xc]; mov eax, [ebx + 8]; sub eax, ecx; pop ebx; pop ebp; ret
0x0002a04c : lea esi, [esi]; mov ebx, [esp]; mov esi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x00002c63 : mov dh, 0; add [eax], al; add [ebx + 0xc483fe23], al; or [ebx + 0x5d], bl; ret
0x000482e2 : dec [ebx + 0xfffe3885]; dec [ebp + 0x5b59f065]; pop esi; pop edi; pop ebp; ret
0x00027f22 : mov esi, [esp + 4]; add eax, [edx]; mov ebx, [esp]; mov esp, ebp; pop ebp; ret
0x00020caf : sub eax, edx; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call ecx
0x00003337 : add [eax], al; add [ecx + 0x408b085d], cl; adc [ebx + 0x5d5b04c4], al; jmp eax
0x00005127 : add [ecx + 0x4a890442], ecx; xor [ebx + 0x5e5b20c4], al; pop edi; pop ebp; ret
0x000602cb : add [eax], al; add [edx + 2], bh; pop esi; mov eax, edx; pop edi; pop ebp; ret
0x0002d73f : add [ecx], dh; inc [ebx + 0xf88948c4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001ebb9 : inc [ecx + 0xacc4]; add [ecx + 0x5bf289d8], cl; pop esi; pop edi; pop ebp; ret
0x00031fa6 : pop edx; pop edx; mov ecx, [esp]; mov [esp], eax; mov eax, [esp + 4]; ret 0x14
0x00002732 : add [eax], al; add [eax], al; mov [eax + 4], 0; mov [eax + 8], 0; pop ebp; ret
0x0006061b : mov edi, 0; mov edx, [esp + 8]; mov eax, [esp + 4]; mov [eax + 0x4c], edx; ret
0x00061beb : mov bh, 8; mov [esp + 4], eax; mov eax, [esp + 0x2c]; mov [esp], eax; call edx
0x0004fc48 : mov eax, [ebx + 0xc]; mov [eax], edx; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x0001e522 : add dh, [ebp + 0x14]; mov eax, [eax + 0xb8]; mov [esp], ebx; call [eax + 0x34]
0x0004794c : add [ebp + 9], dh; lea esp, [ebp + 0xfffffff8]; pop ebx; pop esi; pop ebp; ret
0x000311b2 : int 0x80; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0003f2b5 : dec [ebx + 0xffef00bd]; dec [ecx + 0x8908244c]; sbb al, 0x24; call [edx + edi]
0x00060576 : lea esi, [esi]; lea edi, [edi]; mov eax, [esp + 4]; mov eax, [eax + 0x48]; ret
0x0001daee : sub edx, [eax + 8]; sar edx, 2; mov eax, [ecx + 8]; sub eax, edx; pop ebp; ret
0x0001dc0b : add bh, al; inc eax; and al, 0; add [eax], al; add [ebx + 0x5d5b04c4], al; ret
0x00002882 : push [ebx + eax + 0xffffff83]; and ebp, edi; add esp, 8; pop ebx; pop ebp; ret
0x0002a09a : add [eax + eax], al; cmp eax, [ebp + 8]; pop ebp; setae al; movzx eax, al; ret
0x0004fc68 : mov edx, [ebx + 0xc]; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x00031fdc : mov edx, [ebx + 0xc]; mov ecx, [ebx + 0x10]; mov eax, [ebx + 0x14]; call [ebx]
0x0001fe1d : dec [ebx + 0x9483]; add [ecx + 0x5d5b085d], cl; mov eax, [eax + 0x10]; jmp eax
0x00044273 : mov eax, [ebp + 8]; pop ebp; mov eax, [eax + 0x24]; mov eax, [eax + 0x28]; ret
0x000114ef : add [ecx], dh; inc [ebx + 0xf8892cc4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00002b60 : push ebp; mov ebp, esp; mov eax, [ebp + 8]; pop ebp; mov eax, [eax + 0x34]; ret
0x00001e3a : add [ebp + 0x59], esi; add esp, 4; mov eax, edx; pop ebx; pop esi; pop ebp; ret
0x00002926 : add [eax], al; mov eax, [ebp + 8]; pop ebx; add eax, esi; pop esi; pop ebp; ret
0x0003484f : dec esp; and al, 8; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd0]
0x00011601 : pop esp; and al, 4; mov [esp + 8], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x00022e5b : add [eax], al; mov [esp + 4], eax; mov eax, [edi + 8]; mov [esp], eax; call esi
0x00002cb5 : mov edi, [ebp + 0x10]; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x30]
0x0006069b : add es:[eax], al; add [eax], al; mov eax, [esp + 4]; mov eax, [eax + 0x54]; ret
0x0001a7dd : add [ecx + 0x178c4], al; add [ecx + 0x5f5e5bf8], cl; mov esp, ebp; pop ebp; ret
0x00032972 : mov [esp + 8], esi; mov [esp + 4], edx; mov [esp], eax; call [ebp + 0xffffffe0]
0x0000b37c : dec [ebx + 0xd889fc75]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x0001e948 : mov eax, [edi + 0x54]; mov [esp + 0x44], eax; mov [esp], eax; call [eax + 0x10]
0x0002dbe2 : inc ebp; adc [ecx + 0xc4830c41], cl; or [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0004fcc6 : add [eax], al; add [ebx + 0x24480], cl; add [ecx + 0xfc5d8b02], cl; leave ; ret
0x000279b6 : add [ebp + 0xdc750170], cl; add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000941c : xchg eax, ebp; mov edx, [ebp + 4]; mov [esp], edi; mov [esp + 4], edx; call eax
0x0003632c : mov [esp + 8], ecx; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffc4]
0x0002d392 : add [eax], al; add [ecx], al; adc [ebx + 0x5e5b18c4], al; pop edi; pop ebp; ret
0x0002a2b9 : add [ecx], dh; fild [ebx + 0xd88904c4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0003df45 : dec [ebx + 0x7489184d]; and al, 4; mov [esp], edi; mov [esp + 8], ecx; call ebx
0x0003484e : mov [esp + 8], ecx; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd0]
0x00036d55 : inc esp; and al, 8; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 0xffffffd0]
0x00035037 : mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x000605dc : lea esi, [esi]; mov edx, [esp + 0x18]; mov [eax], edx; add esp, 8; pop ebx; ret
0x00045cbf : add [eax], al; mov [esp + 4], edx; mov [esp], ecx; mov [esp + 8], eax; call edi
0x0003845f : mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], esi; call [ebp + 0xffffffd4]
0x00002bb0 : add [ecx + 0xcb15415], cl; or [ebx + 0xcb15005], al; or [ecx], al; pop ebp; ret
0x00032081 : mov eax, [0]; push ebp; mov ebp, esp; pop ebp; lea eax, [eax + 0xfffffff0]; ret
0x000397cf : pop esp; and al, 4; mov esi, [ebp + 8]; mov [esp], esi; call [ebp + 0xffffffdc]
0x00036d54 : mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 0xffffffd0]
0x00011600 : mov [esp + 4], ebx; mov [esp + 8], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x000236d8 : mov eax, [ebp + 0x10]; mov [eax], edx; mov eax, [ebp + 0xfffffff8]; leave ; ret
0x0004fc5b : mov eax, [eax + 0x18]; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x0003925e : mov [esp + 8], edx; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00060244 : add [eax], al; mov [esp], 1; mov [esp + 8], eax; mov [esp + 0xc], edx; call ecx
0x00038460 : inc esp; and al, 8; mov [esp + 4], edx; mov [esp], esi; call [ebp + 0xffffffd4]
0x000396e0 : dec esp; and al, 4; mov esi, [ebp + 8]; mov [esp], esi; call [ebp + 0xffffffdc]
0x0002adbc : add al, [edx]; add [eax], al; add [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x0003632d : dec esp; and al, 8; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffc4]
0x00060b88 : inc edx; or [ebp + 0x890d74c0], al; push esp; and al, 4; mov [esp], 1; call eax
0x000397ce : mov [esp + 4], ebx; mov esi, [ebp + 8]; mov [esp], esi; call [ebp + 0xffffffdc]
0x00000dfd : mov eax, [eax + 0x10]; ror edx, 9; xor edx, gs:[0x18]; mov [esp], eax; call edx
0x00002285 : xchg eax, ecx; add [eax], al; add [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x0006063b : add es:[eax], al; add [eax], al; mov eax, [esp + 4]; mov eax, [eax + 0x5c]; ret
0x000316b5 : add al, [eax]; add bl, ch; or [ebp + 0xb6], cl; add [ecx + 0x39028bc2], cl; ret
0x0002a445 : push edi; or esi, edi; dec [ebx + 0x758bf85d]; cld ; mov esp, ebp; pop ebp; ret
0x00035038 : inc esp; and al, 8; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x000396df : mov [esp + 4], ecx; mov esi, [ebp + 8]; mov [esp], esi; call [ebp + 0xffffffdc]
0x00035fe2 : add [eax], al; add [ecx + 0x89042444], cl; adc al, 0x24; call [ebp + 0xffffffcc]
0x0002953e : dec ebp; or [ecx + 0x4489cc55], cl; and al, 4; mov [esp], ecx; call [ebp + 0x10]
0x000320a7 : add [eax], al; add [ebp + 0xbf], cl; add [ebx + 0x2b650440], cl; add eax, 0; ret
0x00034bb5 : add [eax], al; add [ecx + 0x8904244c], cl; add al, 0x24; call [ebp + 0xffffffd0]
0x00060e37 : add [ebx + 0xffffffc3], bl; lea esi, [esi]; add esp, 8; mov eax, 2; pop ebx; ret
0x0000282c : add [eax], al; add [eax], al; push ebp; xor eax, eax; mov ebp, esp; pop ebp; ret
0x0005e6ac : mov edi, [esp + 0x34]; mov [ecx], edx; mov ebp, [esp + 0x38]; add esp, 0x3c; ret
0x000438a6 : dec ebx; sbb [ecx + 0xc483144b], cl; and [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x000501c0 : push [edi + 0xb]; mov ebx, [esp]; mov esi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x00003272 : mov [ebp + 8], ebx; mov eax, [eax + 0x14]; add esp, 4; pop ebx; pop ebp; jmp eax
0x00039408 : add [eax], al; add [ecx + 0x8904244c], cl; sbb al, 0x24; call [ebp + 0xffffffe0]
0x000231ef : adc [eax], al; add [eax], al; add [ecx + 0x89082444], cl; cmp al, 0x24; call ebx
0x00024c87 : add eax, [ecx]; add [eax], al; add [ebx + 0x5e5b20c4], al; pop edi; pop ebp; ret
0x00045bc0 : add [eax], al; add [ecx + 0x168c4], al; add [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x000025ed : mov [ebp + 0xc], ecx; mov [ebp + 8], eax; pop ebp; mov eax, [edx + 0xc]; jmp eax
0x00042652 : dec [ebx + 0xffefa085]; inc edi; test ecx, [edi + ebp*8 + 0xffffffff]; jmp [eax]
0x00046a74 : sbb [eax], al; add [eax], al; leave ; test eax, eax; sete al; movzx eax, al; ret
0x00023110 : add [eax], al; add [ecx + 0x164c4], al; add [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x0003d20d : pop ebp; adc [ecx + 0xc4839904], cl; sub [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00022cd3 : add [ebp + 0xdf77ff5a], ecx; add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret
0x0006294c : mov edi, [esp + 0x24]; mov [ecx], edx; mov ebp, [esp + 0x28]; add esp, 0x2c; ret
0x000279b9 : add [ebp + 0xffffffdc], esi; add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret
0x000231ea : add [eax], al; mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edi; call ebx
0x0003925f : push esp; and al, 8; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00002922 : lea esi, [esi]; mov eax, [ebp + 8]; pop ebx; add eax, esi; pop esi; pop ebp; ret
0x0005e7f3 : add es:[eax], al; add [eax], al; mov eax, [edx + 0x54]; add esp, 8; pop ebx; ret
0x000001f1 : add [eax], al; add [ebp + eax + 0xffffffe8], dh; cmc ; rol [eax], 0; leave ; ret
0x00062d3d : inc esp; and al, 4; sub [eax], al; add [eax], al; mov [esp], esi; call [ebp + 8]
0x000352d2 : add [eax], al; add [ecx + 0x8904244c], cl; add al, 0x24; call [ebp + 0xffffffd8]
0x0001c9d7 : inc esp; and al, 4; add [eax], al; add [eax], al; mov [esp], ebx; call [eax + 8]
0x000234ff : adc [eax], al; add [eax], al; add [ecx + 0x890c2444], cl; cmp al, 0x24; call esi
0x00032084 : add [eax], al; push ebp; mov ebp, esp; pop ebp; lea eax, [eax + 0xfffffff0]; ret
0x0001d8b2 : mov [eax + 8], ebx; mov [eax], edx; mov [eax + 0x20], ecx; pop ebx; pop ebp; ret
0x0000333a : mov [ebp + 8], ebx; mov eax, [eax + 0x10]; add esp, 4; pop ebx; pop ebp; jmp eax
0x0003758e : add [eax], al; add [ecx + 0x89042444], cl; adc al, 0x24; call [ebp + 0xffffffd8]
0x00044517 : adc [eax], al; add [eax], al; add [ecx + 0x89082444], cl; adc al, 0x24; call edi
0x0003bb16 : dec [edi]; test ch, [esi]; add eax, [eax]; add [ebx + 0xfffe5c8d], cl; jmp [ebx]
0x000386e1 : add [eax], al; add [ecx + 0x8904245c], cl; xor al, 0x24; call [ebp + 0xffffffd4]
0x0004fcc9 : mov eax, [eax + 0x244]; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x00061fb6 : call [eax + 0x317cc483]; neg [ebx + 0xffffff89];  pop esi; pop edi; pop ebp; ret
0x0001f5d2 : add [ecx + 0x89042474], cl; inc esp; and al, 8; mov [esp], ebx; call [edx + 0x40]
0x00020e02 : add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x40]
0x0003d05c : add [ecx + 0xee7541d5], cl; mov eax, ebp; pop ebx; pop ebp; pop esi; pop edi; ret
0x00020451 : add [ecx + 0x89042454], cl; inc esp; and al, 8; mov [esp], ebx; call [edi + 0x40]
0x0005f097 : add [ecx], 0; add [ecx + 0xccc4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x000146bc : dec [ecx + 0x4c89241c]; and al, 4; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0003a0c0 : add bh, al; inc ebx; or [eax], al; add [eax], al; add [ebx + 0x5d5b10c4], al; ret
0x00020917 : adc [ecx + 0x89082454], cl; inc esp; and al, 4; mov [esp], ebx; call [ecx + 0x38]
0x0003f2b6 : mov edi, [ebp + 0xffffef00]; mov [esp + 8], ecx; mov [esp], ebx; call [edx + edi]
0x00020f1a : add [ecx + 0x89042444], cl; dec esp; and al, 8; mov [esp], ebx; call [edx + 0x40]
0x00021587 : add [ecx + 0x10c483f7], cl; mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret
0x0002a20c : inc [ebx + 0x1b824c4]; add [eax], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0005fe3b : inc [ebx + 0x3b84cc4]; add [eax], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0003dbff : add [ecx + 0xeb7541d5], cl; mov eax, ebp; pop ebx; pop ebp; pop esi; pop edi; ret
0x00020b52 : add [ecx + 0x89042454], cl; inc esp; and al, 8; mov [esp], ebx; call [ecx + 0x40]
0x0006061e : add [eax], al; mov edx, [esp + 8]; mov eax, [esp + 4]; mov [eax + 0x4c], edx; ret
0x0001f961 : add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x000625ef : add [ebx + 0xf6311cc4], al; pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x00060249 : add [eax], eax; add [eax], al; mov [esp + 8], eax; mov [esp + 0xc], edx; call ecx
0x0000394f : add [eax], al; add [eax], al; mov [esp + 4], 0; mov [esp], ebx; call [eax + 0x2c]
0x00001317 : sbb [ecx], dh; ror [ecx + 0xc4830871], 4; pop ebx; pop esi; pop edi; pop ebp; ret
0x000028b4 : dec [ecx + 0xb60f0453]; inc eax; inc [ebx + 0xc483ef23]; or [ebx + 0x5d], bl; ret
0x0001e8f3 : add [ecx + 0x89042454], cl; inc esp; and al, 8; mov [esp], edi; call [ecx + 0x40]
0x00052997 : add [ebx + 0xf0895cc4], al; mov edx, edi; pop ebx; pop esi; pop edi; pop ebp; ret
0x00045b02 : add [eax], al; mov [esp + 0xc], ebx; mov [esp + 8], edx; mov [esp], eax; call edi
0x000446b8 : add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp], esi; call [eax + 0x40]
0x0003748a : mov [esp + 0xc], esi; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x0003e605 : add [ecx + 0x89042454], cl; pop esp; and al, 8; mov [esp], ecx; call [eax + 0x1c]
0x0004bcc2 : dec [ebx + 0xfffe3cb5]; inc edi; test edx, [esi + edi*8 + 0xffffffff]; call [eax]
0x0001fe1f : adc [eax + eax + 0x5d890000], 8; pop ebx; pop ebp; mov eax, [eax + 0x10]; jmp eax
0x0001e9ad : add [ebp + 0x894c2444], cl; inc esp; and al, 4; mov [esp], edi; call [edx + 0x48]
0x0003c78d : adc al, [ebx + 0xed7901e8]; xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x00002827 : add [eax], al; lea edi, [edi]; push ebp; xor eax, eax; mov ebp, esp; pop ebp; ret
0x00039713 : inc [ebx + 0x6b858c4]; add [eax], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00020b8d : add [ebp + 0x89242444], cl; inc esp; and al, 4; mov [esp], ebx; call [edx + 0x48]
0x0002913a : dec [ecx + 0x893877c3]; fmul [ebx + 0x5d8bfc75]; clc ; mov esp, ebp; pop ebp; ret
0x0001e23e : dec [ebx + 0x4c18301]; mov [edx], ecx; add esp, 8; pop ebx; pop esi; pop ebp; ret
0x00035567 : mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp], ecx; call [ebp + 0xffffffcc]
0x0000b28a : dec [ecx + 0x894277c3]; fmul [ebx + 0x5d8bfc75]; clc ; mov esp, ebp; pop ebp; ret
0x0001dc98 : mov ebx, [ebp + 0xfffffff8]; mov eax, [eax + 0xc]; mov esp, ebp; pop ebp; jmp eax
0x000114ee : add es:[ecx], dh; inc [ebx + 0xf8892cc4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00002ec1 : mov [esp], edx; mov [ebp + 0xffffffec], edx; mov [esp + 4], ecx; call [eax + 0xc]
0x0001f044 : mov [esp + 8], edx; mov ecx, [ebp + 0xffffffd0]; mov [esp], ecx; call [ecx + 0xc]
0x0002397c : adc [ebp + 0x830474d2], al; inc eax; or [ecx], al; pop ebx; pop esi; pop ebp; ret
0x00018a68 : dec [edi]; test bl, cl; or al, [eax]; add [eax + 0xffff53bd], al; jmp [esi + 0xf]
0x000601bc : add [eax], al; mov [esi + 0x4c], eax; mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x0000a4c1 : add [eax], al; add [ebx + 0xc0311cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x000127e2 : add esi, [ebp + 0xffffffeb]; mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret
0x00008f23 : add [eax], al; add [ebx + 0xf08918c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00041ecd : mov [ebp + 0xffffeed0], ecx; mov [esp + 8], edi; mov [esp], ebx; call [eax + 0x1c]
0x000147b0 : mov [esp + 4], ecx; mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0004fc55 : add [eax], al; add [ebx + 0x408b0c53], cl; sbb [ecx + 0xfc5d8b02], cl; leave ; ret
0x0001cfe6 : mov edx, [ebp + 0xffffffe0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x000363c3 : add [eax], al; add [ebx + 0xf0896cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00002653 : mov eax, [ebp + 8]; pop ebp; mov edx, [eax + 0x94]; mov eax, [edx + 0x20]; jmp eax
0x000146bd : mov [esp], ebx; mov [esp + 4], ecx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0001d7d6 : mov edx, [ebp + 0xffffffb0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x0002b2ea : lea esp, [ebp + 0xfffffff4]; mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret
0x00014a7a : mov [esp], ebx; mov [esp + 8], edx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0002b4e7 : lea esp, [ebp + 0xfffffff4]; mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001f045 : push esp; and al, 8; mov ecx, [ebp + 0xffffffd0]; mov [esp], ecx; call [ecx + 0xc]
0x0000e037 : add [ecx + 0x8c483c3], cl; mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x0002a097 : add [eax + 0x40000], bh; cmp eax, [ebp + 8]; pop ebp; setae al; movzx eax, al; ret
0x00007626 : add [eax], al; add [ebx + 0xf08958c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x000456a9 : add [eax], al; add [ebx + 0xd08904c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00028272 : add [eax], al; add [ebp + 0xf089f465], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x0005f2ac : dec esp; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; add esp, 0xc; ret
0x0003e826 : lea esp, [ebp + 0xfffffff4]; mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret
0x0003bd46 : lea esp, [ebp + 0xfffffff4]; xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001655e : mov edx, [ebp + 0xfffffb64]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x00011ed2 : xor eax, eax; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00015aa2 : add [ecx + 0x8908247c], cl; push esp; and al, 4; mov [esp], ebx; call [eax + 0x1c]
0x0003c238 : mov edx, [ebp + 8]; mov eax, gs:[eax]; pop ebp; mov eax, [eax + edx*4 + 0x40]; ret
0x00029540 : mov [ebp + 0xffffffcc], edx; mov [esp + 4], eax; mov [esp], ecx; call [ebp + 0x10]
0x000282fa : lea esp, [ebp + 0xfffffff4]; pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x0000feb1 : add [eax], al; add [ebx + 0xd0891cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00036839 : mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], edx; mov [esp], ecx; call ebx
0x0002a3f5 : add [eax], al; add [ebx + 0xf08908c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00018579 : mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; lea esp, [ecx + 0xfffffffc]; ret
0x00050094 : add [ecx], dh; rol [ebx + 0xd08958c4], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x00012cc1 : mov [ebp + 0xffffdf34], edx; mov [esp + 4], eax; mov [esp], ebx; call [ecx + 0x1c]
0x00046523 : add [eax], al; add [eax + 0xffffffff], bh; pop ebx; pop esi; pop edi; pop ebp; ret
0x00032080 : mov eax, gs:[0]; push ebp; mov ebp, esp; pop ebp; lea eax, [eax + 0xfffffff0]; ret
0x0006061a : lea edi, [edi]; mov edx, [esp + 8]; mov eax, [esp + 4]; mov [eax + 0x4c], edx; ret
0x000131ed : mov edx, [ebp + 0xfffffb7c]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0003bd43 : add [eax], al; add [ebp + 0xc031f465], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x00030fc2 : pop es; or [ebx + 0xccac082], cl; or [ecx + 0xc8890441], cl; pop ebx; pop ebp; ret
0x00022e8b : lea esp, [ebp + 0xfffffff4]; sub eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret
0x000333c7 : mov eax, [ebp + 0xffffffe0]; mov [esp], eax; mov edx, [ebp + 0xffffffb4]; call edx
0x0002adbb : mov [edx], 2; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0003c790 : add [ecx + 0xffffffed], edi; xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret
0x00012842 : add esi, [ebp + 0xffffffe3]; mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret
0x00043c78 : lea edx, [ebp + 0xffffff98]; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x48]
0x000083a6 : mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x00019038 : mov edi, [ebp + 0xffffff94]; mov [esp], edi; mov [ebp + 0xffffff38], edx; call ecx
0x00009133 : add [eax], al; add [ebx + 0xf0890cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00002822 : lea esi, [esi]; lea edi, [edi]; push ebp; xor eax, eax; mov ebp, esp; pop ebp; ret
0x000603d7 : add [eax], al; add [ecx + 0xecc4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00044394 : mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edi; call esi
0x0001efed : add [eax], al; add [ebx + 0x48c48302], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001545b : mov edx, [ebp + 0xfffffb4c]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x00036ded : add [eax], al; add [ebx + 0xf0895cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00028275 : lea esp, [ebp + 0xfffffff4]; mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret
0x000460bf : mov [ebp + 0xfffffff0], eax; mov [ebp + 0xffffffec], ecx; mov [esp], edx; call eax
0x00045658 : sbb dh, [ecx]; rol [ebx + 0xd08904c4], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x00043521 : mov [ebp + 0xffff7e78], edx; mov [esp + 4], ecx; mov [esp], ebx; call [eax + 0x1c]
0x0001bf26 : add [eax], al; add [ebx + 0xd0890cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0003fead : mov [ebp + 0xffffeed4], edx; mov [esp + 4], ecx; mov [esp], ebx; call [eax + 0x1c]
0x00022e55 : mov [esp + 8], 0; mov [esp + 4], eax; mov eax, [edi + 8]; mov [esp], eax; call esi
0x000002df : add [eax], al; add [ebp + eax + 0xffffffe8], dh; pop es; rol [eax], 0; leave ; ret
0x00053000 : add [eax], al; add [ebx + 0xd88928c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000d5bc : mov eax, [esi + 4]; sub eax, [ebx + 4]; add esp, 8; pop ebx; pop esi; pop ebp; ret
0x0005eff4 : popal ; mov eax, [edi]; mov eax, [ebx + eax*4 + 0xffffa444]; add eax, ebx; jmp eax
0x0003423b : add [eax], al; add [ecx + 0x80008bc2], cl; int3 ; sub [eax + 0xf028910], 0x85; ret
0x000147b1 : dec esp; and al, 4; mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0005010a : add [eax], al; add [ebx + 0xd08958c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00002e06 : add bh, al; inc ebx; sub [eax], al; add [eax], al; add [ebx + 0x5d5b04c4], al; ret
0x0006080b : mov [esp + 4], 1; mov [esp], 1; mov [esp + 8], eax; mov [esp + 0xc], edx; call ecx
0x00060e47 : add [ebx + 0xffffffc3], bl; lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret
0x000234fa : add [eax], al; mov [esp + 0x10], 0; mov [esp + 0xc], eax; mov [esp], edi; call esi
0x00020e07 : inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp], ebx; call [eax + 0x40]
0x0005ce7d : adc [ecx + 0x7c89d445], cl; and al, 8; mov [esp + 4], esi; mov [esp], ebx; call edx
0x0005e7e4 : add [eax], al; add [eax], al; mov eax, [edx + 0x5c]; add esp, 8; pop ebx; nop ; ret
0x00000ffa : add [eax + eax], al; add [eax], al; add esp, 4; mov eax, edx; pop ebx; pop ebp; ret
0x0005158e : add [eax], al; add dh, al; inc ebp; cmpsd [esi], es:[edi]; add dh, al; inc ebp; ret
0x0005d61f : push [ecx]; fisttp [ebp + 0xd889f465]; pop ebx; pop esi; pop edi; pop ebp; ret 0x10
0x00011a22 : add al, [eax]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00002635 : movzx eax, [edx]; add edx, 1; mov [ebx + 4], edx; add esp, 4; pop ebx; pop ebp; ret
0x0001d5e6 : add [ecx + 0x50ff241c], cl; or [ecx + 0x168c4], al; add [ecx + 0x5d5e5bf0], cl; ret
0x0001fe22 : add [eax], al; mov [ebp + 8], ebx; pop ebx; pop ebp; mov eax, [eax + 0x10]; jmp eax
0x0004fc45 : add [eax], al; add [ebx + 0x10890c43], cl; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x000247d3 : add [eax], eax; add [ebx + 0xd8891cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0002a099 : add [eax], al; add al, 0; cmp eax, [ebp + 8]; pop ebp; setae al; movzx eax, al; ret
0x00003333 : dec [ebx + 0x9483]; add [ecx + 0x408b085d], cl; adc [ebx + 0x5d5b04c4], al; jmp eax
0x00061eb5 : add [eax], eax; add [ebx + 0xf0897cc4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x0005cff2 : mov eax, [ebp + 0xffffffe4]; mov [esp + 4], edx; mov [esp], eax; call [esi + ebx*4]
0x00000f3d : add [eax], eax; add [ebx + 0xd08910c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00047fb4 : sub esi, eax; sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 0x8090105]; jmp eax
0x0000a16a : dec [ebx + 0xc483f075]; sbb [ebx + 0xffffff89], bl;  pop esi; pop edi; pop ebp; ret
0x0003f32c : mov [esp + 4], edx; sub eax, edx; sar eax, 2; mov [esp + 8], eax; call [ecx + 0x1c]
0x0001d2dd : add [ecx + 0xfc758bd8], cl; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x0003c4e3 : mov edi, [eax + 8]; mov ebp, [eax + 0xc]; mov eax, [esp + 8]; mov esp, ecx; jmp edx
0x00013ad1 : mov [esp + 4], edi; mov [esp], ebx; mov edi, [ebp + 0xfffffac4]; call [ecx + edi*4]
0x0002bcb3 : xor eax, [eax]; add [ebp + 0xf889f465], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x000329f9 : mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp], eax; call edi
0x0005f098 : add [eax], eax; add [ecx + 0xccc4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0000a195 : add [eax], al; add [ebp + 0xc4830870], cl; sbb [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x000446bd : inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp], esi; call [eax + 0x40]
0x00002287 : add [eax], al; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0005ced2 : mov edx, [ebp + 0xffffffe4]; mov [esp + 4], eax; mov [esp], edx; call [edi + ebx*4]
0x00060ce4 : mov eax, [edi]; mov [esp + 4], eax; mov eax, [esp + 0x18]; mov [esp], eax; call edx
0x0003db64 : sub esi, eax; sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 0x8085cb5]; jmp eax
0x00002b3d : add [eax], al; add [ebp + 0xffffffa1], dl; sbb [ebx + 0xe589080c], ah; pop ebp; ret
0x0002b959 : lea esi, [edi + edi*8 + 0xffffffff]; push edi; fisttp [ecx + 0xffff7c9d]; jmp [ecx]
0x00003954 : inc esp; and al, 4; add [eax], al; add [eax], al; mov [esp], ebx; call [eax + 0x2c]
0x00030c11 : add [eax], al; add [eax], al; mov [esp], edi; mov [ebp + 0xffffffe0], ecx; call esi
0x0001f966 : inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp], ebx; call [eax + 0x24]
0x00030fc4 : mov eax, [edx + 0x80ccac0]; mov [ecx + 4], eax; mov eax, ecx; pop ebx; pop ebp; ret
0x0004425b : add es:[eax], al; add [eax], al; push ebp; xor eax, eax; mov ebp, esp; pop ebp; ret
0x00002695 : add [eax], al; add [eax], al; mov [esp], eax; mov [esp + 4], ecx; call [edx + 0x24]
0x000236d5 : add [eax], al; add [ebx + 0x10891045], cl; mov eax, [ebp + 0xfffffff8]; leave ; ret
0x000446b2 : add [eax], al; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], esi; call [eax + 0x40]
0x0003f32d : push esp; and al, 4; sub eax, edx; sar eax, 2; mov [esp + 8], eax; call [ecx + 0x1c]
0x0003a20d : add al, 1; add [eax], al; add [ebx + 0xd88914c4], al; pop ebx; pop esi; pop ebp; ret
0x0000c664 : lea esi, [esi]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001f95b : add [eax], al; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x00002e03 : add [eax], al; add [eax], al; mov [ebx + 0x28], 0; add esp, 4; pop ebx; pop ebp; ret
0x000013a3 : mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001dc08 : add [eax], al; add [eax], al; mov [eax + 0x24], 0; add esp, 4; pop ebx; pop ebp; ret
0x0000918a : mov [esp + 8], edx; mov edx, [ebp + 8]; mov [esp], edi; mov [esp + 4], edx; call eax
0x0001d8ad : dec eax; or [ecx + 0x58890450], cl; or [ecx + 0x20488910], cl; pop ebx; pop ebp; ret
0x0006076b : add [ecx + 0xc4810446], cl; inc eax; add [eax], eax; add [ecx + 0x5d5f5ef0], cl; ret
0x00000828 : mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0005e7e3 : mov dh, 0; add [eax], al; add [ebx + 0xc4835c42], cl; or [ebx + 0xffffff90], bl; ret
0x0002a7ac : mov [esi], eax; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x000132a9 : mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; lea esp, [ecx + 0xfffffffc]; ret
0x00029b12 : add [eax], al; add [ecx + 0x2010c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0003fffa : add [ebx + 0xffefa0bd], cl; inc edi; test ecx, [edi + ebp*8 + 0xffffffff]; jmp [eax]
0x0003ace2 : lea esp, [ebp + 0xfffffff4]; mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x00031f5e : add [eax], eax; pop edx; mov ecx, [esp]; mov [esp], eax; mov eax, [esp + 4]; ret 0xc
0x00020dfc : add [eax], al; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x40]
0x0000997b : mov ebx, [ebp + 4]; mov [esp + 4], ecx; mov [esp], eax; mov [esp + 8], ebx; call edx
0x00003949 : add [eax], al; mov [esp + 8], 0; mov [esp + 4], 0; mov [esp], ebx; call [eax + 0x2c]
0x0000b291 : mov esi, [ebp + 0xfffffffc]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x000343d7 : mov [edx], ecx; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00044479 : xchg eax, ebp; add [esp + ecx], ch; or [ebx + 0x5e5b28c4], al; pop edi; pop ebp; ret
0x00012dac : lea esp, [ebp + 0xfffffff4]; mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x0001f1b9 : mov [esp + 0x10], ecx; mov edx, [ebp + 0xffffffd0]; mov [esp], edx; call [edx + 0xc]
0x00002d25 : mov ebx, [ebp + 0xfffffff4]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00023a36 : add [ecx + 0xffffffc9], ch; adc [esi], cl; add [eax], al; pop ebp; add eax, ecx; ret
0x00046c98 : add al, [eax]; add [ebp + 0xf089f465], cl; pop ebx; pop esi; pop edi; pop ebp; ret 8
0x000594f7 : xor eax, [ecx + 0x10f8c4]; add [ebx + 0x5e], bl; pop edi; mov esp, ebp; pop ebp; ret
0x0003acdf : add [eax], al; add [ebp + 0xf889f465], cl; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x00046c9b : lea esp, [ebp + 0xfffffff4]; mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 8
0x0000e7fc : lea esp, [ebp + 0xfffffff4]; mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x0001eedf : mov [esp + 0x10], esi; mov edi, [ebp + 0xffffffd0]; mov [esp], edi; call [edi + 0xc]
0x0004fa53 : inc ebx; add al, 1; add [eax], al; add [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret
0x0003ebcc : inc [eax]; add [eax], al; add bh, al; test ecx, [edi + ebp*8 + 0xffffffff]; jmp [eax]
0x00060e29 : add [eax], al; add [ebx + 0xffffffc3], bl; nop ; add esp, 8; mov eax, 8; pop ebx; ret
0x0000add8 : movsb es:[edi], [esi]; mov esi, [esp]; mov edi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x0002a096 : add es:[eax + 0x40000], bh; cmp eax, [ebp + 8]; pop ebp; setae al; movzx eax, al; ret
0x00051244 : mov al, [ebx + 0x1b81cc4]; add [eax], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x000028d5 : dec [ecx + 0x50ff241c]; sbb [ebx + 0xdb75fff8], al; add esp, 8; pop ebx; pop ebp; ret
0x00043c3e : lea eax, [ebx + 0x28]; mov [esp + 8], eax; mov [esp + 4], 1; mov [esp], ebx; call edx
0x0001fafb : dec ebp; adc [ecx + 0x5489241c], cl; and al, 4; mov [esp + 8], ecx; call [eax + 0x40]
0x000329ad : xchg eax, ebx; or [ecx + 0x34c48317], cl; pop ebx; pop esi; pop edi; pop ebp; ret 0xc
0x00060578 : add [ebp + 0x27bc], cl; add [eax], al; mov eax, [esp + 4]; mov eax, [eax + 0x48]; ret
0x0001d49b : inc esp; sbb bh, bh; add [ecx + 0xb4c4], al; add [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x0002adba : mov gs:[edx], 2; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000140a : dec [ebx + 0x758bf45d]; clc ; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001c843 : lea eax, [ebx + 0x28]; mov [esp + 8], eax; mov [esp + 4], 1; mov [esp], ebx; call ecx
0x0002e6e2 : sub esp, 4; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret 0x14
0x00044b73 : sub [edx + 0xfffffffc], esp; dec [ebx + 0x758bf85d]; cld ; mov esp, ebp; pop ebp; ret
0x0005c6ef : add [eax], al; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret 8
0x0003dca5 : add [ebx + 0x748b241c], cl; and al, 4; mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x0003e9da : mov [esp], ebx; sar esi, 2; mov [esp + 8], esi; mov [esp + 4], edx; call [eax + 0x1c]
0x00045cb9 : mov [esp + 0x10], 0; mov [esp + 4], edx; mov [esp], ecx; mov [esp + 8], eax; call edi
0x0000918b : push esp; and al, 8; mov edx, [ebp + 8]; mov [esp], edi; mov [esp + 4], edx; call eax
0x00032ef7 : lea esp, [ebp + 0xfffffff4]; mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret 0xc
0x00032a08 : add bh, al; inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp], eax; call edi
0x0000b957 : push ebp; fdivr st(7); inc [ecx + 0x88c4]; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0000bfce : adc ecx, [ebx + 0x748b241c]; and al, 4; mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x00030f32 : mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret 4
0x00012510 : add [eax], al; add [ebx + 0xc483f045], cl; xor [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0001d319 : sub eax, [ebx + 0x10]; mov [edx], eax; add esp, 8; xor eax, eax; pop ebx; pop ebp; ret
0x0003b793 : mov eax, [ebp + 8]; mov edx, [ebp + 0xc]; pop ebp; mov eax, [eax]; sub eax, [edx]; ret
0x000366e5 : mov [esp + 4], ecx; mov [esp + 8], eax; mov eax, [ebp + 8]; mov [esp], eax; call [ebx]
0x00062a5e : adc [ebx + 0x8b84cc4], eax; add [eax], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0003241f : mov [ecx], edi; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x00033784 : mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret 8
0x00045bbe : add [eax + eax], dl; add [ecx + 0x168c4], al; add [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x0004884c : inc [eax]; adc [eax], al; add bh, al; test edx, [esi + edi*8 + 0xffffffff]; call [eax]
0x00012b61 : mov [esp + 8], esi; mov [esp + 4], eax; mov [ebp + 0xfffffff0], edx; call [edi + 0x1c]
0x0000253f : mov [eax + 0xc], ebx; mov [eax + 4], edx; mov [eax + 0x24], ecx; pop ebx; pop ebp; ret
0x00001935 : add [eax], al; add [ecx], bl; rol [ebx + 0x2d30c4], 0; add [eax + 0x5d5f5e5b], al; ret
0x000320a6 : add [eax], al; add [eax], al; lea edi, [edi]; mov eax, [eax + 4]; sub eax, gs:[0]; ret
0x000366e6 : dec esp; and al, 4; mov [esp + 8], eax; mov eax, [ebp + 8]; mov [esp], eax; call [ebx]
0x0001c9ce : add [eax], al; mov eax, [ebx + 0x94]; mov [esp + 4], 0; mov [esp], ebx; call [eax + 8]
0x0002cad0 : lea esp, [ebp + 0xfffffff4]; mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 0xc
0x00060bc8 : mov eax, [ebp + 0xc]; mov edx, [ebp + 8]; mov [esp], esi; mov [esp + 4], eax; call edx
0x000231e4 : mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edi; call ebx
0x00023ace : inc ecx; adc [ecx + 0x41891c59], cl; sbb [ebx + 0x5e5b14c4], al; pop edi; pop ebp; ret
0x00033563 : add [eax], al; add [ebp + 0xd089f465], cl; pop ebx; pop esi; pop edi; pop ebp; ret 0xc
0x0002310e : add [eax + eax], dl; add [ecx + 0x164c4], al; add [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x00013b41 : mov [esp], ebx; mov [esp + 4], edx; sub eax, edx; mov [esp + 8], eax; call [ecx + 0x1c]
0x00035566 : add [ecx + 0x890c245c], cl; inc esp; and al, 8; mov [esp], ecx; call [ebp + 0xffffffcc]
0x0004444b : mov [esp + 8], eax; lea eax, [ebx + 0x54]; mov [esp + 4], eax; mov [esp], edi; call esi
0x0001dfdb : add [eax], al; add [ecx + 0x408b085d], cl; adc [ebx + 0x5e5b08c4], al; pop ebp; jmp eax
0x0006230c : mov ebx, [esp + 0x10]; mov esi, [esp + 0x14]; mov edi, [esp + 0x18]; add esp, 0x1c; ret
0x0002efb3 : add [eax], eax; add [ebx + 0xd88920c4], al; pop ebx; pop esi; pop edi; pop ebp; ret 0xc
0x0004444c : inc esp; and al, 8; lea eax, [ebx + 0x54]; mov [esp + 4], eax; mov [esp], edi; call esi
0x0005e668 : movzx eax, al; mov edi, edx; mov eax, [ebx + eax*4 + 0xffffa000]; add eax, ebx; jmp eax
0x00022d55 : add ecx, [ecx + 0x375044f]; mov [edi + 8], ecx; pop ebx; pop esi; pop edi; pop ebp; ret
0x00054873 : inc [eax]; add [eax], al; add [ecx + 0xffff549d], cl; inc [ebx + 0xffff5485]; jmp [edi]
0x00045afc : mov [esp + 0x10], 0; mov [esp + 0xc], ebx; mov [esp + 8], edx; mov [esp], eax; call edi
0x0003df46 : mov ecx, [ebp + 0x18]; mov [esp + 4], esi; mov [esp], edi; mov [esp + 8], ecx; call ebx
0x0003c4df : sbb [ebx + 0x788b0470], cl; or [ebx + 0x448b0c68], cl; and al, 8; mov esp, ecx; jmp edx
0x000602fd : mov [esp], 1; mov [esp + 8], esi; mov [esp + 0xc], edi; mov [esp + 0x28], eax; call ecx
0x000442eb : mov [esp + 8], eax; lea eax, [ebx + 0x28]; mov [esp + 4], eax; mov [esp], edi; call esi
0x000442ec : inc esp; and al, 8; lea eax, [ebx + 0x28]; mov [esp + 4], eax; mov [esp], edi; call esi
0x0005d622 : lea esp, [ebp + 0xfffffff4]; mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret 0x10
0x00061bea : inc esp; mov bh, 8; mov [esp + 4], eax; mov eax, [esp + 0x2c]; mov [esp], eax; call edx
0x00008bfa : inc esi; or [eax], al; add [eax], al; add [ebx + 0x5e5b18c4], al; pop edi; pop ebp; ret
0x000343d6 : mov gs:[edx], ecx; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00029b11 : add es:[eax], al; add [ecx + 0x2010c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x000602c7 : add [ecx + 0xf0c4], al; add [edx + 2], bh; pop esi; mov eax, edx; pop edi; pop ebp; ret
0x0002b2e3 : dec [ebx + 0xffff6895]; dec [ebp + 0xd089f465]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00032cff : add [ebx + 0x74c08503], cl; or cl, [ebx + 0x758bf85d]; cld ; mov esp, ebp; pop ebp; ret
0x000615c5 : add [eax], al; add [ebx + 0xf63140c4], al; mov eax, esi; pop esi; pop edi; pop ebp; ret
0x00043c75 : add [eax], al; add [ebp + 0x54899855], cl; and al, 4; mov [esp], ebx; call [eax + 0x48]
0x00060e98 : movzx eax, al; mov edi, edx; mov eax, [ebx + eax*4 + 0xffffa51c]; add eax, ebx; jmp eax
0x0001ee51 : mov [esp + 4], edi; mov [esp], ebx; sub eax, edi; mov [esp + 8], eax; call [edx + 0x38]
0x0005e2fb : mov esi, [esp + 0x20]; mov edi, [esp + 0x24]; mov ebp, [esp + 0x28]; add esp, 0x2c; ret
0x000515fe : mov [ebp + 0xffffffcc], edi; mov edi, esi; mov esi, ebx; mov ebx, eax; nop ; call [ebx]
0x00015aa1 : add [eax], al; mov [esp + 8], edi; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x1c]
0x0003901e : mov [esp + 4], ecx; mov ebx, [ebp + 0xffffffdc]; mov [esp], ebx; call [ebp + 0xffffffe4]
0x00046109 : mov [ebp + 0xffffffe8], edx; mov [esp], edx; mov [esp + 4], eax; call [ebp + 0xfffffff0]
0x00047963 : mov eax, [ebp + 0xffffffe8]; lea esp, [ebp + 0xfffffff8]; pop ebx; pop esi; pop ebp; ret
0x00034981 : mov eax, [esi + 0xc]; mov [esp + 4], ebx; mov [esp], ecx; mov [esp + 8], eax; call [esi]
0x000368eb : mov [esp], edx; mov [esp + 8], eax; mov eax, [ebp + 0xc]; mov [esp + 4], eax; call [ebx]
0x00016f4e : dec [ebp + 0x2b9b455]; add [eax], al; add [ecx + 0xfffb50a5], cl; jmp [ebp + 0xffffff8b]
0x00008d14 : dec [ebx + 0x54890455]; and al, 4; mov edx, [ebp + 0xffffffec]; mov [esp], edx; call eax
0x000203dc : add [eax], al; mov [esp + 8], ecx; mov [esp + 4], esi; mov [esp], ebx; call [eax + 0x3c]
0x00000183 : add [eax], al; add [ebp + eax + 0xffffffe8], dh; arpl cx, ax; add [eax], al; leave ; ret
0x00020f19 : add [eax], al; mov [esp + 4], eax; mov [esp + 8], ecx; mov [esp], ebx; call [edx + 0x40]
0x00020450 : add [eax], al; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call [edi + 0x40]
0x00045689 : add [eax], al; add bh, al; add [eax], al; add [eax], al; add [ecx + 0xebd2311a], cl; ret
0x0000fc13 : add [eax], al; add [ebx + 0xfffe5085], cl; dec [ebp + 0x5e5bf465]; pop edi; pop ebp; ret
0x0003901f : dec esp; and al, 4; mov ebx, [ebp + 0xffffffdc]; mov [esp], ebx; call [ebp + 0xffffffe4]
0x00034cf1 : mov [esp], edx; mov [esp + 8], eax; mov eax, [ebp + 0xc]; mov [esp + 4], eax; call [edi]
0x0001d731 : add [eax], al; mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call [eax + 0x1c]
0x0001f5d1 : add [eax], al; mov [esp + 4], esi; mov [esp + 8], eax; mov [esp], ebx; call [edx + 0x40]
0x0005f2c5 : add [eax], al; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; add esp, 0xc; ret
0x00036e64 : mov eax, [esi + 0xc]; mov [esp + 4], ebx; mov [esp], edx; mov [esp + 8], eax; call [esi]
0x00011750 : inc esp; and al, 8; mov eax, [ebp + 0xffffffc4]; mov [esp], eax; call [ebp + 0xffffffd8]
0x00060302 : add [eax], al; mov [esp + 8], esi; mov [esp + 0xc], edi; mov [esp + 0x28], eax; call ecx
0x00020b51 : add [eax], al; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call [ecx + 0x40]
0x00002614 : sub esp, 4; mov ebx, [ebp + 8]; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x10]
0x0002953c : add [ebx + 0x5589084d], cl; int3 ; mov [esp + 4], eax; mov [esp], ecx; call [ebp + 0x10]
0x0001fe20 : xchg eax, esp; add [eax], al; add [ecx + 0x5d5b085d], cl; mov eax, [eax + 0x10]; jmp eax
0x00020295 : add [eax], al; mov [esp + 8], ecx; mov [esp + 4], edi; mov [esp], ebx; call [eax + 0x38]
0x00045b01 : add [eax], al; add [ecx + 0x890c245c], cl; push esp; and al, 8; mov [esp], eax; call edi
0x00032971 : add [ecx + 0x89082474], cl; push esp; and al, 4; mov [esp], eax; call [ebp + 0xffffffe0]
0x0003e604 : add [eax], al; mov [esp + 4], edx; mov [esp + 8], ebx; mov [esp], ecx; call [eax + 0x1c]
0x0005f3e4 : add [eax], al; add [eax], al; mov edx, [ebx + ecx*4 + 0xffffa45c]; add edx, ebx; jmp edx
0x0001f9e7 : add [eax], al; mov [esp + 4], ebx; mov [esp + 8], esi; mov [esp], edi; call [eax + 0x40]
0x0001174f : mov [esp + 8], eax; mov eax, [ebp + 0xffffffc4]; mov [esp], eax; call [ebp + 0xffffffd8]
0x000234f4 : mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 0xc], eax; mov [esp], edi; call esi
0x000316b4 : inc esp; add al, [eax]; add bl, ch; or [ebp + 0xb6], cl; add [ecx + 0x39028bc2], cl; ret
0x00038e83 : mov [esp + 4], ebx; mov eax, [ebp + 0xffffffdc]; mov [esp], eax; call [ebp + 0xffffffe4]
0x0001e8f2 : add [eax], al; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], edi; call [ecx + 0x40]
0x00038e84 : pop esp; and al, 4; mov eax, [ebp + 0xffffffdc]; mov [esp], eax; call [ebp + 0xffffffe4]
0x0001eadf : add [eax], al; mov [esp], edi; mov [esp + 4], edx; mov [esp + 8], ecx; call [eax + 0x40]
0x00050108 : add [eax + eax], dl; add [ebx + 0xd08958c4], al; pop ebx; pop esi; pop edi; pop ebp; ret
0x00034bb4 : add [eax], al; add [eax], al; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd0]
0x0001fc09 : xchg eax, esp; add [eax], al; add [ecx + 0x89042454], cl; sbb al, 0x24; call [eax + 0x48]
0x0001d9a6 : xchg eax, esp; add [eax], al; add [ecx + 0x89042444], cl; sbb al, 0x24; call [edx + 0x18]
0x00032107 : add [ebx + 0x20e80453], cl; pop ebp; add [eax], eax; pop edx; pop ecx; pop eax; jmp [eax]
0x000320c7 : add [ebx + 0xc0e80453], cl; pop esp; add [eax], eax; pop edx; pop ecx; pop eax; jmp [eax]
0x0003eece : mov [esp + 8], edx; mov edx, [ebp + 0xffffef8c]; mov [esp + 0xc], ecx; call [eax + edx*4]
0x0002133e : mov [esp + 0xc], 2; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x0001f955 : mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x0006037c : mov eax, ebp; or eax, 2; mov [esp + 0xc], edx; mov [esp + 4], eax; mov [esp], 1; call ecx
0x000386e0 : add [eax], al; add [eax], al; mov [esp + 4], ebx; mov [esp], esi; call [ebp + 0xffffffd4]
0x0001dfde : mov [ebp + 8], ebx; mov eax, [eax + 0x10]; add esp, 8; pop ebx; pop esi; pop ebp; jmp eax
0x000320e7 : add [ebx + 0x40e80453], cl; pop ebx; add [eax], eax; pop edx; pop ecx; pop eax; jmp [eax]
0x000116bd : dec ebp; lodsb al, [esi]; mov [esp + 4], ebx; mov [esp + 8], eax; call [ebp + 0xffffffd8]
0x00002872 : xchg eax, esp; add [eax], al; add [ecx + 0x89042454], cl; sbb al, 0x24; call [eax + 0x18]
0x000027dc : add [ebx + 0x758bf45d], cl; clc ; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000352d1 : add [eax], al; add [eax], al; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd8]
0x0001d934 : adc [ecx + 0x50891450], cl; adc [ecx + 0xc0310c50], cl; add esp, 8; pop ebx; pop ebp; ret
0x00000713 : adc [ebx + 0x44890c4d], cl; and al, 8; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 8]
0x00032127 : add [ebx + 0xb0e80453], cl; pop edx; add [eax], eax; pop edx; pop ecx; pop eax; jmp [eax]
0x0004591d : lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; mov eax, [esi]; mov [esp], eax; call ebx
0x00028b07 : add cl, [ebx + 0x758bf45d]; clc ; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00000ff3 : adc [ecx + 0xd2310c50], cl; mov [eax], 4; add esp, 4; mov eax, edx; pop ebx; pop ebp; ret
0x000446ac : mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], esi; call [eax + 0x40]
0x0002f9f7 : mov edx, [ebp + 0xffffffb4]; mov ecx, [ebp + 8]; mov eax, [edx]; add eax, [ecx]; call eax
0x0005f3e1 : xchg eax, esi; lea esi, [esi]; mov edx, [ebx + ecx*4 + 0xffffa45c]; add edx, ebx; jmp edx
0x0006061d : add [eax], al; add [ebx + 0x8b082454], cl; inc esp; and al, 4; mov [eax + 0x4c], edx; ret
0x0002e5cf : mov [ecx], edx; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret 0x14
0x00060862 : add [eax], al; add [ebx + 0x758bf45d], cl; clc ; mov edi, [ebp + 0xfffffffc]; leave ; ret
0x0001e1be : mov [ebp + 8], ebx; mov eax, [eax + 0x14]; add esp, 8; pop ebx; pop esi; pop ebp; jmp eax
0x0003758d : add [eax], al; add [eax], al; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x00039407 : add [eax], al; add [eax], al; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x0003a33f : add [esi + 0x5d8b080c], ah; clc ; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00020df6 : mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x40]
0x00035fe1 : add [eax], al; add [eax], al; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffcc]
0x0002245f : add [eax], al; add [ecx + 0xfffbdc8d], cl; dec [ecx + 0xfffbd4b5]; jmp [esi + 0xffffff90]
0x00002828 : add [ebp + 0x27bc], cl; add [eax], al; push ebp; xor eax, eax; mov ebp, esp; pop ebp; ret
0x00050058 : mov [esp + 4], edx; mov eax, [ebp + 0xffffffbc]; mov eax, [eax]; mov [esp], eax; call edi
0x00060564 : lea esi, [esi]; mov eax, [eax]; mov ebx, [esp + 4]; mov esi, [esp + 8]; add esp, 0xc; ret
0x00020916 : inc ebx; adc [ecx + 0x89082454], cl; inc esp; and al, 4; mov [esp], ebx; call [ecx + 0x38]
0x00045bbf : push esp; add [eax], al; add [ecx + 0x168c4], al; add [ecx + 0x5f5e5bd8], cl; pop ebp; ret
0x0002310f : push esp; add [eax], al; add [ecx + 0x164c4], al; add [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x000245ae : adc [ebx + 0x758bf45d], ecx; clc ; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0005be4b : add [eax], al; mov [ebx + 0x10], eax; sub esp, 4; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x00046e41 : mov [ecx + edx], eax; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0005dd54 : add eax, [ebx + 0x5d8b14ec]; clc ; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0002a694 : mov [ecx + edx*4], 0; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00017f55 : add [ecx + 0x1cc48303], cl; lea eax, [esi + 0x30]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00032cfe : add es:[ebx + 0x74c08503], cl; or cl, [ebx + 0x758bf85d]; cld ; mov esp, ebp; pop ebp; ret
0x0001ff0d : add [eax], al; add [edi], cl; xchg [edi + edi*8 + 0xffffffff], edx; jmp [esi + 0xffffff90]
0x00013b40 : sbb [ecx + 0x5489241c], cl; and al, 4; sub eax, edx; mov [esp + 8], eax; call [ecx + 0x1c]
0x0001d315 : add [ebx + 0x432b1443], cl; adc [ecx + 0x8c48302], cl; xor eax, eax; pop ebx; pop ebp; ret
0x00002dfe : add [eax], al; mov [ebx + 0x2c], 0; mov [ebx + 0x28], 0; add esp, 4; pop ebx; pop ebp; ret
0x00050059 : push esp; and al, 4; mov eax, [ebp + 0xffffffbc]; mov eax, [eax]; mov [esp], eax; call edi
0x000601b7 : mov ebp, [esp + 0x108]; mov [esi + 0x4c], eax; mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x0003e9d9 : dec [ecx + 0xfec1241c]; add cl, [ecx + 0x89082474]; push esp; and al, 4; call [eax + 0x1c]
0x0003c6ff : xor ecx, [ebx + 0x758bf45d]; clc ; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001efe9 : xchg [ebp + 0xb6], cl; add [ebx + 0x48c48302], cl; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001dc03 : add [eax], al; mov [eax + 0x28], 0; mov [eax + 0x24], 0; add esp, 4; pop ebx; pop ebp; ret
0x000285e6 : sbb [eax + 0x5d8bc031], edx; clc ; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000619ce : mov [esp + 0x1c], ecx; mov [esp + 4], eax; mov eax, [esp + 0x28]; mov [esp], eax; call edx
0x0005973e : add [edx], cl; add [eax], al; add [ebx + 0xf78813c], al; test ebx, [esi + 0x83fffffb]; ret
0x0004666e : lea eax, [ebp + 0xffffffec]; mov [esp], eax; mov [ebp + 0xffffff4c], edx; call [ebp + 0xc]
0x0000e400 : mov eax, [ebp + 0xc]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00060d26 : mov [esp + 0x14], ecx; mov [esp + 4], eax; mov eax, [esp + 0x18]; mov [esp], eax; call edx
0x0003b5ee : mov [eax + 0xc], edx; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001d9b8 : add eax, [ebx + 0x5d8bef23]; clc ; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0003eecf : push esp; and al, 8; mov edx, [ebp + 0xffffef8c]; mov [esp + 0xc], ecx; call [eax + edx*4]
0x0002e213 : mov edx, [ebp + 0xffffffbc]; lea esi, [ebx + 0x80ccac4]; mov [esp], edx; call [esi + 0x30]
0x00039ace : mov [ebx + 0x18], edx; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001d87e : mov ecx, [eax + 8]; mov [eax], edx; mov [eax + 8], edx; mov [eax + 0x20], ecx; pop ebp; ret
0x000320a5 : mov dh, 0; add [eax], al; add [ebp + 0xbf], cl; add [ebx + 0x2b650440], cl; add eax, 0; ret
0x0004651f : add [ecx + 0xb0c4], al; add [eax + 0xffffffff], bh; pop ebx; pop esi; pop edi; pop ebp; ret
0x000608f5 : mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov ebp, [ebp]; mov esp, ecx; ret
0x0001e9ac : add [eax], al; lea eax, [esp + 0x4c]; mov [esp + 4], eax; mov [esp], edi; call [edx + 0x48]
0x000159c6 : mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; mov [ebp + 0xfffffaa0], ecx; call [eax + 0x1c]
0x0005f2c4 : add [eax], al; add [ebx + 0x748b241c], cl; and al, 4; mov edi, [esp + 8]; add esp, 0xc; ret
0x0001eade : add [eax], al; add [ecx + 0x5489243c], cl; and al, 4; mov [esp + 8], ecx; call [eax + 0x40]
0x0001fe1e : mov eax, [ebx + 0x94]; mov [ebp + 8], ebx; pop ebx; pop ebp; mov eax, [eax + 0x10]; jmp eax
0x000028b3 : push eax; dec [ecx + 0xb60f0453]; inc eax; inc [ebx + 0xc483ef23]; or [ebx + 0x5d], bl; ret
0x00002a8b : add ecx, [ecx + 0xc0310442]; mov ebx, [esp]; mov esi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x0000add3 : add ecx, [ecx + 0xa4f3fcd1]; mov esi, [esp]; mov edi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x00011832 : mov eax, [ebx]; mov [esp + 4], eax; mov eax, [edx]; mov [esp], eax; call [ebp + 0xffffffd8]
0x00020b8c : add [eax], al; lea eax, [esp + 0x24]; mov [esp + 4], eax; mov [esp], ebx; call [edx + 0x48]
0x0005f2ab : dec esi; dec esp; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; add esp, 0xc; ret
0x0000530a : add [eax], al; mov eax, edx; mov ebx, [esp]; mov esi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x0000941a : add bl, ch; xchg eax, ebp; mov edx, [ebp + 4]; mov [esp], edi; mov [esp + 4], edx; call eax
0x00032ced : add eax, [eax]; add [eax], al; add [ebx + 0x758bf85d], cl; cld ; mov esp, ebp; pop ebp; ret
0x0000c662 : call [eax + 0x26748d]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00060fee : add [eax], al; add [eax + 0x747a097e], al; or [ecx], esi; rol [ebx + 0x5e5b20c4], 0x5f; ret
0x000218e3 : add [eax], al; add [ebx + 0x658be045], cl; ror [ebp + 0x5e5bf465], 1; pop edi; pop ebp; ret
0x00020187 : add [ebx + 0x4c89105d], cl; and al, 4; mov [esp], esi; mov [esp + 8], ebx; call [eax + 0x20]
0x00003945 : mov eax, [ebx + 0x94]; mov [esp + 8], 0; mov [esp + 4], 0; mov [esp], ebx; call [eax + 0x2c]
0x0001c9d5 : add bh, al; inc esp; and al, 4; add [eax], al; add [eax], al; mov [esp], ebx; call [eax + 8]
0x000354f7 : mov [esp + 4], ecx; mov [esp + 8], eax; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x00038e0f : mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [ebx + 0xc]; mov [esp], eax; call [ebx + 4]
0x0003683d : add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp + 4], edx; mov [esp], ecx; call ebx
0x000352cb : add [eax], al; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd8]
0x00037417 : mov [esp + 4], ebx; mov [esp + 8], eax; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x0001d938 : mov [eax + 0x10], edx; mov [eax + 0xc], edx; xor eax, eax; add esp, 8; pop ebx; pop ebp; ret
0x000347df : mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x0003c239 : push ebp; or [ebp + 0xffffff8b], ah; add [ebp + 0xffffff8b], bl; inc esp; nop ; inc eax; ret
0x00035fdb : add [eax], al; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffcc]
0x00000714 : mov ecx, [ebp + 0xc]; mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 8]
0x000329fd : add [eax], al; add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp], eax; call edi
0x00044398 : add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edi; call esi
0x000354f8 : dec esp; and al, 4; mov [esp + 8], eax; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x0000ad93 : stosd es:[edi], eax; and edx, 3; mov ecx, edx; rep stosb es:[edi], al; pop edi; pop ebp; ret
0x00044271 : mov ebp, esp; mov eax, [ebp + 8]; pop ebp; mov eax, [eax + 0x24]; mov eax, [eax + 0x28]; ret
0x00039401 : add [eax], al; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00001f74 : add [ebx + 0x7c890855], cl; and al, 8; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0001db6b : mov [eax], edx; xor eax, eax; mov ebx, [esp]; mov esi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x00034bae : add [eax], al; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd0]
0x0003cdfd : mov eax, [ebx + eax*4]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00037787 : mov [esp + 4], esi; mov [esp + 8], eax; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x00037418 : pop esp; and al, 4; mov [esp + 8], eax; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x000010a9 : add [edi], ecx; test ecx, [esi + 1]; add [eax], al; mov eax, [ebp + 0xfffffffc]; leave ; ret
0x000115a2 : mov [ebp + 0xffffffb0], edx; mov [esp + 4], ebx; mov [esp + 8], ecx; call [ebp + 0xffffffd8]
0x000386da : add [eax], al; mov [esp + 8], 0; mov [esp + 4], ebx; mov [esp], esi; call [ebp + 0xffffffd4]
0x0001cd0c : add [ebx + 0x74890855], cl; and al, 8; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x000116bc : mov [ebp + 0xffffffac], ecx; mov [esp + 4], ebx; mov [esp + 8], eax; call [ebp + 0xffffffd8]
0x0003df17 : add [ebx + 0x7c891855], cl; and al, 4; mov [esp], ebx; mov [esp + 8], edx; call [ebp + 0x14]
0x0001e6cc : mov edx, [ebx + 4]; mov [esp + 4], eax; mov [esp], esi; mov [esp + 8], edx; call [esi + 0xc]
0x0000268d : mov [esp + 8], ebx; mov [esp + 0xc], 0; mov [esp], eax; mov [esp + 4], ecx; call [edx + 0x24]
0x00020b4b : mov [esp + 0xc], 0; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call [ecx + 0x40]
0x000201b5 : pop ebp; or [ebx + 0x433b0443], cl; or [ebx + 9], dh; movzx eax, [eax]; pop ebx; pop ebp; ret
0x0003f840 : lea ebp, [edi + ebp*8 + 0xffffffff]; inc edi; test ecx, [edi + ebp*8 + 0xffffffff]; jmp [eax]
0x0001dc09 : add [eax], al; add bh, al; inc eax; and al, 0; add [eax], al; add [ebx + 0x5d5b04c4], al; ret
0x00001f75 : mov edx, [ebp + 8]; mov [esp + 8], edi; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x00003336 : xchg eax, esp; add [eax], al; add [ecx + 0x408b085d], cl; adc [ebx + 0x5d5b04c4], al; jmp eax
0x0000268e : pop esp; and al, 8; mov [esp + 0xc], 0; mov [esp], eax; mov [esp + 4], ecx; call [edx + 0x24]
0x00003335 : adc [eax + eax + 0x5d890000], 8; mov eax, [eax + 0x10]; add esp, 4; pop ebx; pop ebp; jmp eax
0x00022ed6 : lea eax, [ebp + 0xffffffc8]; mov [esp + 4], eax; mov eax, [edi + 8]; mov [esp], eax; call esi
0x0001fdf3 : mov eax, [eax + 0x20]; mov esi, [esp + 4]; mov edi, [esp + 8]; mov esp, ebp; pop ebp; jmp eax
0x0003e680 : inc [eax + 0xa767df9]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret 4
0x00020f13 : mov [esp + 0xc], 1; mov [esp + 4], eax; mov [esp + 8], ecx; mov [esp], ebx; call [edx + 0x40]
0x0001f9e1 : mov [esp + 0xc], 0; mov [esp + 4], ebx; mov [esp + 8], esi; mov [esp], edi; call [eax + 0x40]
0x0001e8ec : mov [esp + 0xc], 0; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], edi; call [ecx + 0x40]
0x00002583 : mov [ebx + 0x14], eax; mov [ebx + 0x10], eax; xor eax, eax; add esp, 8; pop ebx; pop ebp; ret
0x000098c2 : mov [esp + 8], edx; mov edx, [ebp + 0xfffffff0]; mov [esp], ebx; mov [esp + 4], edx; call eax
0x00031f5d : dec ebp; add [eax], eax; pop edx; mov ecx, [esp]; mov [esp], eax; mov eax, [esp + 4]; ret 0xc
0x0000326d : adc [eax + eax + 0x5d890000], 8; mov eax, [eax + 0x14]; add esp, 4; pop ebx; pop ebp; jmp eax
0x0002044a : mov [esp + 0xc], 1; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call [edi + 0x40]
0x0001ead9 : mov [esp + 0xc], 0; mov [esp], edi; mov [esp + 4], edx; mov [esp + 8], ecx; call [eax + 0x40]
0x0005ce7e : mov [ebp + 0xffffffd4], eax; mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call edx
0x0004fc46 : add [eax], al; mov eax, [ebx + 0xc]; mov [eax], edx; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x0000a2f8 : mov [esp + 8], edx; mov edx, [ebp + 0xffffffec]; mov [esp], esi; mov [esp + 4], edx; call eax
0x0001cd0d : mov edx, [ebp + 8]; mov [esp + 8], esi; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0004fc53 : mov dh, 0; add [eax], al; add [ebx + 0x408b0c53], cl; sbb [ecx + 0xfc5d8b02], cl; leave ; ret
0x000299a4 : add ecx, [ecx + 0x4489d855]; and al, 4; mov eax, [ebp + 8]; mov [esp], eax; call [ebp + 0x10]
0x00023085 : mov [esp], edi; mov [esp + 8], eax; lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; call ebx
0x00060554 : add [ebp + ebp*8 + 0xffffff8b], dh; pop esp; and al, 4; mov esi, [esp + 8]; add esp, 0xc; ret
0x0001f5cb : mov [esp + 0xc], 1; mov [esp + 4], esi; mov [esp + 8], eax; mov [esp], ebx; call [edx + 0x40]
0x00008d15 : mov edx, [ebp + 4]; mov [esp + 4], edx; mov edx, [ebp + 0xffffffec]; mov [esp], edx; call eax
0x00020c64 : mov [esp + 4], esi; mov [esp + 8], edi; mov [esp + 0xc], 0; mov [esp], ebx; call [eax + 0x40]
0x0004dec1 : dec [ebx + 0xfffe6895]; dec [ecx + 0xfffe60b5]; dec [ebx + 0xfffe549d]; jmp [ebp + 0xffffff89]
0x0004fcc4 : add al, [eax]; add [eax], al; add [ebx + 0x24480], cl; add [ecx + 0xfc5d8b02], cl; leave ; ret
0x0004fcc3 : mov [edx], 0; mov eax, [eax + 0x244]; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x00001df6 : mov [edx + 8], esi; add [edx + 4], 1; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x30]
0x0004c149 : dec [ecx + 0xfffe1c95]; dec [ebx + 0xfffe68bd]; dec [ecx + 0xfffe20b5]; jmp [ebp + 0xffffff8b]
0x00002b5e : add [eax], al; push ebp; mov ebp, esp; mov eax, [ebp + 8]; pop ebp; mov eax, [eax + 0x34]; ret
0x00048545 : dec [ecx + 0xfffe5cb5]; dec [ebx + 0xfffe6c85]; dec [ebx + 0xfffe40b5]; jmp [ebp + 0xffffff8b]
0x0004651e : add es:[ecx + 0xb0c4], al; add [eax + 0xffffffff], bh; pop ebx; pop esi; pop edi; pop ebp; ret
0x000236d6 : add [eax], al; mov eax, [ebp + 0x10]; mov [eax], edx; mov eax, [ebp + 0xfffffff8]; leave ; ret
0x0003dca1 : mov eax, 2; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x000098c3 : push esp; and al, 8; mov edx, [ebp + 0xfffffff0]; mov [esp], ebx; mov [esp + 4], edx; call eax
0x0005f2c0 : mov [esi + 0x4c], 0; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; add esp, 0xc; ret
0x00044511 : lea eax, [ebp + 0xfffffff0]; mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edx; call edi
0x00053e93 : dec [ebx + 0xffff4085]; dec [ecx + 0xffff3495]; dec [ebx + 0xffff4495]; jmp [esi + 0xffffff90]
0x000450eb : dec [ecx + 0xfffbc895]; dec [ecx + 0xfffbdc8d]; dec [ecx + 0xfffbecbd]; jmp [esi + 0xffffff90]
0x00045cbd : add [eax], al; add [eax], al; mov [esp + 4], edx; mov [esp], ecx; mov [esp + 8], eax; call edi
0x0004f0e2 : dec [ebx + 0xfffe0495]; dec [ecx + 0xfffe608d]; dec [ebx + 0xfffe68b5]; jmp [ebp + 0xffffff8b]
0x00036842 : inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp + 4], edx; mov [esp], ecx; call ebx
0x0000a2f9 : push esp; and al, 8; mov edx, [ebp + 0xffffffec]; mov [esp], esi; mov [esp + 4], edx; call eax
0x00022e59 : add [eax], al; add [eax], al; mov [esp + 4], eax; mov eax, [edi + 8]; mov [esp], eax; call esi
0x00002bae : adc al, [eax]; add [ecx + 0xcb15415], cl; or [ebx + 0xcb15005], al; or [ecx], al; pop ebp; ret
0x0004fc65 : lea esi, [esi]; mov edx, [ebx + 0xc]; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x000029e3 : mov eax, [ebp + 8]; mov edx, [ebp + 0xc]; pop ebp; mov eax, [eax + 8]; sub eax, [edx + 8]; ret
0x00031fda : mov [ebx], eax; mov edx, [ebx + 0xc]; mov ecx, [ebx + 0x10]; mov eax, [ebx + 0x14]; call [ebx]
0x0001daec : mov edx, [eax]; sub edx, [eax + 8]; sar edx, 2; mov eax, [ecx + 8]; sub eax, edx; pop ebp; ret
0x00032970 : add [eax], al; mov [esp + 8], esi; mov [esp + 4], edx; mov [esp], eax; call [ebp + 0xffffffe0]
0x0004439d : inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp + 4], eax; mov [esp], edi; call esi
0x000401a3 : mov [esp], ebx; sar edx, 2; mov [esp + 8], edx; mov [ebp + 0xffffeed4], edx; call [eax + 0x1c]
0x0005ce7b : add al, 3; adc [ecx + 0x7c89d445], cl; and al, 8; mov [esp + 4], esi; mov [esp], ebx; call edx
0x000233ac : lea eax, [ebp + 0xffffffc0]; mov [esp + 0xc], ecx; mov [esp + 4], eax; mov [esp], edi; call esi
0x000006ce : inc esp; and al, 8; mov eax, [ebp + 0xc]; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0x14]
0x0003dda4 : mov ebx, [esp + 0x14]; mov esi, [esp + 0x18]; mov edi, [esp + 0x1c]; mov esp, ebp; pop ebp; ret
0x0001e9d2 : pop esp; and al, 4; mov [esp + 8], esi; mov [esp + 0xc], ecx; mov [esp], edi; call [eax + 0x40]
0x00003338 : add [eax], al; mov [ebp + 8], ebx; mov eax, [eax + 0x10]; add esp, 4; pop ebx; pop ebp; jmp eax
0x00060e35 : add [eax], al; add [ebx + 0xffffffc3], bl; lea esi, [esi]; add esp, 8; mov eax, 2; pop ebx; ret
0x0002a7a8 : add [ecx + 0x6890477], cl; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00061be9 : mov eax, [edi + esi*4 + 8]; mov [esp + 4], eax; mov eax, [esp + 0x2c]; mov [esp], eax; call edx
0x0001250f : push ss; add [eax], al; add [ebx + 0xc483f045], cl; xor [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x000025eb : add [eax], al; mov [ebp + 0xc], ecx; mov [ebp + 8], eax; pop ebp; mov eax, [edx + 0xc]; jmp eax
0x000231e8 : add [eax], al; add [eax], al; mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edi; call ebx
0x00003944 : mov eax, fs:[ebx + 0x94]; mov [esp + 8], 0; mov [esp + 4], 0; mov [esp], ebx; call [eax + 0x2c]
0x0001649f : mov [esp + 4], ecx; mov ecx, [ebp + 0xfffffb78]; mov [ebp + 0xfffffaa4], edx; call [ecx + 0x1c]
0x0004fcc7 : add [eax], al; mov eax, [eax + 0x244]; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x0001e944 : lea esi, [esi]; mov eax, [edi + 0x54]; mov [esp + 0x44], eax; mov [esp], eax; call [eax + 0x10]
0x00003952 : add bh, al; inc esp; and al, 4; add [eax], al; add [eax], al; mov [esp], ebx; call [eax + 0x2c]
0x00020e05 : add bh, al; inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp], ebx; call [eax + 0x40]
0x00020b6f : add [ebx + 0x558b0c45], cl; adc [ecx + 0x84c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0003df16 : add es:[ebx + 0x7c891855], cl; and al, 4; mov [esp], ebx; mov [esp + 8], edx; call [ebp + 0x14]
0x0000111a : add [edi], ecx; test edi, ebp; add [eax], al; add [ebx + 0xd08908c4], al; pop ebx; pop ebp; ret
0x00020bb9 : mov edx, [ebp + 0xc]; mov [esp], ebx; mov [esp + 8], ecx; mov [esp + 4], edx; call [eax + 0x40]
0x00060d25 : add [ecx + 0x8914244c], cl; inc esp; and al, 4; mov eax, [esp + 0x18]; mov [esp], eax; call edx
0x00020cad : inc ebx; and [ecx], ch; ror [ecx + 0x89042454], 1; inc esp; and al, 8; mov [esp], ebx; call ecx
0x000164a0 : dec esp; and al, 4; mov ecx, [ebp + 0xfffffb78]; mov [ebp + 0xfffffaa4], edx; call [ecx + 0x1c]
0x0006080f : add [eax], eax; add [eax], al; mov [esp], 1; mov [esp + 8], eax; mov [esp + 0xc], edx; call ecx
0x0001e9d1 : mov [esp + 4], ebx; mov [esp + 8], esi; mov [esp + 0xc], ecx; mov [esp], edi; call [eax + 0x40]
0x00003270 : add [eax], al; mov [ebp + 8], ebx; mov eax, [eax + 0x14]; add esp, 4; pop ebx; pop ebp; jmp eax
0x00002b59 : lea edi, [edi]; push ebp; mov ebp, esp; mov eax, [ebp + 8]; pop ebp; mov eax, [eax + 0x34]; ret
0x000236d1 : lea esi, [esi]; mov eax, [ebp + 0x10]; mov [eax], edx; mov eax, [ebp + 0xfffffff8]; leave ; ret
0x000006cd : mov [esp + 8], eax; mov eax, [ebp + 0xc]; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0x14]
0x00032082 : add [eax], al; add [eax], al; push ebp; mov ebp, esp; pop ebp; lea eax, [eax + 0xfffffff0]; ret
0x000446bb : add bh, al; inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp], esi; call [eax + 0x40]
0x0001f964 : add bh, al; inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp], ebx; call [eax + 0x24]
0x00002a8c : mov [edx + 4], eax; xor eax, eax; mov ebx, [esp]; mov esi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x00030f30 : call ebx; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret 4
0x00031716 : mov [edx + ebx*8 + 8], eax; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x000605e5 : adc [ebx + 0xc35b08c4], al; nop ; lea esi, [esi]; mov eax, [esp + 4]; mov eax, [eax + 0x4c]; ret
0x00009665 : add [edi], ecx; test ebx, [edi]; adc al, [eax]; add [ecx + 0x4c483d8], cl; pop ebx; pop ebp; ret
0x0006061c : add [eax], al; add [eax], al; mov edx, [esp + 8]; mov eax, [esp + 4]; mov [eax + 0x4c], edx; ret
0x000083a4 : xor eax, eax; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x0001e8f1 : add [eax], al; add [ecx + 0x89042454], cl; inc esp; and al, 8; mov [esp], edi; call [ecx + 0x40]
0x00002651 : mov ebp, esp; mov eax, [ebp + 8]; pop ebp; mov edx, [eax + 0x94]; mov eax, [edx + 0x20]; jmp eax
0x00023084 : add [ecx + 0x4489243c], cl; and al, 8; lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; call ebx
0x0005e2f9 : neg edx; mov esi, [esp + 0x20]; mov edi, [esp + 0x24]; mov ebp, [esp + 0x28]; add esp, 0x2c; ret
0x00020b8b : add [eax], al; add [ebp + 0x89242444], cl; inc esp; and al, 4; mov [esp], ebx; call [edx + 0x48]
0x00020291 : mov eax, [ebx + 0x94]; mov [esp + 8], ecx; mov [esp + 4], edi; mov [esp], ebx; call [eax + 0x38]
0x0000d404 : mov eax, esi; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x0003b803 : mov eax, [ebx + edx*4 + 8]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00035565 : add [eax], al; mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp], ecx; call [ebp + 0xffffffcc]
0x00060619 : add [ebp + 0xbf], cl; add [ebx + 0x8b082454], cl; inc esp; and al, 4; mov [eax + 0x4c], edx; ret
0x0001dbfe : mov [eax + 0x20], 0; mov [eax + 0x28], 0; mov [eax + 0x24], 0; add esp, 4; pop ebx; pop ebp; ret
0x000203d8 : mov eax, [ebx + 0x94]; mov [esp + 8], ecx; mov [esp + 4], esi; mov [esp], ebx; call [eax + 0x3c]
0x0002044f : add [eax], al; add [ecx + 0x89042454], cl; inc esp; and al, 8; mov [esp], ebx; call [edi + 0x40]
0x0005f2aa : mov [esi + 0x4c], ecx; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; add esp, 0xc; ret
0x0001d72d : mov eax, [ebx + 0x94]; mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call [eax + 0x1c]
0x0003e600 : mov eax, [ecx + 0x94]; mov [esp + 4], edx; mov [esp + 8], ebx; mov [esp], ecx; call [eax + 0x1c]
0x00045b00 : add [eax], al; add [eax], al; mov [esp + 0xc], ebx; mov [esp + 8], edx; mov [esp], eax; call edi
0x00000e14 : lea esi, [esi]; shl eax, 4; mov eax, [ebx + eax + 0xc]; ror eax, 9; xor eax, gs:[0x18]; call eax
0x0001f5d0 : add [eax], al; add [ecx + 0x89042474], cl; inc esp; and al, 8; mov [esp], ebx; call [edx + 0x40]
0x0001e9ab : add [eax], al; add [ebp + 0x894c2444], cl; inc esp; and al, 4; mov [esp], edi; call [edx + 0x48]
0x0000ad0e : mov eax, edx; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x00030c0c : mov [ebp + 0xffffffdc], eax; mov [eax], 0; mov [esp], edi; mov [ebp + 0xffffffe0], ecx; call esi
0x00013706 : mov [esp + 8], edx; mov edx, [ebp + 0xfffffb50]; mov ecx, [ebp + 0xfffffb44]; call [ecx + edx*4]
0x00015a9d : mov eax, [ebx + 0x94]; mov [esp + 8], edi; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x1c]
0x00020f18 : add [eax], al; add [ecx + 0x89042444], cl; dec esp; and al, 8; mov [esp], ebx; call [edx + 0x40]
0x0003c236 : mov ebp, esp; mov edx, [ebp + 8]; mov eax, gs:[eax]; pop ebp; mov eax, [eax + edx*4 + 0x40]; ret
0x00002df9 : mov [ebx + 0x24], 0; mov [ebx + 0x2c], 0; mov [ebx + 0x28], 0; add esp, 4; pop ebx; pop ebp; ret
0x00020188 : mov ebx, [ebp + 0x10]; mov [esp + 4], ecx; mov [esp], esi; mov [esp + 8], ebx; call [eax + 0x20]
0x0003f3c9 : mov ecx, [ebp + 0xffffef50]; movzx eax, [ecx + 0x80c1980]; mov eax, [eax*4 + 0x80c1620]; jmp eax
0x0003e603 : add [eax], al; add [ecx + 0x89042454], cl; pop esp; and al, 8; mov [esp], ecx; call [eax + 0x1c]
0x00020b50 : add [eax], al; add [ecx + 0x89042454], cl; inc esp; and al, 8; mov [esp], ebx; call [ecx + 0x40]
0x0001fafa : mov ecx, [ebp + 0x10]; mov [esp], ebx; mov [esp + 4], edx; mov [esp + 8], ecx; call [eax + 0x40]
0x00037488 : push ebp; ror [ecx + 0x890c2474], 1; inc esp; and al, 4; mov [esp], edx; call [ebp + 0xffffffd8]
0x0003df18 : mov edx, [ebp + 0x18]; mov [esp + 4], edi; mov [esp], ebx; mov [esp + 8], edx; call [ebp + 0x14]
0x00020915 : mov [ebx + 0x10], eax; mov [esp + 8], edx; mov [esp + 4], eax; mov [esp], ebx; call [ecx + 0x38]
0x0003b7fa : dec [ebx + 0xfffe4895]; dec [ecx + 0x93448b38]; or [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x00061101 : add al, [ebx + 0xc35b08c4]; nop ; mov eax, [esp + 0x10]; mov eax, [eax]; add esp, 8; pop ebx; ret
0x00030c99 : lea eax, [ebp + 0xffffff4c]; mov [edx], eax; mov eax, [ebp + 0xc]; mov [esp], eax; call [ebp + 8]
0x00060e45 : add [eax], al; add [ebx + 0xffffffc3], bl; lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret
0x00023acc : adc al, 3; inc ecx; adc [ecx + 0x41891c59], cl; sbb [ebx + 0x5e5b14c4], al; pop edi; pop ebp; ret
0x0001d24d : adc dh, [ecx]; fisttp [ebx + 0xd889fc75]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x00044392 : add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edi; call esi
0x00035fd5 : mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffcc]
0x00015aa0 : add [eax], al; add [ecx + 0x8908247c], cl; push esp; and al, 4; mov [esp], ebx; call [eax + 0x1c]
0x00036837 : add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], edx; mov [esp], ecx; call ebx
0x00034ba8 : mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd0]
0x00047a8d : inc ebx; or [ebx + 0x5d8b14ec], al; clc ; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00043c76 : add [eax], al; lea edx, [ebp + 0xffffff98]; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x48]
0x00060618 : add [eax], al; lea edi, [edi]; mov edx, [esp + 8]; mov eax, [esp + 4]; mov [eax + 0x4c], edx; ret
0x000218e9 : mov esp, [ebp + 0xffffffd0]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00030fc1 : xchg eax, ecx; pop es; or [ebx + 0xccac082], cl; or [ecx + 0xc8890441], cl; pop ebx; pop ebp; ret
0x000386d4 : mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ebx; mov [esp], esi; call [ebp + 0xffffffd4]
0x000234f8 : add [eax], al; add [eax], al; mov [esp + 0x10], 0; mov [esp + 0xc], eax; mov [esp], edi; call esi
0x0003dca4 : add [eax], al; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x00002e04 : add [eax], al; add bh, al; inc ebx; sub [eax], al; add [eax], al; add [ebx + 0x5d5b04c4], al; ret
0x0001d7d4 : add [eax], al; mov edx, [ebp + 0xffffffb0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x0005da3b : mov eax, [ebp + 0xffffffcc]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00012fbc : mov eax, [ebp + 0xffffffc8]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x00013707 : push esp; and al, 8; mov edx, [ebp + 0xfffffb50]; mov ecx, [ebp + 0xfffffb44]; call [ecx + edx*4]
0x000393fb : mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x0003a33e : popfd ; add [esi + 0x5d8b080c], ah; clc ; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00022e53 : add [eax], al; mov [esp + 8], 0; mov [esp + 4], eax; mov eax, [edi + 8]; mov [esp], eax; call esi
0x00047fb2 : sub edi, eax; sub esi, eax; sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 0x8090105]; jmp eax
0x00050d65 : mov esp, [ebp + 0xffffffc4]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0000fc16 : mov eax, [ebp + 0xfffffe50]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001c8e8 : mov esp, [ebp + 0xfffffff0]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x000352c5 : mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd8]
0x0002160c : mov eax, [ebp + 0xffffffe0]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0005bcc9 : inc ebx; or [ebx + 0x758bf45d], cl; clc ; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00002a1a : mov ecx, [edx + 4]; sub ecx, [edx + 0xc]; mov eax, [ebx + 8]; sub eax, ecx; pop ebx; pop ebp; ret
0x00008638 : push eax; idiv edi; dec [ebx + 0x8d010849]; pop eax; idiv edi; inc [ebx + 0xfff75c85]; call [eax]
0x0003db62 : sub edi, eax; sub esi, eax; sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 0x8085cb5]; jmp eax
0x0001cfe4 : add [eax], al; mov edx, [ebp + 0xffffffe0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x00029dbc : mov eax, [ebp + 0xffffffe8]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret
0x0001d5d9 : pop ds; or esi, eax; mov eax, [ebp + 0xfffffff4]; mov [esp + 4], 0; mov [esp], ebx; call [eax + 8]
0x00000d27 : add [eax], al; rol ecx, 9; mov [edx + 0x14], ecx; mov [edx + 0xc], ebp; mov [edx + 0x18], eax; ret
0x0004452b : mov edi, [ebp + 0xfffffffc]; sub eax, ebx; mov ebx, [ebp + 0xfffffff4]; mov esp, ebp; pop ebp; ret
0x00004412 : mov eax, edx; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0005e176 : mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; sub esp, 8; mov esp, ebp; pop ebp; ret 4
0x0001d5e4 : add [eax], al; add [ecx + 0x50ff241c], cl; or [ecx + 0x168c4], al; add [ecx + 0x5d5e5bf0], cl; ret
0x00060855 : mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; leave ; ret
0x00032cec : mov [ebx], 0; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00013c0c : movsx eax, [ebp + 0xfffffafb]; movzx eax, [eax + 0x80aef40]; mov eax, [eax*4 + 0x80aebe0]; jmp eax
0x0001d2db : add [eax], al; add [ecx + 0xfc758bd8], cl; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x0003eecd : push ss; mov [esp + 8], edx; mov edx, [ebp + 0xffffef8c]; mov [esp + 0xc], ecx; call [eax + edx*4]
0x0000b37d : mov esi, [ebp + 0xfffffffc]; mov eax, ebx; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x0000efe3 : add cl, [ecx + 0xffff6485]; dec [ecx + 0xffff4cb5]; dec [ecx + 0xffff489d]; jmp [esi + 0xffffff90]
0x000285e8 : xor eax, eax; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0000c282 : mov eax, ecx; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00002613 : push ebx; sub esp, 4; mov ebx, [ebp + 8]; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x10]
0x000293ff : dec [ecx + 0xc7082474]; inc esp; and al, 4; add al, [eax]; add [eax], al; mov [esp], ebx; call edi
0x0001d0ae : mov [ebp + 0xc], edx; mov [ebp + 0x10], ecx; mov eax, [eax + 0x24]; mov esp, ebp; pop ebp; jmp eax
0x0000b28f : mov eax, ebx; mov esi, [ebp + 0xfffffffc]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x00060614 : lea esi, [esi]; lea edi, [edi]; mov edx, [esp + 8]; mov eax, [esp + 4]; mov [eax + 0x4c], edx; ret
0x00013483 : movsx eax, [ebp + 0xfffffb54]; movzx eax, [eax + 0x80aef40]; mov eax, [eax*4 + 0x80aeee0]; jmp eax
0x00029421 : inc eax; or [ebp + 0x899575c0], al; dec esp; and al, 8; mov [esp + 4], 3; mov [esp], ebx; call edi
0x0003e004 : xchg [ecx + 0xebfffffe], ebx; sbb eax, [ecx + 0x15cc4]; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0003f329 : mov [esp], ebx; mov [esp + 4], edx; sub eax, edx; sar eax, 2; mov [esp + 8], eax; call [ecx + 0x1c]
0x0000ad56 : movsb es:[edi], [esi]; mov eax, edi; mov esi, [esp]; mov edi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x0000d6f1 : mov eax, [ebp + 0xffffffdc]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret 8
0x00002ebe : movzx ecx, [ebx]; mov [esp], edx; mov [ebp + 0xffffffec], edx; mov [esp + 4], ecx; call [eax + 0xc]
0x0002e212 : dec esp; mov edx, [ebp + 0xffffffbc]; lea esi, [ebx + 0x80ccac4]; mov [esp], edx; call [esi + 0x30]
0x00032cf0 : add [eax], al; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00000df9 : mov [esp + 4], esi; mov eax, [eax + 0x10]; ror edx, 9; xor edx, gs:[0x18]; mov [esp], eax; call edx
0x00029b10 : add ah, [esi]; add [eax], al; add [ecx + 0x2010c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00000dd1 : mov eax, [eax + 0x10]; ror edx, 9; xor edx, gs:[0x18]; mov [esp], esi; mov [esp + 4], eax; call edx
0x00000712 : push ebp; adc [ebx + 0x44890c4d], cl; and al, 8; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 8]
0x00054a03 : dec [ebx + 0x20b99845]; add [eax], al; add [ebx], ch; lea ebx, [edi + edi*8 + 0xffffffff]; call ebx
0x000293dd : dec [ecx + 0xc7082474]; inc esp; and al, 4; add [eax], eax; add [eax], al; mov [esp], ebx; call edi
0x0001d879 : push eax; and [ecx + 0x488b0448], cl; or [ecx + 0x8508910], cl; mov [eax + 0x20], ecx; pop ebp; ret
0x0000250b : mov ecx, [eax + 0xc]; mov [eax + 4], edx; mov [eax + 0xc], edx; mov [eax + 0x24], ecx; pop ebp; ret
0x0000d150 : xor al, [ebx + 0x748dffc8]; add es:[ecx + 0x1d4c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0003d208 : add [ebx + 0x5d03084d], cl; adc [ecx + 0xc4839904], cl; sub [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0001e9a8 : mov edx, [edi + 0x94]; lea eax, [esp + 0x4c]; mov [esp + 4], eax; mov [esp], edi; call [edx + 0x48]
0x00023a34 : add [eax], al; add [ecx + 0xffffffc9], ch; adc [esi], cl; add [eax], al; pop ebp; add eax, ecx; ret
0x00021342 : add al, [eax]; add [eax], al; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x0005d161 : mov esp, [ebp + 0xffffffc8]; lea esp, [ebp + 0xfffffff4]; pop ebx; pop esi; pop edi; pop ebp; ret 8
0x00032d01 : add eax, [ebp + 0x8b0a74c0]; pop ebp; clc ; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00013b3f : inc edi; sbb [ecx + 0x5489241c], cl; and al, 4; sub eax, edx; mov [esp + 8], eax; call [ecx + 0x1c]
0x00020b88 : mov edx, [ebx + 0x94]; lea eax, [esp + 0x24]; mov [esp + 4], eax; mov [esp], ebx; call [edx + 0x48]
0x0003ea19 : dec [ebx + 0xffefac85]; dec [ecx + 0x88e82404]; cmpsd [esi], es:[edi]; cld ; jmp [esi + 0xffffff83]
0x0005e172 : dec [ebx + 0x758bf45d]; clc ; mov edi, [ebp + 0xfffffffc]; sub esp, 8; mov esp, ebp; pop ebp; ret 4
0x000218df : add [ecx + 0x9482], cl; add [ebx + 0x658be045], cl; ror [ebp + 0x5e5bf465], 1; pop edi; pop ebp; ret
0x00037416 : add cl, [ecx + 0x8904245c]; inc esp; and al, 8; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x0003e081 : sbb [ebx + 0xfffee495], cl; dec [ecx + 0x4489241c]; and al, 8; mov [esp + 4], edx; call [ebp + 0x14]
0x00060769 : add [eax], eax; add [ecx + 0xc4810446], cl; inc eax; add [eax], eax; add [ecx + 0x5d5f5ef0], cl; ret
0x000354f6 : add cl, [ecx + 0x8904244c]; inc esp; and al, 8; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x0001d8af : mov [eax + 4], edx; mov [eax + 8], ebx; mov [eax], edx; mov [eax + 0x20], ecx; pop ebx; pop ebp; ret
0x0003e300 : sbb [ebx + 0xfffedc85], cl; dec [ecx + 0x4c89243c]; and al, 8; mov [esp + 4], eax; call [ebp + 0x14]
0x000446b0 : add [eax], eax; add [eax], al; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], esi; call [eax + 0x40]
0x00020dfa : add [eax], eax; add [eax], al; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x40]
0x00037585 : mov [esp + 0x14], esi; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x00037786 : add cl, [ecx + 0x89042474]; inc esp; and al, 8; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x00045cb7 : add [eax], al; mov [esp + 0x10], 0; mov [esp + 4], edx; mov [esp], ecx; mov [esp + 8], eax; call edi
0x0001f959 : add [eax], eax; add [eax], al; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x0003dca3 : add [eax], al; add [ebx + 0x748b241c], cl; and al, 4; mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x0002245d : inc [eax]; add [eax], al; add [ecx + 0xfffbdc8d], cl; dec [ecx + 0xfffbd4b5]; jmp [esi + 0xffffff90]
0x0003b791 : mov ebp, esp; mov eax, [ebp + 8]; mov edx, [ebp + 0xc]; pop ebp; mov eax, [eax]; sub eax, [edx]; ret
0x000383ee : add cl, [ecx + 0x8904247c]; inc esp; and al, 8; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x00033782 : mov eax, edx; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret 8
0x0003296a : mov [esp + 0x10], 0; mov [esp + 8], esi; mov [esp + 4], edx; mov [esp], eax; call [ebp + 0xffffffe0]
0x00038e0e : add [ecx + 0x8904247c], ecx; inc esp; and al, 8; mov eax, [ebx + 0xc]; mov [esp], eax; call [ebx + 4]
0x00020dff : inc esp; and al, 4; add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x40]
0x0000394c : inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp + 4], 0; mov [esp], ebx; call [eax + 0x2c]
0x0001f5ca : pop ds; mov [esp + 0xc], 1; mov [esp + 4], esi; mov [esp + 8], eax; mov [esp], ebx; call [edx + 0x40]
0x0003845b : mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], esi; call [ebp + 0xffffffd4]
0x00036328 : mov [esp + 0xc], ebx; mov [esp + 8], ecx; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffc4]
0x00034fc6 : add [ecx + 0x8904247c], ecx; inc esp; and al, 8; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x00001933 : add [edx], ah; add [eax], al; add [ecx], bl; rol [ebx + 0x2d30c4], 0; add [eax + 0x5d5f5e5b], al; ret
0x000231e2 : add [eax], al; mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edi; call ebx
0x00020f12 : pop ds; mov [esp + 0xc], 1; mov [esp + 4], eax; mov [esp + 8], ecx; mov [esp], ebx; call [edx + 0x40]
0x0003925a : mov [esp + 0xc], esi; mov [esp + 8], edx; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00035033 : mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x0001f041 : inc esp; and al, 4; mov [esp + 8], edx; mov ecx, [ebp + 0xffffffd0]; mov [esp], ecx; call [ecx + 0xc]
0x0002f6ab : pushal ; and cl, [ebx]; or [ebx + 0xc683b45d], cl; or [ebx + 0x38b087d], cl; add eax, [edi]; call eax
0x00020cac : mov eax, [ebx + 0x20]; sub eax, edx; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call ecx
0x0002f6af : mov ebx, [ebp + 0xffffffb4]; add esi, 8; mov edi, [ebp + 8]; mov eax, [ebx]; add eax, [edi]; call eax
0x000446b5 : inc esp; and al, 4; add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp], esi; call [eax + 0x40]
0x000391ee : push es; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [ebx + 0xc]; mov [esp], eax; call [ebx + 4]
0x00036d50 : mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 0xffffffd0]
0x0003897e : add [ecx + 0x89042474], ecx; inc esp; and al, 8; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x0001f95e : inc esp; and al, 4; add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x00061451 : sbb eax, eax; mov esi, [esp + 0x20]; mov edi, [esp + 0x24]; mov ebp, [esp + 0x28]; add esp, 0x2c; ret
0x0004fc58 : mov edx, [ebx + 0xc]; mov eax, [eax + 0x18]; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x0001250e : add [esi], dl; add [eax], al; add [ebx + 0xc483f045], cl; xor [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x0001dc95 : mov [ebp + 8], ebx; mov ebx, [ebp + 0xfffffff8]; mov eax, [eax + 0xc]; mov esp, ebp; pop ebp; jmp eax
0x000396dc : mov ecx, [ebp + 0xc]; mov [esp + 4], ecx; mov esi, [ebp + 8]; mov [esp], esi; call [ebp + 0xffffffdc]
0x00000825 : push [edx + ecx + 0xffffff8b]; pop ebp; clc ; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001f040 : mov [esp + 4], eax; mov [esp + 8], edx; mov ecx, [ebp + 0xffffffd0]; mov [esp], ecx; call [ecx + 0xc]
0x0000227f : push ebp; or [ebp + 0x91850fd2], al; add [eax], al; add [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x000347de : add ecx, [ecx + 0x8904247c]; inc esp; and al, 8; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x0003484a : mov [esp + 0xc], ebx; mov [esp + 8], ecx; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd0]
0x000397cb : mov ebx, [ebp + 0xc]; mov [esp + 4], ebx; mov esi, [ebp + 8]; mov [esp], esi; call [ebp + 0xffffffdc]
0x0001d802 : mov [esp + 8], ebx; mov edx, [ebp + 0xffffffb0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x00012b5e : mov [esp], ecx; mov [esp + 8], esi; mov [esp + 4], eax; mov [ebp + 0xfffffff0], edx; call [edi + 0x1c]
0x0001e942 : call [eax + 0x26748d]; mov eax, [edi + 0x54]; mov [esp + 0x44], eax; mov [esp], eax; call [eax + 0x10]
0x0005e7f7 : add [ebx + 0xc4835442], cl; or [ebx + 0xffffffc3], bl; mov eax, [edx + 0x58]; add esp, 8; pop ebx; ret
0x0001d012 : mov [esp + 8], ebx; mov edx, [ebp + 0xffffffe0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x0003fea9 : mov [esp + 8], edx; mov [ebp + 0xffffeed4], edx; mov [esp + 4], ecx; mov [esp], ebx; call [eax + 0x1c]
0x00060808 : mov edx, [esi + 4]; mov [esp + 4], 1; mov [esp], 1; mov [esp + 8], eax; mov [esp + 0xc], edx; call ecx
0x0005efef : add [ebx + 0x6177053f], al; mov eax, [edi]; mov eax, [ebx + eax*4 + 0xffffa444]; add eax, ebx; jmp eax
0x000299a5 : mov [ebp + 0xffffffd8], edx; mov [esp + 4], eax; mov eax, [ebp + 8]; mov [esp], eax; call [ebp + 0x10]
0x00019035 : inc esp; and al, 4; mov edi, [ebp + 0xffffff94]; mov [esp], edi; mov [ebp + 0xffffff38], edx; call ecx
0x0003dee3 : mov edx, [ebp + 0xfffffed8]; mov [esp + 4], edi; mov [esp + 8], eax; mov [esp], edx; call [ebp + 0x14]
0x0003e082 : mov edx, [ebp + 0xfffffee4]; mov [esp], ebx; mov [esp + 8], eax; mov [esp + 4], edx; call [ebp + 0x14]
0x00035564 : add [eax], al; add [ecx + 0x890c245c], cl; inc esp; and al, 8; mov [esp], ecx; call [ebp + 0xffffffcc]
0x0001d803 : pop esp; and al, 8; mov edx, [ebp + 0xffffffb0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x00045afa : add [eax], al; mov [esp + 0x10], 0; mov [esp + 0xc], ebx; mov [esp + 8], edx; mov [esp], eax; call edi
0x000147ac : mov [esp + 8], edx; mov [esp + 4], ecx; mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00009418 : adc al, 0; add bl, ch; xchg eax, ebp; mov edx, [ebp + 4]; mov [esp], edi; mov [esp + 4], edx; call eax
0x0002953d : mov ecx, [ebp + 8]; mov [ebp + 0xffffffcc], edx; mov [esp + 4], eax; mov [esp], ecx; call [ebp + 0x10]
0x0001ee4f : add [eax], al; mov [esp + 4], edi; mov [esp], ebx; sub eax, edi; mov [esp + 8], eax; call [edx + 0x38]
0x00008f86 : mov edx, [ebp + 0xffffffec]; mov [esp + 4], edx; mov edx, [ebp + 0xfffffff0]; mov [esp], edx; call eax
0x000460bc : dec esp; and al, 4; mov [ebp + 0xfffffff0], eax; mov [ebp + 0xffffffec], ecx; mov [esp], edx; call eax
0x00044270 : push ebp; mov ebp, esp; mov eax, [ebp + 8]; pop ebp; mov eax, [eax + 0x24]; mov eax, [eax + 0x28]; ret
0x000131e9 : mov [esp + 8], esi; mov edx, [ebp + 0xfffffb7c]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0003555f : mov [esp + 0x10], 0; mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp], ecx; call [ebp + 0xffffffcc]
0x0003f328 : sbb [ecx + 0x5489241c], cl; and al, 4; sub eax, edx; sar eax, 2; mov [esp + 8], eax; call [ecx + 0x1c]
0x0001ead8 : dec eax; mov [esp + 0xc], 0; mov [esp], edi; mov [esp + 4], edx; mov [esp + 8], ecx; call [eax + 0x40]
0x0001d013 : pop esp; and al, 8; mov edx, [ebp + 0xffffffe0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x0003e128 : add esi, [ebp + 0xfffffee4]; mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call [ebp + 0x14]
0x0001dfd9 : adc [eax + eax + 0x5d890000], 8; mov eax, [eax + 0x10]; add esp, 8; pop ebx; pop esi; pop ebp; jmp eax
0x000602fb : add [eax], al; mov [esp], 1; mov [esp + 8], esi; mov [esp + 0xc], edi; mov [esp + 0x28], eax; call ecx
0x0005f3dc : add [ecx + 0x96ebd13c], cl; lea esi, [esi]; mov edx, [ebx + ecx*4 + 0xffffa45c]; add edx, ebx; jmp edx
0x00043c74 : xchg eax, esp; add [eax], al; add [ebp + 0x54899855], cl; and al, 4; mov [esp], ebx; call [eax + 0x48]
0x0003e301 : mov eax, [ebp + 0xfffffedc]; mov [esp], edi; mov [esp + 8], ecx; mov [esp + 4], eax; call [ebp + 0x14]
0x00060bc4 : lea esi, [esi]; mov eax, [ebp + 0xc]; mov edx, [ebp + 8]; mov [esp], esi; mov [esp + 4], eax; call edx
0x00019034 : mov [esp + 4], eax; mov edi, [ebp + 0xffffff94]; mov [esp], edi; mov [ebp + 0xffffff38], edx; call ecx
0x0004351d : mov [esp + 8], edx; mov [ebp + 0xffff7e78], edx; mov [esp + 4], ecx; mov [esp], ebx; call [eax + 0x1c]
0x00014a76 : mov [esp + 4], edi; mov [esp], ebx; mov [esp + 8], edx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0001dfda : xchg eax, esp; add [eax], al; add [ecx + 0x408b085d], cl; adc [ebx + 0x5e5b08c4], al; pop ebp; jmp eax
0x00022e4d : mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov eax, [edi + 8]; mov [esp], eax; call esi
0x00032352 : lea ecx, [ebp + 0xffffffe8]; mov edx, [edx + edi + 0x10]; mov [esp], ecx; mov [esp + 4], edx; call eax
0x00012cbd : mov [esp + 8], edx; mov [ebp + 0xffffdf34], edx; mov [esp + 4], eax; mov [esp], ebx; call [ecx + 0x1c]
0x00041ec9 : mov [esp + 4], edx; mov [ebp + 0xffffeed0], ecx; mov [esp + 8], edi; mov [esp], ebx; call [eax + 0x1c]
0x0001655a : mov [esp + 8], edi; mov edx, [ebp + 0xfffffb64]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0001e1b9 : adc [eax + eax + 0x5d890000], 8; mov eax, [eax + 0x14]; add esp, 8; pop ebx; pop esi; pop ebp; jmp eax
0x000460bb : mov [esp + 4], ecx; mov [ebp + 0xfffffff0], eax; mov [ebp + 0xffffffec], ecx; mov [esp], edx; call eax
0x00015457 : mov [esp + 8], edi; mov edx, [ebp + 0xfffffb4c]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0002b951 : add [ebp + 0x148d5214], ecx; ror [ebx + 0xffff748d], 1; push edi; fisttp [ecx + 0xffff7c9d]; jmp [ecx]
0x000147ad : push esp; and al, 8; mov [esp + 4], ecx; mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0001e62a : mov eax, [eax + 0xb8]; mov [ebp + 8], ebx; mov eax, [eax + 0x10]; add esp, 4; pop ebx; pop ebp; jmp eax
0x00043c40 : sub [ecx + 0xc7082444], cl; inc esp; and al, 4; add [eax], eax; add [eax], al; mov [esp], ebx; call edx
0x0005cece : mov [esp + 8], edx; mov edx, [ebp + 0xffffffe4]; mov [esp + 4], eax; mov [esp], edx; call [edi + ebx*4]
0x0004438c : mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edi; call esi
0x000280c3 : adc [ecx + 0xe4e82404], cl; adc dh, bh; dec [ecx + 0xdce8241c]; adc dh, bh; inc [ebx + 0x5d5b04c4]; ret
0x0001eadd : add [eax], al; add [eax], al; mov [esp], edi; mov [esp + 4], edx; mov [esp + 8], ecx; call [eax + 0x40]
0x00045aff : adc [eax], al; add [eax], al; add [ecx + 0x890c245c], cl; push esp; and al, 8; mov [esp], eax; call edi
0x0001f9e5 : add [eax], al; add [eax], al; mov [esp + 4], ebx; mov [esp + 8], esi; mov [esp], edi; call [eax + 0x40]
0x0005cfee : mov [esp + 8], eax; mov eax, [ebp + 0xffffffe4]; mov [esp + 4], edx; mov [esp], eax; call [esi + ebx*4]
0x0001e8f0 : add [eax], al; add [eax], al; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], edi; call [ecx + 0x40]
0x00003334 : mov eax, [ebx + 0x94]; mov [ebp + 8], ebx; mov eax, [eax + 0x10]; add esp, 4; pop ebx; pop ebp; jmp eax
0x0003c4e0 : mov esi, [eax + 4]; mov edi, [eax + 8]; mov ebp, [eax + 0xc]; mov eax, [esp + 8]; mov esp, ecx; jmp edx
0x0004351e : push esp; and al, 8; mov [ebp + 0xffff7e78], edx; mov [esp + 4], ecx; mov [esp], ebx; call [eax + 0x1c]
0x0002adb6 : dec [ebx + 0xc765e845]; add al, [edx]; add [eax], al; add [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret
0x0001c845 : sub [ecx + 0xc7082444], cl; inc esp; and al, 4; add [eax], eax; add [eax], al; mov [esp], ebx; call ecx
0x0005e664 : lea esi, [esi]; movzx eax, al; mov edi, edx; mov eax, [ebx + eax*4 + 0xffffa000]; add eax, ebx; jmp eax
0x00060ce1 : inc esp; and al, 8; mov eax, [edi]; mov [esp + 4], eax; mov eax, [esp + 0x18]; mov [esp], eax; call edx
0x00001df5 : dec eax; mov [edx + 8], esi; add [edx + 4], 1; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x30]
0x00000d22 : xor ecx, gs:[0x18]; rol ecx, 9; mov [edx + 0x14], ecx; mov [edx + 0xc], ebp; mov [edx + 0x18], eax; ret
0x0004450c : add [ecx + 0x8d0c2444], cl; inc ebp;  mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edx; call edi
0x00013acd : mov [esp + 8], edx; mov [esp + 4], edi; mov [esp], ebx; mov edi, [ebp + 0xfffffac4]; call [ecx + edi*4]
0x00036831 : mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], edx; mov [esp], ecx; call ebx
0x0003dec6 : mov [esp + 4], ecx; shr eax, 1; imul eax, [ebp + 0x10]; add edi, eax; mov [esp], edi; call [ebp + 0x14]
0x00060ce0 : mov [esp + 8], eax; mov eax, [edi]; mov [esp + 4], eax; mov eax, [esp + 0x18]; mov [esp], eax; call edx
0x0005cfef : inc esp; and al, 8; mov eax, [ebp + 0xffffffe4]; mov [esp + 4], edx; mov [esp], eax; call [esi + ebx*4]
0x00020b4f : add [eax], al; add [eax], al; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call [ecx + 0x40]
0x000025e7 : mov edx, [eax + 0x94]; mov [ebp + 0xc], ecx; mov [ebp + 8], eax; pop ebp; mov eax, [edx + 0xc]; jmp eax
0x0003dec7 : dec esp; and al, 4; shr eax, 1; imul eax, [ebp + 0x10]; add edi, eax; mov [esp], edi; call [ebp + 0x14]
0x0005f2c3 : add [eax], al; add [eax], al; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; add esp, 0xc; ret
0x00060e94 : lea esi, [esi]; movzx eax, al; mov edi, edx; mov eax, [ebx + eax*4 + 0xffffa51c]; add eax, ebx; jmp eax
0x00012cbe : push esp; and al, 8; mov [ebp + 0xffffdf34], edx; mov [esp + 4], eax; mov [esp], ebx; call [ecx + 0x1c]
0x0005e6a8 : mov esi, [esp + 0x30]; mov edi, [esp + 0x34]; mov [ecx], edx; mov ebp, [esp + 0x38]; add esp, 0x3c; ret
0x0003feaa : push esp; and al, 8; mov [ebp + 0xffffeed4], edx; mov [esp + 4], ecx; mov [esp], ebx; call [eax + 0x1c]
0x00062948 : mov esi, [esp + 0x20]; mov edi, [esp + 0x24]; mov [ecx], edx; mov ebp, [esp + 0x28]; add esp, 0x2c; ret
0x0003296f : add [eax], al; add [ecx + 0x89082474], cl; push esp; and al, 4; mov [esp], eax; call [ebp + 0xffffffe0]
0x00009186 : mov cs, [ebx + 0x54890455]; and al, 8; mov edx, [ebp + 8]; mov [esp], edi; mov [esp + 4], edx; call eax
0x000234f2 : add [eax], al; mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 0xc], eax; mov [esp], edi; call esi
0x00041eca : push esp; and al, 4; mov [ebp + 0xffffeed0], ecx; mov [esp + 8], edi; mov [esp], ebx; call [eax + 0x1c]
0x000329f6 : mov eax, [ebx + 4]; mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp], eax; call edi
0x0000326c : mov eax, [ebx + 0x94]; mov [ebp + 8], ebx; mov eax, [eax + 0x14]; add esp, 4; pop ebx; pop ebp; jmp eax
0x00046107 : mov [edx], edi; mov [ebp + 0xffffffe8], edx; mov [esp], edx; mov [esp + 4], eax; call [ebp + 0xfffffff0]
0x00003943 : inc ebx; mov eax, fs:[ebx + 0x94]; mov [esp + 8], 0; mov [esp + 4], 0; mov [esp], ebx; call [eax + 0x2c]
0x00020df4 : add [eax], al; mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x40]
0x0001f953 : add [eax], al; mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x0001f5cf : add [eax], eax; add [eax], al; mov [esp + 4], esi; mov [esp + 8], eax; mov [esp], ebx; call [edx + 0x40]
0x0002133c : add [eax], al; mov [esp + 0xc], 2; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x0005cecf : push esp; and al, 8; mov edx, [ebp + 0xffffffe4]; mov [esp + 4], eax; mov [esp], edx; call [edi + ebx*4]
0x0005ce7a : push edx; add al, 3; adc [ecx + 0x7c89d445], cl; and al, 8; mov [esp + 4], esi; mov [esp], ebx; call edx
0x00013ace : push esp; and al, 8; mov [esp + 4], edi; mov [esp], ebx; mov edi, [ebp + 0xfffffac4]; call [ecx + edi*4]
0x0001d9a5 : xchg eax, ebx; xchg eax, esp; add [eax], al; add [ecx + 0x89042444], cl; sbb al, 0x24; call [edx + 0x18]
0x0003bb10 : dec [ebx + 0xfffe4cb5]; dec [edi]; test ch, [esi]; add eax, [eax]; add [ebx + 0xfffe5c8d], cl; jmp [ebx]
0x0004264c : dec [ebx + 0xffefa0bd]; dec [ebx + 0xffefa085]; inc edi; test ecx, [edi + ebp*8 + 0xffffffff]; jmp [eax]
0x0000995f : add [ebx + edx + 0xffffff8b], dh; inc ebp; or [ecx + 0xcc48310], cl; xor eax, eax; pop ebx; pop ebp; ret
0x00009187 : mov edx, [ebp + 4]; mov [esp + 8], edx; mov edx, [ebp + 8]; mov [esp], edi; mov [esp + 4], edx; call eax
0x00060300 : add [eax], eax; add [eax], al; mov [esp + 8], esi; mov [esp + 0xc], edi; mov [esp + 0x28], eax; call ecx
0x000027da : add [eax], al; add [ebx + 0x758bf45d], cl; clc ; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0004613d : mov eax, [ebp + 0xffffffec]; mov [ecx], edx; mov [esp], ecx; mov [esp + 4], eax; call [ebp + 0xfffffff0]
0x00020f17 : add [eax], eax; add [eax], al; mov [esp + 4], eax; mov [esp + 8], ecx; mov [esp], ebx; call [edx + 0x40]
0x00060d24 : inc ebp; add [ecx + 0x8914244c], cl; inc esp; and al, 4; mov eax, [esp + 0x18]; mov [esp], eax; call edx
0x000446aa : add [eax], al; mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], esi; call [eax + 0x40]
0x0002044e : add [eax], eax; add [eax], al; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call [edi + 0x40]
0x00012b5d : add [ecx + 0x7489240c], cl; and al, 8; mov [esp + 4], eax; mov [ebp + 0xfffffff0], edx; call [edi + 0x1c]
0x000601b5 : add [eax], al; mov ebp, [esp + 0x108]; mov [esi + 0x4c], eax; mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x00023dc2 : mov [ebx + 0x24], eax; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x000115fb : push ebp; fmul [ebx + 0x5c89e04d]; and al, 4; mov [esp + 8], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x0000ad51 : add ecx, [ecx + 0xa4f3fcc1]; mov eax, edi; mov esi, [esp]; mov edi, [esp + 4]; mov esp, ebp; pop ebp; ret
0x0005efee : add es:[ebx + 0x6177053f], al; mov eax, [edi]; mov eax, [ebx + eax*4 + 0xffffa444]; add eax, ebx; jmp eax
0x00043c72 : mov eax, [ebx + 0x94]; lea edx, [ebp + 0xffffff98]; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x48]
0x0003dee2 : sbb [ebx + 0xfffed895], cl; dec [ecx + 0x8904247c]; inc esp; and al, 8; mov [esp], edx; call [ebp + 0x14]
0x0005973c : add [eax], al; add [edx], cl; add [eax], al; add [ebx + 0xf78813c], al; test ebx, [esi + 0x83fffffb]; ret
0x0005f231 : adc [ebx + 0x8124244c], cl; dec ecx; pushal ; add [eax], al; add [eax + 0xfffe59e9], al; jmp [esi + 0x3d]
0x0001d313 : add [eax], al; add [ebx + 0x432b1443], cl; adc [ecx + 0x8c48302], cl; xor eax, eax; pop ebx; pop ebp; ret
0x0001fc04 : mov [ebp + 0xfffffffc], edi; mov eax, [eax + 0x94]; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x48]
0x0000ac66 : movsb es:[edi], [esi]; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x0001e9a7 : add [ebx + 0x9497], cl; add [ebp + 0x894c2444], cl; inc esp; and al, 4; mov [esp], edi; call [edx + 0x48]
0x00020b87 : add [ebx + 0x9493], cl; add [ebp + 0x89242444], cl; inc esp; and al, 4; mov [esp], ebx; call [edx + 0x48]
0x0002dc4d : add [eax], eax; add [ebx + 0x758bf45d], cl; clc ; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00031fd6 : xor ecx, [ebx + 0x389047b]; mov edx, [ebx + 0xc]; mov ecx, [ebx + 0x10]; mov eax, [ebx + 0x14]; call [ebx]
0x00060fec : xchg [eax + eax + 0x7e800000], esp; or [edx + 0x74], edi; or [ecx], esi; rol [ebx + 0x5e5b20c4], 0x5f; ret
0x00002650 : push ebp; mov ebp, esp; mov eax, [ebp + 8]; pop ebp; mov edx, [eax + 0x94]; mov eax, [edx + 0x20]; jmp eax
0x00060d23 : mov eax, [ebp]; mov [esp + 0x14], ecx; mov [esp + 4], eax; mov eax, [esp + 0x18]; mov [esp], eax; call edx
0x00045cb1 : mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 4], edx; mov [esp], ecx; mov [esp + 8], eax; call edi
0x000218e2 : xchg eax, esp; add [eax], al; add [ebx + 0x658be045], cl; ror [ebp + 0x5e5bf465], 1; pop edi; pop ebp; ret
0x0002545d : add [ebx + 0xcbe9815], cl; or [ebp + 0xe0840fd2], al; add [eax], al; add [ecx], dh; jmp [esi + 0xffffff90]
0x0000253c : mov [eax + 8], edx; mov [eax + 0xc], ebx; mov [eax + 4], edx; mov [eax + 0x24], ecx; pop ebx; pop ebp; ret
0x0003c235 : push ebp; mov ebp, esp; mov edx, [ebp + 8]; mov eax, gs:[eax]; pop ebp; mov eax, [eax + edx*4 + 0x40]; ret
0x0001cd08 : adc [eax + eax + 0x558b0000], 8; mov [esp + 8], esi; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x00001f70 : adc [eax + eax + 0x558b0000], 8; mov [esp + 8], edi; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x000231dc : mov [esp + 0x1c], 1; mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edi; call ebx
0x0001cd0a : add [eax], al; add [ebx + 0x74890855], cl; and al, 8; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x00001f72 : add [eax], al; add [ebx + 0x7c890855], cl; and al, 8; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0000b28e : inc edx; mov eax, ebx; mov esi, [ebp + 0xfffffffc]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x000352c9 : add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd8]
0x0001c83f : mov [esp + 0xc], eax; lea eax, [ebx + 0x28]; mov [esp + 8], eax; mov [esp + 4], 1; mov [esp], ebx; call ecx
0x00020185 : add [eax], al; add [ebx + 0x4c89105d], cl; and al, 4; mov [esp], esi; mov [esp + 8], ebx; call [eax + 0x20]
0x00035fd9 : add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffcc]
0x00044c2f : push es; mov eax, ebx; mov esi, [ebp + 0xfffffffc]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x0000a18f : inc [ebp + 0xb8840fc0]; add [eax], al; add [ebp + 0xc4830870], cl; sbb [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x000393ff : add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00043c3a : mov [esp + 0xc], eax; lea eax, [ebx + 0x28]; mov [esp + 8], eax; mov [esp + 4], 1; mov [esp], ebx; call edx
0x00034bac : add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd0]
0x0003dd9f : mov eax, 2; mov ebx, [esp + 0x14]; mov esi, [esp + 0x18]; mov edi, [esp + 0x1c]; mov esp, ebp; pop ebp; ret
0x0000296f : mov [ebx + 0x30], esi; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000386d8 : add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp + 4], ebx; mov [esp], esi; call [ebp + 0xffffffd4]
0x0005dd52 : dec [ecx + 0x14ec8303]; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00001f73 : add [eax], al; mov edx, [ebp + 8]; mov [esp + 8], edi; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x000391ed : mov eax, [esi]; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [ebx + 0xc]; mov [esp], eax; call [ebx + 4]
0x000354f5 : mov eax, [edx]; mov [esp + 4], ecx; mov [esp + 8], eax; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x00045af4 : mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 0xc], ebx; mov [esp + 8], edx; mov [esp], eax; call edi
0x00038e0d : mov eax, [ecx]; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [ebx + 0xc]; mov [esp], eax; call [ebx + 4]
0x000116b9 : mov [esp], ecx; mov [ebp + 0xffffffac], ecx; mov [esp + 4], ebx; mov [esp + 8], eax; call [ebp + 0xffffffd8]
0x00020c62 : add [eax], al; mov [esp + 4], esi; mov [esp + 8], edi; mov [esp + 0xc], 0; mov [esp], ebx; call [eax + 0x40]
0x0005e2f6 : adc edx, 0; neg edx; mov esi, [esp + 0x20]; mov edi, [esp + 0x24]; mov ebp, [esp + 0x28]; add esp, 0x2c; ret
0x000383ed : mov eax, [edx]; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x000347dd : mov eax, [ebx]; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x00037415 : mov eax, [edx]; mov [esp + 4], ebx; mov [esp + 8], eax; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x0001174c : pop esp; and al, 4; mov [esp + 8], eax; mov eax, [ebp + 0xffffffc4]; mov [esp], eax; call [ebp + 0xffffffd8]
0x00023083 : add [eax], al; mov [esp], edi; mov [esp + 8], eax; lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; call ebx
0x00000da1 : add [edx + ebx + 0xffffffbb], dh; fadd [ebp + 0xc]; or [ecx + 0xc45e0fb], al; or [ebx + 0xd], dh; call [ebx]
0x00034fc5 : mov eax, [ecx]; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x000115fd : mov ecx, [ebp + 0xffffffe0]; mov [esp + 4], ebx; mov [esp + 8], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x00037785 : mov eax, [edx]; mov [esp + 4], esi; mov [esp + 8], eax; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x00020b49 : add [eax], al; mov [esp + 0xc], 0; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call [ecx + 0x40]
0x00001df2 : add [ebx + 0x72894853], cl; or [ebx + 0x8b010442], al; adc [eax + eax + 0x1c890000], 0x24; call [eax + 0x30]
0x0003897d : mov eax, [ecx]; mov [esp + 4], esi; mov [esp + 8], eax; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x0001e8ea : add [eax], al; mov [esp + 0xc], 0; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], edi; call [ecx + 0x40]
0x00062d37 : add [ecx + 0xc708247c], cl; inc esp; and al, 4; sub [eax], al; add [eax], al; mov [esp], esi; call [ebp + 8]
0x00009317 : dec [ecx + 0xf8758bd8]; mov ebx, [ebp + 0xfffffff4]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000366e2 : mov eax, [ebx + 0xc]; mov [esp + 4], ecx; mov [esp + 8], eax; mov eax, [ebp + 8]; mov [esp], eax; call [ebx]
0x00012d25 : dec [ecx + 0xf45d8bf0]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00034849 : int3 ; mov [esp + 0xc], ebx; mov [esp + 8], ecx; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd0]
0x00039259 : add [ecx + 0x890c2474], cl; push esp; and al, 8; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x000029e1 : mov ebp, esp; mov eax, [ebp + 8]; mov edx, [ebp + 0xc]; pop ebp; mov eax, [eax + 8]; sub eax, [edx + 8]; ret
0x00002cb2 : mov [ebp + 0xfffffffc], edi; mov edi, [ebp + 0x10]; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x30]
0x00043c71 : mov eax, ds:[ebx + 0x94]; lea edx, [ebp + 0xffffff98]; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x48]
0x0001f9df : add [eax], al; mov [esp + 0xc], 0; mov [esp + 4], ebx; mov [esp + 8], esi; mov [esp], edi; call [eax + 0x40]
0x0001cd0b : add [eax], al; mov edx, [ebp + 8]; mov [esp + 8], esi; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0000440e : dec [ebx + 0xd089f45d]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001174b : mov [esp + 4], ebx; mov [esp + 8], eax; mov eax, [ebp + 0xffffffc4]; mov [esp], eax; call [ebp + 0xffffffd8]
0x0000a2f4 : dec [ebx + 0x54890455]; and al, 8; mov edx, [ebp + 0xffffffec]; mov [esp], esi; mov [esp + 4], edx; call eax
0x000601b6 : add [ebx + 0x10824ac], cl; add [eax], al; mov [esi + 0x4c], eax; mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x0001159f : mov [esp], edx; mov [ebp + 0xffffffb0], edx; mov [esp + 4], ebx; mov [esp + 8], ecx; call [ebp + 0xffffffd8]
0x0002f6aa : popfd ; pushal ; and cl, [ebx]; or [ebx + 0xc683b45d], cl; or [ebx + 0x38b087d], cl; add eax, [edi]; call eax
0x0003e2ff : dec ebp; sbb [ebx + 0xfffedc85], cl; dec [ecx + 0x4c89243c]; and al, 8; mov [esp + 4], eax; call [ebp + 0x14]
0x0003758a : inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x00039404 : inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00060805 : adc [ebx + 0x4568b00], cl; mov [esp + 4], 1; mov [esp], 1; mov [esp + 8], eax; mov [esp + 0xc], edx; call ecx
0x000234ec : mov [esp + 0x1c], 1; mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 0xc], eax; mov [esp], edi; call esi
0x000352ce : inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd8]
0x0003c632 : dec [ecx + 0x8891]; add [ebx + 0x758bf45d], cl; clc ; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000236d4 : add [eax], al; add [eax], al; mov eax, [ebp + 0x10]; mov [eax], edx; mov eax, [ebp + 0xfffffff8]; leave ; ret
0x0004591a : inc esp; and al, 8; lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; mov eax, [esi]; mov [esp], eax; call ebx
0x000386dd : inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp + 4], ebx; mov [esp], esi; call [ebp + 0xffffffd4]
0x00060378 : mov [esp + 8], eax; mov eax, ebp; or eax, 2; mov [esp + 0xc], edx; mov [esp + 4], eax; mov [esp], 1; call ecx
0x0003296e : add [eax], al; add [eax], al; mov [esp + 8], esi; mov [esp + 4], edx; mov [esp], eax; call [ebp + 0xffffffe0]
0x0003e080 : inc ebp; sbb [ebx + 0xfffee495], cl; dec [ecx + 0x4489241c]; and al, 8; mov [esp + 4], edx; call [ebp + 0x14]
0x0005ce7c : add edx, [eax]; mov [ebp + 0xffffffd4], eax; mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call edx
0x0001d5e2 : add al, 0; add [eax], al; add [ecx + 0x50ff241c], cl; or [ecx + 0x168c4], al; add [ecx + 0x5d5e5bf0], cl; ret
0x00034bb1 : inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd0]
0x00020911 : sbb [ecx + 0x43891443], cl; adc [ecx + 0x89082454], cl; inc esp; and al, 4; mov [esp], ebx; call [ecx + 0x38]
0x00045919 : mov [esp + 8], eax; lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; mov eax, [esi]; mov [esp], eax; call ebx
0x0001fdf0 : mov ebx, [esp]; mov eax, [eax + 0x20]; mov esi, [esp + 4]; mov edi, [esp + 8]; mov esp, ebp; pop ebp; jmp eax
0x00035fde : inc esp; and al, 8; add [eax], al; add [eax], al; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffcc]
0x00029538 : add [ebx + 0x8b008b03], ecx; dec ebp; or [ecx + 0x4489cc55], cl; and al, 4; mov [esp], ecx; call [ebp + 0x10]
0x0003dda2 : add [eax], al; mov ebx, [esp + 0x14]; mov esi, [esp + 0x18]; mov edi, [esp + 0x1c]; mov esp, ebp; pop ebp; ret
0x00005305 : add [edi], ecx; test edi, [ebx + 0x89000052]; ror [ebx + 0x748b241c], 1; and al, 4; mov esp, ebp; pop ebp; ret
0x00036e60 : mov [esp + 0xc], eax; mov eax, [esi + 0xc]; mov [esp + 4], ebx; mov [esp], edx; mov [esp + 8], eax; call [esi]
0x0002953a : add ecx, [ebx + 0x84d8b00]; mov [ebp + 0xffffffcc], edx; mov [esp + 4], eax; mov [esp], ecx; call [ebp + 0x10]
0x00037487 : mov edx, [ebp + 0xffffffd0]; mov [esp + 0xc], esi; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x0001649b : dec [ecx + 0x4c89241c]; and al, 4; mov ecx, [ebp + 0xfffffb78]; mov [ebp + 0xfffffaa4], edx; call [ecx + 0x1c]
0x00034cee : mov eax, [edi + 0xc]; mov [esp], edx; mov [esp + 8], eax; mov eax, [ebp + 0xc]; mov [esp + 4], eax; call [edi]
0x0001e9cf : add [eax], al; mov [esp + 4], ebx; mov [esp + 8], esi; mov [esp + 0xc], ecx; mov [esp], edi; call [eax + 0x40]
0x00021336 : mov [esp + 0x10], 3; mov [esp + 0xc], 2; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x0003f2b0 : mov edx, [ebp + 0xffffef88]; mov edi, [ebp + 0xffffef00]; mov [esp + 8], ecx; mov [esp], ebx; call [edx + edi]
0x0005f2bc : lea esi, [esi]; mov [esi + 0x4c], 0; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; add esp, 0xc; ret
0x0001f94d : mov [esp + 0x10], 3; mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x00060860 : mov eax, 3; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; leave ; ret
0x0004fcc5 : add [eax], al; add [eax], al; mov eax, [eax + 0x244]; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x0003c4dd : add [ebx + 0x4708b18], cl; mov edi, [eax + 8]; mov ebp, [eax + 0xc]; mov eax, [esp + 8]; mov esp, ecx; jmp edx
0x0004666a : mov [esp + 4], eax; lea eax, [ebp + 0xffffffec]; mov [esp], eax; mov [ebp + 0xffffff4c], edx; call [ebp + 0xc]
0x00020b6d : add [eax], al; add [ebx + 0x558b0c45], cl; adc [ecx + 0x84c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00013b3e : mov eax, [edi + 0x18]; mov [esp], ebx; mov [esp + 4], edx; sub eax, edx; mov [esp + 8], eax; call [ecx + 0x1c]
0x0002028f : mov ecx, eax; mov eax, [ebx + 0x94]; mov [esp + 8], ecx; mov [esp + 4], edi; mov [esp], ebx; call [eax + 0x38]
0x0004666b : inc esp; and al, 4; lea eax, [ebp + 0xffffffec]; mov [esp], eax; mov [ebp + 0xffffff4c], edx; call [ebp + 0xc]
0x0003497d : mov [esp + 0xc], eax; mov eax, [esi + 0xc]; mov [esp + 4], ebx; mov [esp], ecx; mov [esp + 8], eax; call [esi]
0x000368e8 : mov eax, [ebx + 0xc]; mov [esp], edx; mov [esp + 8], eax; mov eax, [ebp + 0xc]; mov [esp + 4], eax; call [ebx]
0x0001ee4b : mov edx, [ebx + 0x94]; mov [esp + 4], edi; mov [esp], ebx; sub eax, edi; mov [esp + 8], eax; call [edx + 0x38]
0x0003e002 : dec [edi]; xchg [ecx + 0xebfffffe], ebx; sbb eax, [ecx + 0x15cc4]; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00035563 : add [eax], al; add [eax], al; mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp], ecx; call [ebp + 0xffffffcc]
0x0001182e : mov [esp + 8], eax; mov eax, [ebx]; mov [esp + 4], eax; mov eax, [edx]; mov [esp], eax; call [ebp + 0xffffffd8]
0x00023082 : add [eax], al; add [ecx + 0x4489243c], cl; and al, 8; lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; call ebx
0x00000822 : add [ebx + 0xa74fff8], al; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0003eecb : lea edx, [esi + edx]; mov [esp + 8], edx; mov edx, [ebp + 0xffffef8c]; mov [esp + 0xc], ecx; call [eax + edx*4]
0x0001d87b : mov [eax + 4], ecx; mov ecx, [eax + 8]; mov [eax], edx; mov [eax + 8], edx; mov [eax + 0x20], ecx; pop ebp; ret
0x000437a7 : add [ecx + 0x10e8240c], cl; and al, [eax]; add [ecx + 0xc4831843], cl; and [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x000146b7 : mov ecx, [ebp + 0xfffffb54]; mov [esp], ebx; mov [esp + 4], ecx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0001182f : inc esp; and al, 8; mov eax, [ebx]; mov [esp + 4], eax; mov eax, [edx]; mov [esp], eax; call [ebp + 0xffffffd8]
0x00060617 : add [eax], al; add [ebp + 0xbf], cl; add [ebx + 0x8b082454], cl; inc esp; and al, 4; mov [eax + 0x4c], edx; ret
0x0003e602 : xchg eax, esp; add [eax], al; add [ecx + 0x89042454], cl; pop esp; and al, 8; mov [esp], ecx; call [eax + 0x1c]
0x0003f327 : inc edi; sbb [ecx + 0x5489241c], cl; and al, 4; sub eax, edx; sar eax, 2; mov [esp + 8], eax; call [ecx + 0x1c]
0x000159c2 : mov [esp + 8], edi; mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; mov [ebp + 0xfffffaa0], ecx; call [eax + 0x1c]
0x00020186 : add [eax], al; mov ebx, [ebp + 0x10]; mov [esp + 4], ecx; mov [esp], esi; mov [esp + 8], ebx; call [eax + 0x20]
0x0001649c : mov [esp], ebx; mov [esp + 4], ecx; mov ecx, [ebp + 0xfffffb78]; mov [ebp + 0xfffffaa4], edx; call [ecx + 0x1c]
0x00017024 : mov ecx, [ebp + 0xfffffb64]; mov [esp], ebx; mov [esp + 4], ecx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0000ac61 : add ecx, [ecx + 0xa4f3fcd1]; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; mov esp, ebp; pop ebp; ret
0x0001e9aa : xchg eax, esp; add [eax], al; add [ebp + 0x894c2444], cl; inc esp; and al, 4; mov [esp], edi; call [edx + 0x48]
0x00020b8a : xchg eax, esp; add [eax], al; add [ebp + 0x89242444], cl; inc esp; and al, 4; mov [esp], ebx; call [edx + 0x48]
0x0000be16 : add esp, [ebx + 0x80ca590]; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000446a6 : mov [esi + 0x94], eax; mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], esi; call [eax + 0x40]
0x0001d8a7 : pop eax; and [ecx + 0x488b2848], cl; or [ecx + 0x58890450], cl; or [ecx + 0x20488910], cl; pop ebx; pop ebp; ret
0x00005f87 : add [ebx + 0xcb65415], cl; or [ebp + 0xc5850fd2], al; add al, 0; add [eax + 0x8b417501], ch; add ebp, [ecx]; ret
0x0002041c : sbb [ecx + 0xf45d8bf8], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0002dd4d : xor cl, [ecx + 0xf8758bd8]; mov ebx, [ebp + 0xfffffff4]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00060bc2 : sub dl, [eax + 0x26748d]; mov eax, [ebp + 0xc]; mov edx, [ebp + 8]; mov [esp], esi; mov [esp + 4], eax; call edx
0x000280c2 : inc ebx; adc [ecx + 0xe4e82404], cl; adc dh, bh; dec [ecx + 0xdce8241c]; adc dh, bh; inc [ebx + 0x5d5b04c4]; ret
0x00020181 : dec [ebx + 0x9486]; add [ebx + 0x4c89105d], cl; and al, 4; mov [esp], esi; mov [esp + 8], ebx; call [eax + 0x20]
0x00002611 : mov ebp, esp; push ebx; sub esp, 4; mov ebx, [ebp + 8]; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x10]
0x00022e51 : add [eax], al; add [eax], al; mov [esp + 8], 0; mov [esp + 4], eax; mov eax, [edi + 8]; mov [esp], eax; call esi
0x0001d7d2 : adc [eax], al; add [eax], al; mov edx, [ebp + 0xffffffb0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x000386d2 : add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ebx; mov [esp], esi; call [ebp + 0xffffffd4]
0x0001cfe2 : adc [eax], al; add [eax], al; mov edx, [ebp + 0xffffffe0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x00035fd3 : add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffcc]
0x00002d1f : add [ecx + 0xf8758bd8], cl; mov ebx, [ebp + 0xfffffff4]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00034ba6 : add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd0]
0x00060616 : add [eax], al; add [eax], al; lea edi, [edi]; mov edx, [esp + 8]; mov eax, [esp + 4]; mov [eax + 0x4c], edx; ret
0x00046858 : add [ebx + 0xc889f45d], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000236d3 : add es:[eax], al; add [eax], al; mov eax, [ebp + 0x10]; mov [eax], edx; mov eax, [ebp + 0xfffffff8]; leave ; ret
0x0003e5f0 : adc [ecx + 0xf45d8bf8], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0000296c : xor [ecx + 0x30738906], cl; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001f6a1 : add [ecx + 0xf45d8bf0], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00015a9f : xchg eax, esp; add [eax], al; add [ecx + 0x8908247c], cl; push esp; and al, 4; mov [esp], ebx; call [eax + 0x1c]
0x00030c0a : mov ecx, [eax]; mov [ebp + 0xffffffdc], eax; mov [eax], 0; mov [esp], edi; mov [ebp + 0xffffffe0], ecx; call esi
0x00002689 : adc [ebx + 0x5c890c4d], cl; and al, 8; mov [esp + 0xc], 0; mov [esp], eax; mov [esp + 4], ecx; call [edx + 0x24]
0x0001cd06 : dec [ebx + 0x9483]; add [ebx + 0x74890855], cl; and al, 8; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x00043415 : adc cl, [ecx + 0xf45d8bf0]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001d24e : xor ebx, ebx; mov esi, [ebp + 0xfffffffc]; mov eax, ebx; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x0000fc0d : inc [ebp + 0xd1850fc0]; add [eax], al; add [ebx + 0xfffe5085], cl; dec [ebp + 0x5e5bf465]; pop edi; pop ebp; ret
0x00020df0 : mov eax, [ebx + 0x94]; mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x40]
0x0003df14 : lea esi, [esi]; mov edx, [ebp + 0x18]; mov [esp + 4], edi; mov [esp], ebx; mov [esp + 8], edx; call [ebp + 0x14]
0x0005f2a8 : mov ecx, [ecx]; mov [esi + 0x4c], ecx; mov ebx, [esp]; mov esi, [esp + 4]; mov edi, [esp + 8]; add esp, 0xc; ret
0x00030f2d : mov [esp], eax; call ebx; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret 4
0x00001f6e : dec [ebx + 0x9483]; add [ebx + 0x7c890855], cl; and al, 8; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x000352c3 : add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd8]
0x00044c02 : mov [esi], 0; mov eax, ebx; mov esi, [ebp + 0xfffffffc]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x000096d8 : add [ecx + 0xf45d8bf8], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00044390 : add [eax], al; add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edi; call esi
0x000393f9 : add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00036835 : add [eax], al; add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], edx; mov [esp], ecx; call ebx
0x0001eedc : lea esi, [ebp + 0xffffffec]; mov [esp + 0x10], esi; mov edi, [ebp + 0xffffffd0]; mov [esp], edi; call [edi + 0xc]
0x0000a2f5 : mov edx, [ebp + 4]; mov [esp + 8], edx; mov edx, [ebp + 0xffffffec]; mov [esp], esi; mov [esp + 4], edx; call eax
0x00032350 : push ebp;  lea ecx, [ebp + 0xffffffe8]; mov edx, [edx + edi + 0x10]; mov [esp], ecx; mov [esp + 4], edx; call eax
0x00032cea : add [eax], al; mov [ebx], 0; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000098bf : mov edx, [ebp + 4]; mov [esp + 8], edx; mov edx, [ebp + 0xfffffff0]; mov [esp], ebx; mov [esp + 4], edx; call eax
0x00000d25 : sbb [eax], al; add [eax], al; rol ecx, 9; mov [edx + 0x14], ecx; mov [edx + 0xc], ebp; mov [edx + 0x18], eax; ret
0x000132a6 : mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; lea esp, [ecx + 0xfffffffc]; ret
0x00002d22 : mov esi, [ebp + 0xfffffff8]; mov ebx, [ebp + 0xfffffff4]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00001df4 : push ebx; dec eax; mov [edx + 8], esi; add [edx + 4], 1; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x30]
0x0001f94c : mov ds:[esp + 0x10], 3; mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x00022ed2 : mov [esp + 8], eax; lea eax, [ebp + 0xffffffc8]; mov [esp + 4], eax; mov eax, [edi + 8]; mov [esp], eax; call esi
0x00022ed3 : inc esp; and al, 8; lea eax, [ebp + 0xffffffc8]; mov [esp + 4], eax; mov eax, [edi + 8]; mov [esp], eax; call esi
0x00060854 : xchg eax, ebx; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; leave ; ret
0x00060863 : add [eax], al; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; leave ; ret
0x000013a0 : mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001f1b6 : lea ecx, [ebp + 0xffffffec]; mov [esp + 0x10], ecx; mov edx, [ebp + 0xffffffd0]; mov [esp], edx; call [edx + 0xc]
0x0001d2dc : add [eax], al; mov eax, ebx; mov esi, [ebp + 0xfffffffc]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x0003e9d4 : mov edx, [ebp + 0xffffefb8]; mov [esp], ebx; sar esi, 2; mov [esp + 8], esi; mov [esp + 4], edx; call [eax + 0x1c]
0x00060fed : movsb es:[edi], [esi]; add [eax], al; add [eax + 0x747a097e], al; or [ecx], esi; rol [ebx + 0x5e5b20c4], 0x5f; ret
0x00031fd7 : mov edi, [ebx + 4]; mov [ebx], eax; mov edx, [ebx + 0xc]; mov ecx, [ebx + 0x10]; mov eax, [ebx + 0x14]; call [ebx]
0x0001e9a6 : add [eax], al; mov edx, [edi + 0x94]; lea eax, [esp + 0x4c]; mov [esp + 4], eax; mov [esp], edi; call [edx + 0x48]
0x00020b86 : add [eax], al; mov edx, [ebx + 0x94]; lea eax, [esp + 0x24]; mov [esp + 4], eax; mov [esp], ebx; call [edx + 0x48]
0x0001e6c8 : mov [esp + 0xc], edx; mov edx, [ebx + 4]; mov [esp + 4], eax; mov [esp], esi; mov [esp + 8], edx; call [esi + 0xc]
0x0002307d : mov [esp + 0x10], 0; mov [esp], edi; mov [esp + 8], eax; lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; call ebx
0x00032cee : add [eax], al; add [eax], al; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00002ebc : add [eax], al; movzx ecx, [ebx]; mov [esp], edx; mov [ebp + 0xffffffec], edx; mov [esp + 4], ecx; call [eax + 0xc]
0x0001d30f : adc [ebx + 0xa493], cl; add [ebx + 0x432b1443], cl; adc [ecx + 0x8c48302], cl; xor eax, eax; pop ebx; pop ebp; ret
0x000116b7 : inc ebp; fmul [ecx + 0x4d89240c]; lodsb al, [esi]; mov [esp + 4], ebx; mov [esp + 8], eax; call [ebp + 0xffffffd8]
0x0004019f : mov [esp + 4], edi; mov [esp], ebx; sar edx, 2; mov [esp + 8], edx; mov [ebp + 0xffffeed4], edx; call [eax + 0x1c]
0x0002dc49 : add [ecx + 0x18c90], cl; add [ebx + 0x758bf45d], cl; clc ; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0003dee1 : inc ebp; sbb [ebx + 0xfffed895], cl; dec [ecx + 0x8904247c]; inc esp; and al, 8; mov [esp], edx; call [ebp + 0x14]
0x0003377e : add [ebx + 0xd089f45d], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret 8
0x0003e9d3 : dec [ebx + 0xffefb895]; dec [ecx + 0xfec1241c]; add cl, [ecx + 0x89082474]; push esp; and al, 4; call [eax + 0x1c]
0x0003dd9e : add bh, [eax + 2]; mov ebx, [esp + 0x14]; mov esi, [esp + 0x18]; mov edi, [esp + 0x1c]; mov esp, ebp; pop ebp; ret
0x00044c2e : mov [esi], eax; mov eax, ebx; mov esi, [ebp + 0xfffffffc]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x000601b0 : mov edi, [esp + 0x104]; mov ebp, [esp + 0x108]; mov [esi + 0x4c], eax; mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x00020ca8 : add [ebx + 0x438b1c53], cl; and [ecx], ch; ror [ecx + 0x89042454], 1; inc esp; and al, 8; mov [esp], ebx; call ecx
0x0003a33c : mov [ebx*4 + 0x80ca600], esi; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001e9a2 : lea esi, [esi]; mov edx, [edi + 0x94]; lea eax, [esp + 0x4c]; mov [esp + 4], eax; mov [esp], edi; call [edx + 0x48]
0x00009184 : add bl, ch; mov cs, [ebx + 0x54890455]; and al, 8; mov edx, [ebp + 8]; mov [esp], edi; mov [esp + 4], edx; call eax
0x00061be5 : mov [esp + 8], ecx; mov eax, [edi + esi*4 + 8]; mov [esp + 4], eax; mov eax, [esp + 0x2c]; mov [esp], eax; call edx
0x00045cb5 : add [eax], al; add [eax], al; mov [esp + 0x10], 0; mov [esp + 4], edx; mov [esp], ecx; mov [esp + 8], eax; call edi
0x000218dd : add [eax], al; add [ecx + 0x9482], cl; add [ebx + 0x658be045], cl; ror [ebp + 0x5e5bf465], 1; pop edi; pop ebp; ret
0x00003942 : mov [ebx + 0x64], eax; mov eax, [ebx + 0x94]; mov [esp + 8], 0; mov [esp + 4], 0; mov [esp], ebx; call [eax + 0x2c]
0x00037583 : add [eax], al; mov [esp + 0x14], esi; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x00020b81 : lea esi, [esi]; mov edx, [ebx + 0x94]; lea eax, [esp + 0x24]; mov [esp + 4], eax; mov [esp], ebx; call [edx + 0x48]
0x00000711 : mov edx, [ebp + 0x10]; mov ecx, [ebp + 0xc]; mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 8]
0x00044c01 : mov ds:[esi], 0; mov eax, ebx; mov esi, [ebp + 0xfffffffc]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x00061be6 : dec esp; and al, 8; mov eax, [edi + esi*4 + 8]; mov [esp + 4], eax; mov eax, [esp + 0x2c]; mov [esp], eax; call edx
0x0000268a : mov ecx, [ebp + 0xc]; mov [esp + 8], ebx; mov [esp + 0xc], 0; mov [esp], eax; mov [esp + 4], ecx; call [edx + 0x24]
0x000233a9 : inc esp; and al, 8; lea eax, [ebp + 0xffffffc0]; mov [esp + 0xc], ecx; mov [esp + 4], eax; mov [esp], edi; call esi
0x000233a8 : mov [esp + 8], eax; lea eax, [ebp + 0xffffffc0]; mov [esp + 0xc], ecx; mov [esp + 4], eax; mov [esp], edi; call esi
0x00035031 : dec ebp; ror [ecx + 0x890c245c], 1; inc esp; and al, 8; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x00020c5e : mov eax, [ebx + 0x94]; mov [esp + 4], esi; mov [esp + 8], edi; mov [esp + 0xc], 0; mov [esp], ebx; call [eax + 0x40]
0x000601b3 : add al, 1; add [eax], al; mov ebp, [esp + 0x108]; mov [esi + 0x4c], eax; mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x00044448 : lea eax, [ebp + 0xffffffec]; mov [esp + 8], eax; lea eax, [ebx + 0x54]; mov [esp + 4], eax; mov [esp], edi; call esi
0x000147aa : sub edx, ecx; mov [esp + 8], edx; mov [esp + 4], ecx; mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0003df40 : add esi, [ebp + 0xfffffee4]; mov ecx, [ebp + 0x18]; mov [esp + 4], esi; mov [esp], edi; mov [esp + 8], ecx; call ebx
0x0001cd07 : mov eax, [ebx + 0x94]; mov edx, [ebp + 8]; mov [esp + 8], esi; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0001ead5 : mov ecx, [esp + 0x48]; mov [esp + 0xc], 0; mov [esp], edi; mov [esp + 4], edx; mov [esp + 8], ecx; call [eax + 0x40]
0x00039258 : add [eax], al; mov [esp + 0xc], esi; mov [esp + 8], edx; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x0001f9db : mov eax, [edi + 0x94]; mov [esp + 0xc], 0; mov [esp + 4], ebx; mov [esp + 8], esi; mov [esp], edi; call [eax + 0x40]
0x0000296e : push es; mov [ebx + 0x30], esi; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00001f6f : mov eax, [ebx + 0x94]; mov edx, [ebp + 8]; mov [esp + 8], edi; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x000442e8 : lea eax, [ebp + 0xffffffec]; mov [esp + 8], eax; lea eax, [ebx + 0x28]; mov [esp + 4], eax; mov [esp], edi; call esi
0x00020b45 : mov ecx, [ebx + 0x94]; mov [esp + 0xc], 0; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call [ecx + 0x40]
0x0001e8e6 : mov ecx, [edi + 0x94]; mov [esp + 0xc], 0; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], edi; call [ecx + 0x40]
0x0004fcc0 : mov edx, [ebx + 0xc]; mov [edx], 0; mov eax, [eax + 0x244]; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x0004fc56 : add [eax], al; mov edx, [ebx + 0xc]; mov eax, [eax + 0x18]; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x0004450d : mov [esp + 0xc], eax; lea eax, [ebp + 0xfffffff0]; mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edx; call edi
0x0003901b : mov ecx, [ebp + 0xffffffd8]; mov [esp + 4], ecx; mov ebx, [ebp + 0xffffffdc]; mov [esp], ebx; call [ebp + 0xffffffe4]
0x00015455 : add [eax], al; mov [esp + 8], edi; mov edx, [ebp + 0xfffffb4c]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0004fc52 : lea esi, [esi]; mov edx, [ebx + 0xc]; mov eax, [eax + 0x18]; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x0005f3da : add [eax], al; add [ecx + 0x96ebd13c], cl; lea esi, [esi]; mov edx, [ebx + ecx*4 + 0xffffa45c]; add edx, ebx; jmp edx
0x0001d800 : add [eax], al; mov [esp + 8], ebx; mov edx, [ebp + 0xffffffb0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x00038e80 : mov ebx, [ebp + 0xffffffd8]; mov [esp + 4], ebx; mov eax, [ebp + 0xffffffdc]; mov [esp], eax; call [ebp + 0xffffffe4]
0x0005e7f5 : add [eax], al; add [ebx + 0xc4835442], cl; or [ebx + 0xffffffc3], bl; mov eax, [edx + 0x58]; add esp, 8; pop ebx; ret
0x000131e7 : add [eax], al; mov [esp + 8], esi; mov edx, [ebp + 0xfffffb7c]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0000be19 : movsd es:[edi], [esi]; or al, 8; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0003e126 : add [eax], al; add esi, [ebp + 0xfffffee4]; mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call [ebp + 0x14]
0x00022e4b : add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov eax, [edi + 8]; mov [esp], eax; call esi
0x00016558 : add [eax], al; mov [esp + 8], edi; mov edx, [ebp + 0xfffffb64]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x00035562 : adc [eax], al; add [eax], al; add [ecx + 0x890c245c], cl; inc esp; and al, 8; mov [esp], ecx; call [ebp + 0xffffffcc]
0x00012cbb : add [eax], al; mov [esp + 8], edx; mov [ebp + 0xffffdf34], edx; mov [esp + 4], eax; mov [esp], ebx; call [ecx + 0x1c]
0x0001d874 : sub [ecx + 0x508b2850], cl; and [ecx + 0x488b0448], cl; or [ecx + 0x8508910], cl; mov [eax + 0x20], ecx; pop ebp; ret
0x00045af8 : add [eax], al; add [eax], al; mov [esp + 0x10], 0; mov [esp + 0xc], ebx; mov [esp + 8], edx; mov [esp], eax; call edi
0x000231e0 : add [eax], eax; add [eax], al; mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edi; call ebx
0x00001df3 : mov edx, [ebx + 0x48]; mov [edx + 8], esi; add [edx + 4], 1; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x30]
0x00012b5c : add [eax], al; mov [esp], ecx; mov [esp + 8], esi; mov [esp + 4], eax; mov [ebp + 0xfffffff0], edx; call [edi + 0x1c]
0x0004351b : add [eax], al; mov [esp + 8], edx; mov [ebp + 0xffff7e78], edx; mov [esp + 4], ecx; mov [esp], ebx; call [eax + 0x1c]
0x0001d010 : add [eax], al; mov [esp + 8], ebx; mov edx, [ebp + 0xffffffe0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x000602f9 : sbb al, [eax]; add [eax], al; mov [esp], 1; mov [esp + 8], esi; mov [esp + 0xc], edi; mov [esp + 0x28], eax; call ecx
0x00020910 : inc ebx; sbb [ecx + 0x43891443], cl; adc [ecx + 0x89082454], cl; inc esp; and al, 4; mov [esp], ebx; call [ecx + 0x38]
0x00036e5f : pop es; mov [esp + 0xc], eax; mov eax, [esi + 0xc]; mov [esp + 4], ebx; mov [esp], edx; mov [esp + 8], eax; call [esi]
0x000146b8 : lea edx, [ebx + edi*8 + 0xffffffff]; dec [ecx + 0x4c89241c]; and al, 4; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00017025 : lea esp, [ebx + edi*8 + 0xffffffff]; dec [ecx + 0x4c89241c]; and al, 4; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0003296d : adc [eax], al; add [eax], al; add [ecx + 0x89082474], cl; push esp; and al, 4; mov [esp], eax; call [ebp + 0xffffffe0]
0x0004debb : dec [ecx + 0xfffe709d]; dec [ebx + 0xfffe6895]; dec [ecx + 0xfffe60b5]; dec [ebx + 0xfffe549d]; jmp [ebp + 0xffffff89]
0x000386cc : mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ebx; mov [esp], esi; call [ebp + 0xffffffd4]
0x0003a33b : dec [ecx + 0xa6009d34]; or al, 8; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000299a3 : mov eax, [ebx]; mov [ebp + 0xffffffd8], edx; mov [esp + 4], eax; mov eax, [ebp + 8]; mov [esp], eax; call [ebp + 0x10]
0x00060806 : mov eax, [eax]; mov edx, [esi + 4]; mov [esp + 4], 1; mov [esp], 1; mov [esp + 8], eax; mov [esp + 0xc], edx; call ecx
0x00034848 : push ebp; int3 ; mov [esp + 0xc], ebx; mov [esp + 8], ecx; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd0]
0x00020bb6 : mov ecx, [ebp + 0x10]; mov edx, [ebp + 0xc]; mov [esp], ebx; mov [esp + 8], ecx; mov [esp + 4], edx; call [eax + 0x40]
0x00013702 : mov [esp + 0xc], ecx; mov [esp + 8], edx; mov edx, [ebp + 0xfffffb50]; mov ecx, [ebp + 0xfffffb44]; call [ecx + edx*4]
0x0004f0dc : dec [ecx + 0xfffe7095]; dec [ebx + 0xfffe0495]; dec [ecx + 0xfffe608d]; dec [ebx + 0xfffe68b5]; jmp [ebp + 0xffffff8b]
0x000352bd : mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd8]
0x000006ca : mov ecx, [ebp + 0x10]; mov [esp + 8], eax; mov eax, [ebp + 0xc]; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0x14]
0x0004450a : add [eax], al; add [ecx + 0x8d0c2444], cl; inc ebp;  mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edx; call edi
0x000619ca : mov eax, [ecx + edi*4 + 8]; mov [esp + 0x1c], ecx; mov [esp + 4], eax; mov eax, [esp + 0x28]; mov [esp], eax; call edx
0x0004438a : add [eax], al; mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edi; call esi
0x000393f3 : mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00034ba0 : mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd0]
0x0001e9cb : mov eax, [edi + 0x94]; mov [esp + 4], ebx; mov [esp + 8], esi; mov [esp + 0xc], ecx; mov [esp], edi; call [eax + 0x40]
0x0003e121 : lea esi, [esi]; add esi, [ebp + 0xfffffee4]; mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call [ebp + 0x14]
0x0003497c : pop es; mov [esp + 0xc], eax; mov eax, [esi + 0xc]; mov [esp + 4], ebx; mov [esp], ecx; mov [esp + 8], eax; call [esi]
0x0001faf7 : mov edx, [ebp + 0xc]; mov ecx, [ebp + 0x10]; mov [esp], ebx; mov [esp + 4], edx; mov [esp + 8], ecx; call [eax + 0x40]
0x0002953b : mov eax, [eax]; mov ecx, [ebp + 8]; mov [ebp + 0xffffffcc], edx; mov [esp + 4], eax; mov [esp], ecx; call [ebp + 0x10]
0x00035fcd : mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffcc]
0x00050055 : lea edx, [ebp + 0xffffffc4]; mov [esp + 4], edx; mov eax, [ebp + 0xffffffbc]; mov eax, [eax]; mov [esp], eax; call edi
0x00020182 : mov eax, [esi + 0x94]; mov ebx, [ebp + 0x10]; mov [esp + 4], ecx; mov [esp], esi; mov [esp + 8], ebx; call [eax + 0x20]
0x000234f0 : add [eax], eax; add [eax], al; mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 0xc], eax; mov [esp], edi; call esi
0x00002508 : mov [eax + 8], ecx; mov ecx, [eax + 0xc]; mov [eax + 4], edx; mov [eax + 0xc], edx; mov [eax + 0x24], ecx; pop ebp; ret
0x0003c4de : mov ebx, [eax]; mov esi, [eax + 4]; mov edi, [eax + 8]; mov ebp, [eax + 0xc]; mov eax, [esp + 8]; mov esp, ecx; jmp edx
0x00000d1f : mov ecx, [esp]; xor ecx, gs:[0x18]; rol ecx, 9; mov [edx + 0x14], ecx; mov [edx + 0xc], ebp; mov [edx + 0x18], eax; ret
0x00000df5 : add ecx, [ebx + 0x74890c50]; and al, 4; mov eax, [eax + 0x10]; ror edx, 9; xor edx, gs:[0x18]; mov [esp], eax; call edx
0x00038e09 : adc [ebx + 0x18b104d], cl; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [ebx + 0xc]; mov [esp], eax; call [ebx + 4]
0x0004613c : xchg eax, ecx; mov eax, [ebp + 0xffffffec]; mov [ecx], edx; mov [esp], ecx; mov [esp + 4], eax; call [ebp + 0xfffffff0]
0x00020912 : mov [ebx + 0x14], eax; mov [ebx + 0x10], eax; mov [esp + 8], edx; mov [esp + 4], eax; mov [esp], ebx; call [ecx + 0x38]
0x0002133a : add eax, [eax]; add [eax], al; mov [esp + 0xc], 2; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x0001f951 : add eax, [eax]; add [eax], al; mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x0006144e : sbb [edi + 2], dh; sbb eax, eax; mov esi, [esp + 0x20]; mov edi, [esp + 0x24]; mov ebp, [esp + 0x28]; add esp, 0x2c; ret
0x0003757d : mov [esp + 0xc], 0; mov [esp + 0x14], esi; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x0001e9a5 : add [eax], al; add [ebx + 0x9497], cl; add [ebp + 0x894c2444], cl; inc esp; and al, 4; mov [esp], edi; call [edx + 0x48]
0x00020b85 : add [eax], al; add [ebx + 0x9493], cl; add [ebp + 0x89242444], cl; inc esp; and al, 4; mov [esp], ebx; call [edx + 0x48]
0x00012b5b : add [eax], al; add [ecx + 0x7489240c], cl; and al, 8; mov [esp + 4], eax; mov [ebp + 0xfffffff0], edx; call [edi + 0x1c]
0x000608f2 : mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov ebp, [ebp]; mov esp, ecx; ret
0x0001fc03 : xchg eax, esp; mov [ebp + 0xfffffffc], edi; mov eax, [eax + 0x94]; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x48]
0x00000df6 : mov edx, [eax + 0xc]; mov [esp + 4], esi; mov eax, [eax + 0x10]; ror edx, 9; xor edx, gs:[0x18]; mov [esp], eax; call edx
0x0002999e : sbb [ebp + 0x8b5574db], al; add ecx, [ecx + 0x4489d855]; and al, 4; mov eax, [ebp + 8]; mov [esp], eax; call [ebp + 0x10]
0x0005ce78 : sbb [ebx + 0x10030452], cl; mov [ebp + 0xffffffd4], eax; mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call edx
0x0001d247 : inc [ebp + 0x75c389c0]; adc dh, [ecx]; fisttp [ebx + 0xd889fc75]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x0001d2da : movsb es:[edi], [esi]; add [eax], al; add [ecx + 0xfc758bd8], cl; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x000397c8 : inc esp; and al, 8; mov ebx, [ebp + 0xc]; mov [esp + 4], ebx; mov esi, [ebp + 8]; mov [esp], esi; call [ebp + 0xffffffdc]
0x000397c7 : mov [esp + 8], eax; mov ebx, [ebp + 0xc]; mov [esp + 4], ebx; mov esi, [ebp + 8]; mov [esp], esi; call [ebp + 0xffffffdc]
0x0001d2d8 : mov [ebx + 0xa4], eax; mov eax, ebx; mov esi, [ebp + 0xfffffffc]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x0001f5c5 : add [ecx + 0x1ff8c1f0], cl; mov [esp + 0xc], 1; mov [esp + 4], esi; mov [esp + 8], eax; mov [esp], ebx; call [edx + 0x40]
0x0000296b : inc ebx; xor [ecx + 0x30738906], cl; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00020f0d : add [ecx + 0x1ff9c1c1], cl; mov [esp + 0xc], 1; mov [esp + 4], eax; mov [esp + 8], ecx; mov [esp], ebx; call [edx + 0x40]
0x0002041b : inc ebx; sbb [ecx + 0xf45d8bf8], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000042e6 : pop ds; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00000dce : mov edx, [eax + 0xc]; mov eax, [eax + 0x10]; ror edx, 9; xor edx, gs:[0x18]; mov [esp], esi; mov [esp + 4], eax; call edx
0x0001f03d : mov edx, [ebx + 4]; mov [esp + 4], eax; mov [esp + 8], edx; mov ecx, [ebp + 0xffffffd0]; mov [esp], ecx; call [ecx + 0xc]
0x00020184 : xchg eax, esp; add [eax], al; add [ebx + 0x4c89105d], cl; and al, 4; mov [esp], esi; mov [esp + 8], ebx; call [eax + 0x20]
0x00053e8d : mov [ecx + 0xffff3885], cl; dec [ebx + 0xffff4085]; dec [ecx + 0xffff3495]; dec [ebx + 0xffff4495]; jmp [esi + 0xffffff90]
0x0001cd09 : xchg eax, esp; add [eax], al; add [ebx + 0x74890855], cl; and al, 8; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x000114c8 : mov eax, [ebp + 8]; shr ebx, 1; imul edi, ebx; add edi, [ebp + 0xc]; mov [esp], eax; mov [esp + 4], edi; call [ebp + 0x18]
0x0003e5ef : push eax; adc [ecx + 0xf45d8bf8], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00020447 : mov [ebp + 0xffffffec], ecx; mov [esp + 0xc], 1; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call [edi + 0x40]
0x0004fc5f : add cl, [ebx + 0xc3c9fc5d]; lea esi, [esi]; mov edx, [ebx + 0xc]; mov [edx], eax; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x0002545b : add eax, [eax]; add [ebx + 0xcbe9815], cl; or [ebp + 0xe0840fd2], al; add [eax], al; add [ecx], dh; jmp [esi + 0xffffff90]
0x0001e9cc : xchg [eax + eax + 0x5c890000], edx; and al, 4; mov [esp + 8], esi; mov [esp + 0xc], ecx; mov [esp], edi; call [eax + 0x40]
0x0003f326 : mov eax, [edi + 0x18]; mov [esp], ebx; mov [esp + 4], edx; sub eax, edx; sar eax, 2; mov [esp + 8], eax; call [ecx + 0x1c]
0x0006084f : inc [ebx + 0x937505f8]; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; leave ; ret
0x0003eec8 : add al, [ecx]; ror [ebp + 0x54891614], 1; and al, 8; mov edx, [ebp + 0xffffef8c]; mov [esp + 0xc], ecx; call [eax + edx*4]
0x00039252 : mov [esp + 0x10], 0; mov [esp + 0xc], esi; mov [esp + 8], edx; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00019030 : mov [esp + 8], edx; mov [esp + 4], eax; mov edi, [ebp + 0xffffff94]; mov [esp], edi; mov [ebp + 0xffffff38], edx; call ecx
0x00001f71 : xchg eax, esp; add [eax], al; add [ebx + 0x7c890855], cl; and al, 8; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x00002eb8 : mov eax, [edx + 0x94]; movzx ecx, [ebx]; mov [esp], edx; mov [ebp + 0xffffffec], edx; mov [esp + 4], ecx; call [eax + 0xc]
0x00008f82 : mov [esp + 8], edx; mov edx, [ebp + 0xffffffec]; mov [esp + 4], edx; mov edx, [ebp + 0xfffffff0]; mov [esp], edx; call eax
0x000396d8 : mov [esp + 0xc], esi; mov ecx, [ebp + 0xc]; mov [esp + 4], ecx; mov esi, [ebp + 8]; mov [esp], esi; call [ebp + 0xffffffdc]
0x0002940f : call edi; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00001df0 : add [eax], al; add [ebx + 0x72894853], cl; or [ebx + 0x8b010442], al; adc [eax + eax + 0x1c890000], 0x24; call [eax + 0x30]
0x00008f83 : push esp; and al, 8; mov edx, [ebp + 0xffffffec]; mov [esp + 4], edx; mov edx, [ebp + 0xfffffff0]; mov [esp], edx; call eax
0x00022e45 : mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov eax, [edi + 8]; mov [esp], eax; call esi
0x00032966 : mov [esp + 0x14], edi; mov [esp + 0x10], 0; mov [esp + 8], esi; mov [esp + 4], edx; mov [esp], eax; call [ebp + 0xffffffe0]
0x00039257 : add [eax], al; add [ecx + 0x890c2474], cl; push esp; and al, 8; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00019031 : push esp; and al, 8; mov [esp + 4], eax; mov edi, [ebp + 0xffffff94]; mov [esp], edi; mov [ebp + 0xffffff38], edx; call ecx
0x0001ce91 : push esi; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00005f85 : add al, 0; add [ebx + 0xcb65415], cl; or [ebp + 0xc5850fd2], al; add al, 0; add [eax + 0x8b417501], ch; add ebp, [ecx]; ret
0x0000d14a : inc [ebp + 0x79c689c0]; xor al, [ebx + 0x748dffc8]; add es:[ecx + 0x1d4c4], al; add [ebx + 0x5e], bl; pop edi; pop ebp; ret
0x00023081 : add [eax], al; add [eax], al; mov [esp], edi; mov [esp + 8], eax; lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; call ebx
0x0003dec2 : mov [esp + 8], edx; mov [esp + 4], ecx; shr eax, 1; imul eax, [ebp + 0x10]; add edi, eax; mov [esp], edi; call [ebp + 0x14]
0x000329f2 : mov [esp + 4], eax; mov eax, [ebx + 4]; mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp], eax; call edi
0x0001e9a1 : dec [ebp + 0xb6]; add [ebx + 0x9497], cl; add [ebp + 0x894c2444], cl; inc esp; and al, 4; mov [esp], edi; call [edx + 0x48]
0x0000296d : mov [esi], eax; mov [ebx + 0x30], esi; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000605df : add [ebx + 0x89182454], cl; adc [ebx + 0xc35b08c4], al; nop ; lea esi, [esi]; mov eax, [esp + 4]; mov eax, [eax + 0x4c]; ret
0x000515fa : lea eax, [eax + ebx*4 + 0xfffffffc]; mov [ebp + 0xffffffcc], edi; mov edi, esi; mov esi, ebx; mov ebx, eax; nop ; call [ebx]
0x00044384 : mov [esp + 0x18], 1; mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edi; call esi
0x00020ca9 : mov edx, [ebx + 0x1c]; mov eax, [ebx + 0x20]; sub eax, edx; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call ecx
0x000601b4 : add [eax], eax; add [ebx + 0x10824ac], cl; add [eax], al; mov [esi + 0x4c], eax; mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x0002028d : sub eax, edx; mov ecx, eax; mov eax, [ebx + 0x94]; mov [esp + 8], ecx; mov [esp + 4], edi; mov [esp], ebx; call [eax + 0x38]
0x0001d00c : mov eax, [edi + 0x94]; mov [esp + 8], ebx; mov edx, [ebp + 0xffffffe0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x0003e2fe : mov ecx, [ebp + 0x18]; mov eax, [ebp + 0xfffffedc]; mov [esp], edi; mov [esp + 8], ecx; mov [esp + 4], eax; call [ebp + 0x14]
0x00016554 : mov eax, [ebx + 0x94]; mov [esp + 8], edi; mov edx, [ebp + 0xfffffb64]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0001ead4 : inc esp; mov ecx, [esp + 0x48]; mov [esp + 0xc], 0; mov [esp], edi; mov [esp + 4], edx; mov [esp + 8], ecx; call [eax + 0x40]
0x00044c2a : add [ebx + 0x68901c0], al; mov eax, ebx; mov esi, [ebp + 0xfffffffc]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x0003dee0 : mov eax, [ebp + 0x18]; mov edx, [ebp + 0xfffffed8]; mov [esp + 4], edi; mov [esp + 8], eax; mov [esp], edx; call [ebp + 0x14]
0x00012cb7 : mov ecx, [ebx + 0x94]; mov [esp + 8], edx; mov [ebp + 0xffffdf34], edx; mov [esp + 4], eax; mov [esp], ebx; call [ecx + 0x1c]
0x00021334 : add [eax], al; mov [esp + 0x10], 3; mov [esp + 0xc], 2; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x0003c4db : add [eax], al; add [ebx + 0x4708b18], cl; mov edi, [eax + 8]; mov ebp, [eax + 0xc]; mov eax, [esp + 8]; mov esp, ecx; jmp edx
0x00015451 : mov eax, [ebx + 0x94]; mov [esp + 8], edi; mov edx, [ebp + 0xfffffb4c]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0003555b : mov [esp + 0x14], edi; mov [esp + 0x10], 0; mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp], ecx; call [ebp + 0xffffffcc]
0x0001d7fc : mov eax, [edi + 0x94]; mov [esp + 8], ebx; mov edx, [ebp + 0xffffffb0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x000040c2 : mov eax, 1; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0003eec9 : add ecx, edx; lea edx, [esi + edx]; mov [esp + 8], edx; mov edx, [ebp + 0xffffef8c]; mov [esp + 0xc], ecx; call [eax + edx*4]
0x0003e07f : mov eax, [ebp + 0x18]; mov edx, [ebp + 0xfffffee4]; mov [esp], ebx; mov [esp + 8], eax; mov [esp + 4], edx; call [ebp + 0x14]
0x00012b58 : mov edi, [ecx + 0x94]; mov [esp], ecx; mov [esp + 8], esi; mov [esp + 4], eax; mov [ebp + 0xfffffff0], edx; call [edi + 0x1c]
0x000131e3 : mov eax, [ebx + 0x94]; mov [esp + 8], esi; mov edx, [ebp + 0xfffffb7c]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x00043517 : mov eax, [ebx + 0x94]; mov [esp + 8], edx; mov [ebp + 0xffff7e78], edx; mov [esp + 4], ecx; mov [esp], ebx; call [eax + 0x1c]
0x00046101 : inc [ecx]; fisttp [ebx + 0x3a89ec45]; mov [ebp + 0xffffffe8], edx; mov [esp], edx; mov [esp + 4], eax; call [ebp + 0xfffffff0]
0x0001f94b : mov edi, [esi]; mov [esp + 0x10], 3; mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x00030c93 : mov edx, [ebp + 0xffffff44]; lea eax, [ebp + 0xffffff4c]; mov [edx], eax; mov eax, [ebp + 0xc]; mov [esp], eax; call [ebp + 8]
0x0003497b : mov eax, [edi]; mov [esp + 0xc], eax; mov eax, [esi + 0xc]; mov [esp + 4], ebx; mov [esp], ecx; mov [esp + 8], eax; call [esi]
0x00036e5e : mov eax, [edi]; mov [esp + 0xc], eax; mov eax, [esi + 0xc]; mov [esp + 4], ebx; mov [esp], edx; mov [esp + 8], eax; call [esi]
0x00023080 : adc [eax], al; add [eax], al; add [ecx + 0x4489243c], cl; and al, 8; lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; call ebx
0x0005e6a4 : mov ebx, [esp + 0x2c]; mov esi, [esp + 0x30]; mov edi, [esp + 0x34]; mov [ecx], edx; mov ebp, [esp + 0x38]; add esp, 0x3c; ret
0x0001f907 : sbb [ecx], dh; fisttp [ecx + 0xf8758bd8]; mov ebx, [ebp + 0xfffffff4]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00060cdc : mov edx, [esp + 0x1c]; mov [esp + 8], eax; mov eax, [edi]; mov [esp + 4], eax; mov eax, [esp + 0x18]; mov [esp], eax; call edx
0x0004fc3d : add [ecx], dh; rol [ebp + 0x90850fc9], cl; add [eax], al; add [ebx + 0x10890c43], cl; mov ebx, [ebp + 0xfffffffc]; leave ; ret
0x00062944 : mov ebx, [esp + 0x1c]; mov esi, [esp + 0x20]; mov edi, [esp + 0x24]; mov [ecx], edx; mov ebp, [esp + 0x28]; add esp, 0x2c; ret
0x0003682d : mov [esp + 0x14], eax; mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], edx; mov [esp], ecx; call ebx
0x0000b34c : add [ebp + 0x267890c0], al; mov eax, ebx; mov esi, [ebp + 0xfffffffc]; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x0001d873 : dec eax; sub [ecx + 0x508b2850], cl; and [ecx + 0x488b0448], cl; or [ecx + 0x8508910], cl; mov [eax + 0x20], ecx; pop ebp; ret
0x000437a5 : add [eax], al; add [ecx + 0x10e8240c], cl; and al, [eax]; add [ecx + 0xc4831843], cl; and [ecx + 0x5f5e5bf0], cl; pop ebp; ret
0x00027ba5 : adc dh, [ecx]; fisttp [ecx + 0xf8758bd8]; mov ebx, [ebp + 0xfffffff4]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00060d1f : mov [esp + 8], eax; mov eax, [ebp]; mov [esp + 0x14], ecx; mov [esp + 4], eax; mov eax, [esp + 0x18]; mov [esp], eax; call edx
0x0005e173 : mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; sub esp, 8; mov esp, ebp; pop ebp; ret 4
0x00044528 : mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; sub eax, ebx; mov ebx, [ebp + 0xfffffff4]; mov esp, ebp; pop ebp; ret
0x000393f7 : add [eax], al; add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x0001d0ab : mov ebx, [ebp + 0xfffffff4]; mov [ebp + 0xc], edx; mov [ebp + 0x10], ecx; mov eax, [eax + 0x24]; mov esp, ebp; pop ebp; jmp eax
0x00002d20 : mov eax, ebx; mov esi, [ebp + 0xfffffff8]; mov ebx, [ebp + 0xfffffff4]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00035fd1 : add [eax], al; add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffcc]
0x000096d9 : mov eax, edi; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0000139e : xor eax, eax; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000096d6 : add [eax], al; add [ecx + 0xf45d8bf8], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00013701 : push ss; mov [esp + 0xc], ecx; mov [esp + 8], edx; mov edx, [ebp + 0xfffffb50]; mov ecx, [ebp + 0xfffffb44]; call [ecx + edx*4]
0x000352c1 : add [eax], al; add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd8]
0x000386d0 : add [eax], al; add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ebx; mov [esp], esi; call [ebp + 0xffffffd4]
0x0001f69f : add [eax], al; add [ecx + 0xf45d8bf0], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00034ba4 : add [eax], al; add [eax], al; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd0]
0x0000c27f : mov ebx, [ebp + 0xfffffff4]; mov eax, ecx; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000446a4 : add [eax], al; mov [esi + 0x94], eax; mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], esi; call [eax + 0x40]
0x0000440f : mov ebx, [ebp + 0xfffffff4]; mov eax, edx; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00002d1d : add [eax], al; add [ecx + 0xf8758bd8], cl; mov ebx, [ebp + 0xfffffff4]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00001f53 : mov eax, esi; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000200fc : sub eax, ecx; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001fa9f : mov edx, esi; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00046856 : add [eax], al; add [ebx + 0xc889f45d], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000605de : add es:[ebx + 0x89182454], cl; adc [ebx + 0xc35b08c4], al; nop ; lea esi, [esi]; mov eax, [esp + 4]; mov eax, [eax + 0x4c]; ret
0x0001d1c3 : mov edx, edi; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00029b96 : add [eax], eax; add [ecx + 0xf45d8bf8], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00037780 : adc [ecx + 0x8b0c244c], cl; add cl, [ecx + 0x89042474]; inc esp; and al, 8; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x0003fea4 : sub edx, ecx; sar edx, 2; mov [esp + 8], edx; mov [ebp + 0xffffeed4], edx; mov [esp + 4], ecx; mov [esp], ebx; call [eax + 0x1c]
0x00045af0 : mov [esp + 4], ecx; mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 0xc], ebx; mov [esp + 8], edx; mov [esp], eax; call edi
0x000299a2 : push ebp; mov eax, [ebx]; mov [ebp + 0xffffffd8], edx; mov [esp + 4], eax; mov eax, [ebp + 8]; mov [esp], eax; call [ebp + 0x10]
0x000098be : xchg eax, edx; mov edx, [ebp + 4]; mov [esp + 8], edx; mov edx, [ebp + 0xfffffff0]; mov [esp], ebx; mov [esp + 4], edx; call eax
0x00012cb8 : mov edx, [eax + eax + 0x54890000]; and al, 8; mov [ebp + 0xffffdf34], edx; mov [esp + 4], eax; mov [esp], ebx; call [ecx + 0x1c]
0x00003104 : movzx eax, cl; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00021011 : movzx eax, dl; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000027db : add [eax], al; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0005f3d8 : add al, 1; add [eax], al; add [ecx + 0x96ebd13c], cl; lea esi, [esi]; mov edx, [ebx + ecx*4 + 0xffffa45c]; add edx, ebx; jmp edx
0x000601ae : add [eax], al; mov edi, [esp + 0x104]; mov ebp, [esp + 0x108]; mov [esi + 0x4c], eax; mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x0004019d : add [eax], al; mov [esp + 4], edi; mov [esp], ebx; sar edx, 2; mov [esp + 8], edx; mov [ebp + 0xffffeed4], edx; call [eax + 0x1c]
0x0001e9a4 : add [eax], al; add [eax], al; mov edx, [edi + 0x94]; lea eax, [esp + 0x4c]; mov [esp + 4], eax; mov [esp], edi; call [edx + 0x48]
0x00003940 : sub eax, edx; mov [ebx + 0x64], eax; mov eax, [ebx + 0x94]; mov [esp + 8], 0; mov [esp + 4], 0; mov [esp], ebx; call [eax + 0x2c]
0x0003377f : mov ebx, [ebp + 0xfffffff4]; mov eax, edx; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret 8
0x00046666 : sbb cl, [ecx + 0x4489ec75]; and al, 4; lea eax, [ebp + 0xffffffec]; mov [esp], eax; mov [ebp + 0xffffff4c], edx; call [ebp + 0xc]
0x000231d8 : mov [esp + 0xc], ecx; mov [esp + 0x1c], 1; mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edi; call ebx
0x0001d9b6 : push [ebx + eax + 0xffffff83]; and ebp, edi; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00038978 : adc [ecx + 0x8b0c2454], cl; add [ecx + 0x89042474], ecx; inc esp; and al, 8; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x0005ce79 : mov edx, [edx + 4]; add edx, [eax]; mov [ebp + 0xffffffd4], eax; mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call edx
0x0001f94a : mov edi, gs:[esi]; mov [esp + 0x10], 3; mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x00012b57 : add [ebx + 0x94b9], cl; add [ecx + 0x7489240c], cl; and al, 8; mov [esp + 4], eax; mov [ebp + 0xfffffff0], edx; call [edi + 0x1c]
0x00060861 : add eax, [eax]; add [eax], al; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; leave ; ret
0x000234e8 : mov [esp + 4], ecx; mov [esp + 0x1c], 1; mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 0xc], eax; mov [esp], edi; call esi
0x0005cec9 : push ebp; fmul [ebx + 0x5489e045]; and al, 8; mov edx, [ebp + 0xffffffe4]; mov [esp + 4], eax; mov [esp], edx; call [edi + ebx*4]
0x00034fc0 : adc [ecx + 0x8b0c2454], cl; add [ecx + 0x8904247c], ecx; inc esp; and al, 8; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x000391e8 : adc [ecx + 0x8b0c244c], cl; push es; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [ebx + 0xc]; mov [esp], eax; call [ebx + 4]
0x0001d7fd : xchg [eax + eax + 0x5c890000], edx; and al, 8; mov edx, [ebp + 0xffffffb0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x000362b0 : adc [ecx + 0x8b0c2454], cl; add ecx, [ecx + 0x8904247c]; inc esp; and al, 8; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x00020b84 : add [eax], al; add [eax], al; mov edx, [ebx + 0x94]; lea eax, [esp + 0x24]; mov [esp + 4], eax; mov [esp], ebx; call [edx + 0x48]
0x0001d00d : xchg [eax + eax + 0x5c890000], edx; and al, 8; mov edx, [ebp + 0xffffffe0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x00039b39 : add [eax], al; add [ebx + 0xd089f45d], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret 8
0x0001dc92 : mov esi, [ebp + 0xfffffffc]; mov [ebp + 8], ebx; mov ebx, [ebp + 0xfffffff8]; mov eax, [eax + 0xc]; mov esp, ebp; pop ebp; jmp eax
0x00036d4d : mov ecx, [ebp + 0xffffffc8]; mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 0xffffffd0]
0x00060fe9 : dec edx; or [edi], ecx; xchg [eax + eax + 0x7e800000], esp; or [edx + 0x74], edi; or [ecx], esi; rol [ebx + 0x5e5b20c4], 0x5f; ret
0x00034847 : mov edx, [ebp + 0xffffffcc]; mov [esp + 0xc], ebx; mov [esp + 8], ecx; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd0]
0x00037581 : add [eax], al; add [eax], al; mov [esp + 0x14], esi; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x000233a6 : add [eax], al; mov [esp + 8], eax; lea eax, [ebp + 0xffffffc0]; mov [esp + 0xc], ecx; mov [esp + 4], eax; mov [esp], edi; call esi
0x00002caf : mov esi, [ebp + 0xc]; mov [ebp + 0xfffffffc], edi; mov edi, [ebp + 0x10]; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x30]
0x000366de : mov [esp + 0xc], eax; mov eax, [ebx + 0xc]; mov [esp + 4], ecx; mov [esp + 8], eax; mov eax, [ebp + 8]; mov [esp], eax; call [ebx]
0x000362b1 : mov [esp + 0xc], edx; mov eax, [ebx]; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x0001fc02 : push ebp; xchg eax, esp; mov [ebp + 0xfffffffc], edi; mov eax, [eax + 0x94]; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x48]
0x0005cfe9 : inc ebp; or [ebx + 0x4489e055], cl; and al, 8; mov eax, [ebp + 0xffffffe4]; mov [esp + 4], edx; mov [esp], eax; call [esi + ebx*4]
0x00036325 : mov edx, [ebp + 0xffffffc0]; mov [esp + 0xc], ebx; mov [esp + 8], ecx; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffc4]
0x0003377c : add [eax], eax; add [ebx + 0xd089f45d], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret 8
0x00020446 : pop ds; mov [ebp + 0xffffffec], ecx; mov [esp + 0xc], 1; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call [edi + 0x40]
0x000391e9 : mov [esp + 0xc], ecx; mov eax, [esi]; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [ebx + 0xc]; mov [esp], eax; call [ebx + 4]
0x0001c83c : lea eax, [ebx + 0x30]; mov [esp + 0xc], eax; lea eax, [ebx + 0x28]; mov [esp + 8], eax; mov [esp + 4], 1; mov [esp], ebx; call ecx
0x00035030 : mov ecx, [ebp + 0xffffffd0]; mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x00001930 : add [ebp + 0xffffffc7], esp; add [edx], ah; add [eax], al; add [ecx], bl; rol [ebx + 0x2d30c4], 0; add [eax + 0x5d5f5e5b], al; ret
0x00043c37 : lea eax, [ebx + 0x30]; mov [esp + 0xc], eax; lea eax, [ebx + 0x28]; mov [esp + 8], eax; mov [esp + 4], 1; mov [esp], ebx; call edx
0x00037781 : mov [esp + 0xc], ecx; mov eax, [edx]; mov [esp + 4], esi; mov [esp + 8], eax; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x00037483 : mov [esp + 8], edx; mov edx, [ebp + 0xffffffd0]; mov [esp + 0xc], esi; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x00038979 : mov [esp + 0xc], edx; mov eax, [ecx]; mov [esp + 4], esi; mov [esp + 8], eax; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x00034fc1 : mov [esp + 0xc], edx; mov eax, [ecx]; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x00038458 : mov esi, [ebp + 0xffffffd0]; mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], esi; call [ebp + 0xffffffd4]
0x00031fd5 : mov esi, [ebx]; mov edi, [ebx + 4]; mov [ebx], eax; mov edx, [ebx + 0xc]; mov ecx, [ebx + 0x10]; mov eax, [ebx + 0x14]; call [ebx]
0x000354f1 : mov [esp + 0xc], edi; mov eax, [edx]; mov [esp + 4], ecx; mov [esp + 8], eax; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x0003f2ac : mov [esp + 4], edi; mov edx, [ebp + 0xffffef88]; mov edi, [ebp + 0xffffef00]; mov [esp + 8], ecx; mov [esp], ebx; call [edx + edi]
0x00039256 : add [eax], al; add [eax], al; mov [esp + 0xc], esi; mov [esp + 8], edx; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00020c5c : add [eax], al; mov eax, [ebx + 0x94]; mov [esp + 4], esi; mov [esp + 8], edi; mov [esp + 0xc], 0; mov [esp], ebx; call [eax + 0x40]
0x0001f9d9 : add [eax], al; mov eax, [edi + 0x94]; mov [esp + 0xc], 0; mov [esp + 4], ebx; mov [esp + 8], esi; mov [esp], edi; call [eax + 0x40]
0x00014a70 : sub edx, [ebp + 0xfffffb30]; mov [esp + 4], edi; mov [esp], ebx; mov [esp + 8], edx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x000159be : mov [esp + 4], edx; mov [esp + 8], edi; mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; mov [ebp + 0xfffffaa0], ecx; call [eax + 0x1c]
0x00037412 : mov edx, [ebp + 0x10]; mov eax, [edx]; mov [esp + 4], ebx; mov [esp + 8], eax; mov eax, [edi + 0xc]; mov [esp], eax; call [edi + 4]
0x00002eb7 : dec eax; mov eax, [edx + 0x94]; movzx ecx, [ebx]; mov [esp], edx; mov [ebp + 0xffffffec], edx; mov [esp + 4], ecx; call [eax + 0xc]
0x000608f0 : push ebp;  mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov ebp, [ebp]; mov esp, ecx; ret
0x0002545a : dec edx; add eax, [eax]; add [ebx + 0xcbe9815], cl; or [ebp + 0xe0840fd2], al; add [eax], al; add [ecx], dh; jmp [esi + 0xffffff90]
0x000383ea : mov edx, [ebp + 0x10]; mov eax, [edx]; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x00017020 : mov [esp + 8], edi; mov ecx, [ebp + 0xfffffb64]; mov [esp], ebx; mov [esp + 4], ecx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x000147a8 : add [eax], al; sub edx, ecx; mov [esp + 8], edx; mov [esp + 4], ecx; mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x000146b3 : mov [esp + 8], edi; mov ecx, [ebp + 0xfffffb54]; mov [esp], ebx; mov [esp + 4], ecx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00053e8c : pop ebp; mov [ecx + 0xffff3885], cl; dec [ebx + 0xffff4085]; dec [ecx + 0xffff3495]; dec [ebx + 0xffff4495]; jmp [esi + 0xffffff90]
0x0003234f : mov edx, [ebp + 0xfffffff0]; lea ecx, [ebp + 0xffffffe8]; mov edx, [edx + edi + 0x10]; mov [esp], ecx; mov [esp + 4], edx; call eax
0x0004450b : add [eax], al; mov [esp + 0xc], eax; lea eax, [ebp + 0xfffffff0]; mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edx; call edi
0x00037484 : push esp; and al, 8; mov edx, [ebp + 0xffffffd0]; mov [esp + 0xc], esi; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x00038e0a : mov ecx, [ebp + 0x10]; mov eax, [ecx]; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [ebx + 0xc]; mov [esp], eax; call [ebx + 4]
0x000347d9 : mov [esp + 0x10], ecx; mov eax, [ebx]; mov [esp + 4], edi; mov [esp + 8], eax; mov eax, [esi + 0xc]; mov [esp], eax; call [esi + 4]
0x00041ec3 : mov [ebp + 0xffffeed4], edx; mov [esp + 4], edx; mov [ebp + 0xffffeed0], ecx; mov [esp + 8], edi; mov [esp], ebx; call [eax + 0x1c]
0x00001df1 : add [eax], al; mov edx, [ebx + 0x48]; mov [edx + 8], esi; add [edx + 4], 1; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x30]
0x0003c6fd : push [edi + 0x33]; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00020b83 : add es:[eax], al; add [eax], al; mov edx, [ebx + 0x94]; lea eax, [esp + 0x24]; mov [esp + 4], eax; mov [esp], ebx; call [edx + 0x48]
0x00012b56 : add es:[ebx + 0x94b9], cl; add [ecx + 0x7489240c], cl; and al, 8; mov [esp + 4], eax; mov [ebp + 0xfffffff0], edx; call [edi + 0x1c]
0x00034cea : mov [esp + 0xc], eax; mov eax, [edi + 0xc]; mov [esp], edx; mov [esp + 8], eax; mov eax, [ebp + 0xc]; mov [esp + 4], eax; call [edi]
0x000368e4 : mov [esp + 0xc], eax; mov eax, [ebx + 0xc]; mov [esp], edx; mov [esp + 8], eax; mov eax, [ebp + 0xc]; mov [esp + 4], eax; call [ebx]
0x0005cfeb : mov edx, [ebp + 0xffffffe0]; mov [esp + 8], eax; mov eax, [ebp + 0xffffffe4]; mov [esp + 4], edx; mov [esp], eax; call [esi + ebx*4]
0x0003e124 : add [eax], al; add [eax], al; add esi, [ebp + 0xfffffee4]; mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call [ebp + 0x14]
0x000601af : add [ebx + 0x10424bc], cl; add [eax], al; mov ebp, [esp + 0x108]; mov [esi + 0x4c], eax; mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x0005cecb : mov eax, [ebp + 0xffffffe0]; mov [esp + 8], edx; mov edx, [ebp + 0xffffffe4]; mov [esp + 4], eax; mov [esp], edx; call [edi + ebx*4]
0x000159bf : push esp; and al, 4; mov [esp + 8], edi; mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; mov [ebp + 0xfffffaa0], ecx; call [eax + 0x1c]
0x00013ac7 : mov ecx, [ebp + 0xfffffa80]; mov [esp + 8], edx; mov [esp + 4], edi; mov [esp], ebx; mov edi, [ebp + 0xfffffac4]; call [ecx + edi*4]
0x0003df3c : lea esi, [esi]; add esi, [ebp + 0xfffffee4]; mov ecx, [ebp + 0x18]; mov [esp + 4], esi; mov [esp], edi; mov [esp + 8], ecx; call ebx
0x0001ee48 : mov eax, [ebx + 0x20]; mov edx, [ebx + 0x94]; mov [esp + 4], edi; mov [esp], ebx; sub eax, edi; mov [esp + 8], eax; call [edx + 0x38]
0x00013b3b : mov edx, [edi + 0x14]; mov eax, [edi + 0x18]; mov [esp], ebx; mov [esp + 4], edx; sub eax, edx; mov [esp + 8], eax; call [ecx + 0x1c]
0x00046104 : mov eax, [ebp + 0xffffffec]; mov [edx], edi; mov [ebp + 0xffffffe8], edx; mov [esp], edx; mov [esp + 4], eax; call [ebp + 0xfffffff0]
0x00029f54 : mov edx, [esp + 4]; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00021330 : mov eax, [ebx + 0x94]; mov [esp + 0x10], 3; mov [esp + 0xc], 2; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x00013ac8 : lea eax, [eax + 0x89fffffa]; push esp; and al, 8; mov [esp + 4], edi; mov [esp], ebx; mov edi, [ebp + 0xfffffac4]; call [ecx + edi*4]
0x0005bcc8 : mov [ebx + 8], eax; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001e6c5 : mov edx, [ebx + 8]; mov [esp + 0xc], edx; mov edx, [ebx + 4]; mov [esp + 4], eax; mov [esp], esi; mov [esp + 8], edx; call [esi + 0xc]
0x00011749 : dec ebp; lodsb al, [esi]; mov [esp + 4], ebx; mov [esp + 8], eax; mov eax, [ebp + 0xffffffc4]; mov [esp], eax; call [ebp + 0xffffffd8]
0x00029539 : mov eax, [ebx]; mov eax, [eax]; mov ecx, [ebp + 8]; mov [ebp + 0xffffffcc], edx; mov [esp + 4], eax; mov [esp], ecx; call [ebp + 0x10]
0x0001fc01 : lea edx, [ebp + 0xffffff94]; mov [ebp + 0xfffffffc], edi; mov eax, [eax + 0x94]; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x48]
0x00005f84 : xchg [eax + eax], al; add [ebx + 0xcb65415], cl; or [ebp + 0xc5850fd2], al; add al, 0; add [eax + 0x8b417501], ch; add ebp, [ecx]; ret
0x000027d6 : mov [esi + 0x5c], 0; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000443c5 : sub ecx, [eax + ecx]; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00012b5a : xchg eax, esp; add [eax], al; add [ecx + 0x7489240c], cl; and al, 8; mov [esp + 4], eax; mov [ebp + 0xfffffff0], edx; call [edi + 0x1c]
0x00045cab : mov ecx, [ebp + 0xfffffebc]; mov [esp + 0x18], 0; mov [esp + 0x10], 0; mov [esp + 4], edx; mov [esp], ecx; mov [esp + 8], eax; call edi
0x0001e341 : mov eax, [ebp + 0xc]; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0004fdb7 : mov [ebx + 0xc], eax; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0003e123 : add es:[eax], al; add [eax], al; add esi, [ebp + 0xfffffee4]; mov [esp + 8], edi; mov [esp + 4], esi; mov [esp], ebx; call [ebp + 0x14]
0x000446a0 : mov eax, [eax + 0xb8]; mov [esi + 0x94], eax; mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], esi; call [eax + 0x40]
0x0002307a : mov eax, [ebp + 0xc]; mov [esp + 0x10], 0; mov [esp], edi; mov [esp + 8], eax; lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; call ebx
0x00012b44 : mov [ebx + 0x14], edi; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0003c633 : mov [ecx + 0x88], edx; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001f905 : push [eax + ebx + 0x31]; fisttp [ecx + 0xf8758bd8]; mov ebx, [ebp + 0xfffffff4]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001f5c3 : add [eax], al; add [ecx + 0x1ff8c1f0], cl; mov [esp + 0xc], 1; mov [esp + 4], esi; mov [esp + 8], eax; mov [esp], ebx; call [edx + 0x40]
0x000397c5 : add [eax], al; mov [esp + 8], eax; mov ebx, [ebp + 0xc]; mov [esp + 4], ebx; mov esi, [ebp + 8]; mov [esp], esi; call [ebp + 0xffffffdc]
0x0001f1b2 : mov [esp + 0x14], ecx; lea ecx, [ebp + 0xffffffec]; mov [esp + 0x10], ecx; mov edx, [ebp + 0xffffffd0]; mov [esp], edx; call [edx + 0xc]
0x0001eed8 : mov [esp + 0x14], esi; lea esi, [ebp + 0xffffffec]; mov [esp + 0x10], esi; mov edi, [ebp + 0xffffffd0]; mov [esp], edi; call [edi + 0xc]
0x000233a0 : mov [esp + 0x10], 0; mov [esp + 8], eax; lea eax, [ebp + 0xffffffc0]; mov [esp + 0xc], ecx; mov [esp + 4], eax; mov [esp], edi; call esi
0x00030c92 : push eax; mov edx, [ebp + 0xffffff44]; lea eax, [ebp + 0xffffff4c]; mov [edx], eax; mov eax, [ebp + 0xc]; mov [esp], eax; call [ebp + 8]
0x00020f0b : add [eax], al; add [ecx + 0x1ff9c1c1], cl; mov [esp + 0xc], 1; mov [esp + 4], eax; mov [esp + 8], ecx; mov [esp], ebx; call [edx + 0x40]
0x00060977 : inc [ebx + 0xd7407f8]; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000115fa : mov edx, [ebp + 0xffffffdc]; mov ecx, [ebp + 0xffffffe0]; mov [esp + 4], ebx; mov [esp + 8], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x00020c56 : mov [esp + 0x20], 0; mov eax, [ebx + 0x94]; mov [esp + 4], esi; mov [esp + 8], edi; mov [esp + 0xc], 0; mov [esp], ebx; call [eax + 0x40]
0x000601a9 : mov ebx, [esp + 0xfc]; mov edi, [esp + 0x104]; mov ebp, [esp + 0x108]; mov [esi + 0x4c], eax; mov esi, [esp + 0x100]; add esp, 0x10c; ret
0x0001159c : mov ecx, [ebp + 0xffffffdc]; mov [esp], edx; mov [ebp + 0xffffffb0], edx; mov [esp + 4], ebx; mov [esp + 8], ecx; call [ebp + 0xffffffd8]
0x00008f7e : dec [ebx + 0x54890455]; and al, 8; mov edx, [ebp + 0xffffffec]; mov [esp + 4], edx; mov edx, [ebp + 0xfffffff0]; mov [esp], edx; call eax
0x00040199 : mov eax, [ebx + 0x94]; mov [esp + 4], edi; mov [esp], ebx; sar edx, 2; mov [esp + 8], edx; mov [ebp + 0xffffeed4], edx; call [eax + 0x1c]
0x00037482 : int3 ; mov [esp + 8], edx; mov edx, [ebp + 0xffffffd0]; mov [esp + 0xc], esi; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x00011748 : mov [ebp + 0xffffffac], ecx; mov [esp + 4], ebx; mov [esp + 8], eax; mov eax, [ebp + 0xffffffc4]; mov [esp], eax; call [ebp + 0xffffffd8]
0x0002dc4a : mov [eax + 0x18c], edx; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00044505 : mov [esp + 0x18], 0; mov [esp + 0xc], eax; lea eax, [ebp + 0xfffffff0]; mov [esp + 0x10], 0; mov [esp + 8], eax; mov [esp], edx; call edi
0x000116b6 : mov eax, [ebp + 0xffffffdc]; mov [esp], ecx; mov [ebp + 0xffffffac], ecx; mov [esp + 4], ebx; mov [esp + 8], eax; call [ebp + 0xffffffd8]
0x00050051 : mov [esp + 8], edx; lea edx, [ebp + 0xffffffc4]; mov [esp + 4], edx; mov eax, [ebp + 0xffffffbc]; mov eax, [eax]; mov [esp], eax; call edi
0x00061be1 : mov edx, [esp + 0x20]; mov [esp + 8], ecx; mov eax, [edi + esi*4 + 8]; mov [esp + 4], eax; mov eax, [esp + 0x2c]; mov [esp], eax; call edx
0x00028ff3 : div [eax + 0xffffff89];  mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00002686 : mov [esp + 0x10], ecx; mov ecx, [ebp + 0xc]; mov [esp + 8], ebx; mov [esp + 0xc], 0; mov [esp], eax; mov [esp + 4], ecx; call [edx + 0x24]
0x00020b42 : sbb [eax + 0x2b], bh; mov ecx, [ebx + 0x94]; mov [esp + 0xc], 0; mov [esp + 4], edx; mov [esp + 8], eax; mov [esp], ebx; call [ecx + 0x40]
0x00044444 : mov [esp + 0xc], eax; lea eax, [ebp + 0xffffffec]; mov [esp + 8], eax; lea eax, [ebx + 0x54]; mov [esp + 4], eax; mov [esp], edi; call esi
0x000442e4 : mov [esp + 0xc], eax; lea eax, [ebp + 0xffffffec]; mov [esp + 8], eax; lea eax, [ebx + 0x28]; mov [esp + 4], eax; mov [esp], edi; call esi
0x00032964 : add [eax], al; mov [esp + 0x14], edi; mov [esp + 0x10], 0; mov [esp + 8], esi; mov [esp + 4], edx; mov [esp], eax; call [ebp + 0xffffffe0]
0x000619c6 : mov [esp + 8], eax; mov eax, [ecx + edi*4 + 8]; mov [esp + 0x1c], ecx; mov [esp + 4], eax; mov eax, [esp + 0x28]; mov [esp], eax; call edx
0x00045916 : lea eax, [ebp + 0xffffffe8]; mov [esp + 8], eax; lea eax, [ebp + 0xffffffc0]; mov [esp + 4], eax; mov eax, [esi]; mov [esp], eax; call ebx
0x00001def : xchg eax, edi; add [eax], al; add [ebx + 0x72894853], cl; or [ebx + 0x8b010442], al; adc [eax + eax + 0x1c890000], 0x24; call [eax + 0x30]
0x0001ead1 : mov edx, [esp + 0x44]; mov ecx, [esp + 0x48]; mov [esp + 0xc], 0; mov [esp], edi; mov [esp + 4], edx; mov [esp + 8], ecx; call [eax + 0x40]
0x00046667 : mov [ebp + 0xffffffec], esi; mov [esp + 4], eax; lea eax, [ebp + 0xffffffec]; mov [esp], eax; mov [ebp + 0xffffff4c], edx; call [ebp + 0xc]
0x00038e7c : mov [esp + 0xc], edx; mov ebx, [ebp + 0xffffffd8]; mov [esp + 4], ebx; mov eax, [ebp + 0xffffffdc]; mov [esp], eax; call [ebp + 0xffffffe4]
0x0001d2cf : sbb [eax + eax + 0x12f00000], 5; or [ecx + 0xa483], cl; add [ecx + 0xfc758bd8], cl; mov ebx, [ebp + 0xfffffff8]; mov esp, ebp; pop ebp; ret
0x0003234e : pop ss; mov edx, [ebp + 0xfffffff0]; lea ecx, [ebp + 0xffffffe8]; mov edx, [edx + edi + 0x10]; mov [esp], ecx; mov [esp + 4], edx; call eax
0x000147a4 : mov eax, [ebx + 0x94]; sub edx, ecx; mov [esp + 8], edx; mov [esp + 4], ecx; mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00031800 : add [ecx + 0xcca083d], ecx; or [ecx + 0xf45d8bf8], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00039017 : mov [esp + 0x14], edx; mov ecx, [ebp + 0xffffffd8]; mov [esp + 4], ecx; mov ebx, [ebp + 0xffffffdc]; mov [esp], ebx; call [ebp + 0xffffffe4]
0x0001da8b : add cl, [ecx + 0x438b0846]; xor [ecx + 0x30738906], cl; mov ebx, [ebp + 0xfffffff8]; mov esi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001faf3 : mov [esp + 0xc], edx; mov edx, [ebp + 0xc]; mov ecx, [ebp + 0x10]; mov [esp], ebx; mov [esp + 4], edx; mov [esp + 8], ecx; call [eax + 0x40]
0x0003dede : add [eax], al; mov eax, [ebp + 0x18]; mov edx, [ebp + 0xfffffed8]; mov [esp + 4], edi; mov [esp + 8], eax; mov [esp], edx; call [ebp + 0x14]
0x00035559 : add [eax], al; mov [esp + 0x14], edi; mov [esp + 0x10], 0; mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp], ecx; call [ebp + 0xffffffcc]
0x00020bb2 : mov [esp + 0xc], esi; mov ecx, [ebp + 0x10]; mov edx, [ebp + 0xc]; mov [esp], ebx; mov [esp + 8], ecx; mov [esp + 4], edx; call [eax + 0x40]
0x00016496 : mov ecx, [ebp + 0xfffffb64]; mov [esp], ebx; mov [esp + 4], ecx; mov ecx, [ebp + 0xfffffb78]; mov [ebp + 0xfffffaa4], edx; call [ecx + 0x1c]
0x0001182b : mov [ebp + 0xffffffb0], edx; mov [esp + 8], eax; mov eax, [ebx]; mov [esp + 4], eax; mov eax, [edx]; mov [esp], eax; call [ebp + 0xffffffd8]
0x000136ff : lea edx, [esi + edx]; mov [esp + 0xc], ecx; mov [esp + 8], edx; mov edx, [ebp + 0xfffffb50]; mov ecx, [ebp + 0xfffffb44]; call [ecx + edx*4]
0x00020416 : add [ebx + 0x43892043], cl; sbb [ecx + 0xf45d8bf8], cl; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00035fc9 : mov [esp + 0x14], edi; mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffcc]
0x000352b9 : mov [esp + 0x14], edx; mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd8]
0x0001d108 : add [eax + 0xffffffff], bh; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000393ef : mov [esp + 0x14], edx; mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x000386c8 : mov [esp + 0x14], edx; mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ebx; mov [esp], esi; call [ebp + 0xffffffd4]
0x0003df0e : add esi, [ebp + 0xfffffee4]; lea esi, [esi]; mov edx, [ebp + 0x18]; mov [esp + 4], edi; mov [esp], ebx; mov [esp + 8], edx; call [ebp + 0x14]
0x00001405 : adc bh, [eax + 0xffffffff]; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0003234a : add [ebp + 0x8b1774c0], al; push ebp;  lea ecx, [ebp + 0xffffffe8]; mov edx, [edx + edi + 0x10]; mov [esp], ecx; mov [esp + 4], edx; call eax
0x00012b54 : lea esi, [esi]; mov edi, [ecx + 0x94]; mov [esp], ecx; mov [esp + 8], esi; mov [esp + 4], eax; mov [ebp + 0xfffffff0], edx; call [edi + 0x1c]
0x0001e9c8 : mov ecx, [ebp + 0x14]; mov eax, [edi + 0x94]; mov [esp + 4], ebx; mov [esp + 8], esi; mov [esp + 0xc], ecx; mov [esp], edi; call [eax + 0x40]
0x0001f949 : add [ebp + 0xffffff8b], ah; mov ds:[esp + 0x10], 3; mov [esp + 0xc], 1; mov [esp + 4], 0; mov [esp + 8], 0; mov [esp], ebx; call [eax + 0x24]
0x0000139a : sbb [ecx + 0xc0310478], cl; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000042e1 : adc [ecx + 0x1ffac1c2], cl; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00034b9c : mov [esp + 0x14], edx; mov [esp + 0x10], 0; mov [esp + 0xc], 0; mov [esp + 8], 0; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0xffffffd0]
0x0002940b : add [ecx + 0xd7ff241c], cl; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0000c46e : add [ecx + 0xc0311043], cl; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00030c07 : mov [ebp + 0xffffffe4], edx; mov ecx, [eax]; mov [ebp + 0xffffffdc], eax; mov [eax], 0; mov [esp], edi; mov [ebp + 0xffffffe0], ecx; call esi
0x000292d5 : add [esi + 0xffffff90], esp; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x00008f7f : mov edx, [ebp + 4]; mov [esp + 8], edx; mov edx, [ebp + 0xffffffec]; mov [esp + 4], edx; mov edx, [ebp + 0xfffffff0]; mov [esp], edx; call eax
0x0004deb5 : dec [ebx + 0xfffe3c8d]; dec [ecx + 0xfffe709d]; dec [ebx + 0xfffe6895]; dec [ecx + 0xfffe60b5]; dec [ebx + 0xfffe549d]; jmp [ebp + 0xffffff89]
0x0002090f : mov [ebx + 0x18], eax; mov [ebx + 0x14], eax; mov [ebx + 0x10], eax; mov [esp + 8], edx; mov [esp + 4], eax; mov [esp], ebx; call [ecx + 0x38]
0x00022ecf : lea eax, [ebp + 0xffffffec]; mov [esp + 8], eax; lea eax, [ebp + 0xffffffc8]; mov [esp + 4], eax; mov eax, [edi + 8]; mov [esp], eax; call esi
0x000132a3 : mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; lea esp, [ecx + 0xfffffffc]; ret
0x000446d6 : mov eax, [ebp + 0xffffffe0]; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0001902c : add ecx, [ebx + 0x5489a045]; and al, 8; mov [esp + 4], eax; mov edi, [ebp + 0xffffff94]; mov [esp], edi; mov [ebp + 0xffffff38], edx; call ecx
0x0000070b : add [ecx + 0x80cb698], ah; mov edx, [ebp + 0x10]; mov ecx, [ebp + 0xc]; mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 8]
0x000397bf : mov [esp + 0x14], 0; mov [esp + 8], eax; mov ebx, [ebp + 0xc]; mov [esp + 4], ebx; mov esi, [ebp + 8]; mov [esp], esi; call [ebp + 0xffffffdc]
0x0001f039 : mov [esp + 0xc], edx; mov edx, [ebx + 4]; mov [esp + 4], eax; mov [esp + 8], edx; mov ecx, [ebp + 0xffffffd0]; mov [esp], ecx; call [ecx + 0xc]
0x000443c1 : mov eax, [edx*4 + 0x80c2be0]; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0003e9ce : sub esi, [ebp + 0xffffefb8]; mov edx, [ebp + 0xffffefb8]; mov [esp], ebx; sar esi, 2; mov [esp + 8], esi; mov [esp + 4], edx; call [eax + 0x1c]
0x000396d4 : mov [esp + 8], edx; mov [esp + 0xc], esi; mov ecx, [ebp + 0xc]; mov [esp + 4], ecx; mov esi, [ebp + 8]; mov [esp], esi; call [ebp + 0xffffffdc]
0x0003e07c : push [edx + 0x31]; mov eax, [ebp + 0x18]; mov edx, [ebp + 0xfffffee4]; mov [esp], ebx; mov [esp + 8], eax; mov [esp + 4], edx; call [ebp + 0x14]
0x0003295e : mov [esp + 0x18], 0; mov [esp + 0x14], edi; mov [esp + 0x10], 0; mov [esp + 8], esi; mov [esp + 4], edx; mov [esp], eax; call [ebp + 0xffffffe0]
0x0001d74e : add es:[eax + 0xffffffff], bh; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x0003924e : mov [esp + 0x14], eax; mov [esp + 0x10], 0; mov [esp + 0xc], esi; mov [esp + 8], edx; mov [esp + 4], ecx; mov [esp], ebx; call [ebp + 0xffffffe0]
0x00020f07 : add [ebx + 0x9493], cl; add [ecx + 0x1ff9c1c1], cl; mov [esp + 0xc], 1; mov [esp + 4], eax; mov [esp + 8], ecx; mov [esp], ebx; call [edx + 0x40]
0x00041ec1 : add [eax], al; mov [ebp + 0xffffeed4], edx; mov [esp + 4], edx; mov [ebp + 0xffffeed0], ecx; mov [esp + 8], edi; mov [esp], ebx; call [eax + 0x1c]
0x000146b2 : add [ecx + 0x8b08247c], cl; lea edx, [ebx + edi*8 + 0xffffffff]; dec [ecx + 0x4c89241c]; and al, 4; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0001701e : add [eax], al; mov [esp + 8], edi; mov ecx, [ebp + 0xfffffb64]; mov [esp], ebx; mov [esp + 4], ecx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0001701f : add [ecx + 0x8b08247c], cl; lea esp, [ebx + edi*8 + 0xffffffff]; dec [ecx + 0x4c89241c]; and al, 4; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00035553 : mov [esp + 0x18], 0; mov [esp + 0x14], edi; mov [esp + 0x10], 0; mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp], ecx; call [ebp + 0xffffffcc]
0x000159bc : add [eax], al; mov [esp + 4], edx; mov [esp + 8], edi; mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; mov [ebp + 0xfffffaa0], ecx; call [eax + 0x1c]
0x000146b1 : add [eax], al; mov [esp + 8], edi; mov ecx, [ebp + 0xfffffb54]; mov [esp], ebx; mov [esp + 4], ecx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00014a6e : add [eax], al; sub edx, [ebp + 0xfffffb30]; mov [esp + 4], edi; mov [esp], ebx; mov [esp + 8], edx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x000115f9 : pop esi; mov edx, [ebp + 0xffffffdc]; mov ecx, [ebp + 0xffffffe0]; mov [esp + 4], ebx; mov [esp + 8], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x000006c4 : sbb [ecx + 0x80cb698], esp; mov ecx, [ebp + 0x10]; mov [esp + 8], eax; mov eax, [ebp + 0xc]; mov [esp + 4], ecx; mov [esp], eax; call [ebp + 0x14]
0x00046102 : add edi, ebx; mov eax, [ebp + 0xffffffec]; mov [edx], edi; mov [ebp + 0xffffffe8], edx; mov [esp], edx; mov [esp + 4], eax; call [ebp + 0xfffffff0]
0x00016497 : lea esp, [ebx + edi*8 + 0xffffffff]; dec [ecx + 0x4c89241c]; and al, 4; mov ecx, [ebp + 0xfffffb78]; mov [ebp + 0xfffffaa4], edx; call [ecx + 0x1c]
0x0003757a : mov edx, [ebp + 0xffffffd0]; mov [esp + 0xc], 0; mov [esp + 0x14], esi; mov [esp + 8], 0; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x00043413 : add [edx + edx + 0xffffff89], esi;  mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov esp, ebp; pop ebp; ret
0x000608ef : mov edx, [ebp + 0xfffffff0]; mov ebx, [ebp + 0xfffffff4]; mov esi, [ebp + 0xfffffff8]; mov edi, [ebp + 0xfffffffc]; mov ebp, [ebp]; mov esp, ecx; ret
0x00060fe4 : add [ebp + 0x4a8d3e14], ecx; or [edi], ecx; xchg [eax + eax + 0x7e800000], esp; or [edx + 0x74], edi; or [ecx], esi; rol [ebx + 0x5e5b20c4], 0x5f; ret
0x0001902d : mov eax, [ebp + 0xffffffa0]; mov [esp + 8], edx; mov [esp + 4], eax; mov edi, [ebp + 0xffffff94]; mov [esp], edi; mov [ebp + 0xffffff38], edx; call ecx
0x0005cfe8 : mov eax, [ebp + 8]; mov edx, [ebp + 0xffffffe0]; mov [esp + 8], eax; mov eax, [ebp + 0xffffffe4]; mov [esp + 4], edx; mov [esp], eax; call [esi + ebx*4]
0x0001159a : add [eax], al; mov ecx, [ebp + 0xffffffdc]; mov [esp], edx; mov [ebp + 0xffffffb0], edx; mov [esp + 4], ebx; mov [esp + 8], ecx; call [ebp + 0xffffffd8]
0x00038454 : mov [esp + 0x14], esi; mov esi, [ebp + 0xffffffd0]; mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], esi; call [ebp + 0xffffffd4]
0x00034843 : mov [esp + 0x14], edx; mov edx, [ebp + 0xffffffcc]; mov [esp + 0xc], ebx; mov [esp + 8], ecx; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd0]
0x0003e2fb : adc [ebp + 0xffffffea], dh; mov ecx, [ebp + 0x18]; mov eax, [ebp + 0xfffffedc]; mov [esp], edi; mov [esp + 8], ecx; mov [esp + 4], eax; call [ebp + 0x14]
0x00036321 : mov [esp + 0x14], edx; mov edx, [ebp + 0xffffffc0]; mov [esp + 0xc], ebx; mov [esp + 8], ecx; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffc4]
0x0003502c : mov [esp + 0x14], ecx; mov ecx, [ebp + 0xffffffd0]; mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 0xffffffd8]
0x00036d49 : mov [esp + 0x14], ecx; mov ecx, [ebp + 0xffffffc8]; mov [esp + 0xc], ebx; mov [esp + 8], eax; mov [esp + 4], edx; mov [esp], ecx; call [ebp + 0xffffffd0]
0x00014a6a : mov eax, [ebx + 0x94]; sub edx, [ebp + 0xfffffb30]; mov [esp + 4], edi; mov [esp], ebx; mov [esp + 8], edx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00041ebd : mov eax, [ebx + 0x94]; mov [ebp + 0xffffeed4], edx; mov [esp + 4], edx; mov [ebp + 0xffffeed0], ecx; mov [esp + 8], edi; mov [esp], ebx; call [eax + 0x1c]
0x000136fd : add ecx, edx; lea edx, [esi + edx]; mov [esp + 0xc], ecx; mov [esp + 8], edx; mov edx, [ebp + 0xfffffb50]; mov ecx, [ebp + 0xfffffb44]; call [ecx + edx*4]
0x0001701a : mov eax, [ebx + 0x94]; mov [esp + 8], edi; mov ecx, [ebp + 0xfffffb64]; mov [esp], ebx; mov [esp + 4], ecx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x000131dd : sub esi, [ebp + 0xfffffb7c]; mov eax, [ebx + 0x94]; mov [esp + 8], esi; mov edx, [ebp + 0xfffffb7c]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x0001544b : sub edi, [ebp + 0xfffffb1c]; mov eax, [ebx + 0x94]; mov [esp + 8], edi; mov edx, [ebp + 0xfffffb4c]; mov [esp], ebx; mov [esp + 4], edx; call [eax + 0x1c]
0x000159b8 : mov eax, [ebx + 0x94]; mov [esp + 4], edx; mov [esp + 8], edi; mov [esp], ebx; mov [ebp + 0xfffffaa4], edx; mov [ebp + 0xfffffaa0], ecx; call [eax + 0x1c]
0x000146ad : mov eax, [ebx + 0x94]; mov [esp + 8], edi; mov ecx, [ebp + 0xfffffb54]; mov [esp], ebx; mov [esp + 4], ecx; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00039015 : add [eax], al; mov [esp + 0x14], edx; mov ecx, [ebp + 0xffffffd8]; mov [esp + 4], ecx; mov ebx, [ebp + 0xffffffdc]; mov [esp], ebx; call [ebp + 0xffffffe4]
0x0003f2a9 : push [edx + 0xffffffe4]; mov [esp + 4], edi; mov edx, [ebp + 0xffffef88]; mov edi, [ebp + 0xffffef00]; mov [esp + 8], ecx; mov [esp], ebx; call [edx + edi]
0x0001eed4 : mov [esp + 4], eax; mov [esp + 0x14], esi; lea esi, [ebp + 0xffffffec]; mov [esp + 0x10], esi; mov edi, [ebp + 0xffffffd0]; mov [esp], edi; call [edi + 0xc]
0x0001f1ae : mov [esp + 4], edx; mov [esp + 0x14], ecx; lea ecx, [ebp + 0xffffffec]; mov [esp + 0x10], ecx; mov edx, [ebp + 0xffffffd0]; mov [esp], edx; call [edx + 0xc]
0x0001d7f7 : add [ebp + 0x8bee7edb], al; xchg [eax + eax + 0x5c890000], edx; and al, 8; mov edx, [ebp + 0xffffffb0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x0001d007 : add [ebp + 0x8bee7edb], al; xchg [eax + eax + 0x5c890000], edx; and al, 8; mov edx, [ebp + 0xffffffe0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x00013ac4 : push [edi + 0xffffffe3]; mov ecx, [ebp + 0xfffffa80]; mov [esp + 8], edx; mov [esp + 4], edi; mov [esp], ebx; mov edi, [ebp + 0xfffffac4]; call [ecx + edi*4]
0x0003900f : mov [esp + 8], 0; mov [esp + 0x14], edx; mov ecx, [ebp + 0xffffffd8]; mov [esp + 4], ecx; mov ebx, [ebp + 0xffffffdc]; mov [esp], ebx; call [ebp + 0xffffffe4]
0x00002cac : mov [ebp + 0xfffffff8], esi; mov esi, [ebp + 0xc]; mov [ebp + 0xfffffffc], edi; mov edi, [ebp + 0x10]; mov eax, [ebx + 0x94]; mov [esp], ebx; call [eax + 0x30]
0x00037480 : mov eax, [ebp + 0xffffffcc]; mov [esp + 8], edx; mov edx, [ebp + 0xffffffd0]; mov [esp + 0xc], esi; mov [esp + 4], eax; mov [esp], edx; call [ebp + 0xffffffd8]
0x00038e78 : mov [esp + 8], ecx; mov [esp + 0xc], edx; mov ebx, [ebp + 0xffffffd8]; mov [esp + 4], ebx; mov eax, [ebp + 0xffffffdc]; mov [esp], eax; call [ebp + 0xffffffe4]
0x00016492 : mov [esp + 8], edi; mov ecx, [ebp + 0xfffffb64]; mov [esp], ebx; mov [esp + 4], ecx; mov ecx, [ebp + 0xfffffb78]; mov [ebp + 0xfffffaa4], edx; call [ecx + 0x1c]
0x0001d006 : add es:[ebp + 0x8bee7edb], al; xchg [eax + eax + 0x5c890000], edx; and al, 8; mov edx, [ebp + 0xffffffe0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x0001d7f6 : add es:[ebp + 0x8bee7edb], al; xchg [eax + eax + 0x5c890000], edx; and al, 8; mov edx, [ebp + 0xffffffb0]; mov [esp], edi; mov [esp + 4], edx; call [eax + 0x1c]
0x0001701d : add [eax], al; add [ecx + 0x8b08247c], cl; lea esp, [ebx + edi*8 + 0xffffffff]; dec [ecx + 0x4c89241c]; and al, 4; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00046664 : lea esi, [edx + ebx]; mov [ebp + 0xffffffec], esi; mov [esp + 4], eax; lea eax, [ebp + 0xffffffec]; mov [esp], eax; mov [ebp + 0xffffff4c], edx; call [ebp + 0xc]
0x000146b0 : add [eax], al; add [ecx + 0x8b08247c], cl; lea edx, [ebx + edi*8 + 0xffffffff]; dec [ecx + 0x4c89241c]; and al, 4; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x0005cec8 : mov edx, [ebp + 0xffffffdc]; mov eax, [ebp + 0xffffffe0]; mov [esp + 8], edx; mov edx, [ebp + 0xffffffe4]; mov [esp + 4], eax; mov [esp], edx; call [edi + ebx*4]
0x0001fbfe : mov [ebp + 0xfffffff8], esi; lea edx, [ebp + 0xffffff94]; mov [ebp + 0xfffffffc], edi; mov eax, [eax + 0x94]; mov [esp + 4], edx; mov [esp], ebx; call [eax + 0x48]
0x00011745 : mov [ebp + 0xffffffb0], edx; mov [ebp + 0xffffffac], ecx; mov [esp + 4], ebx; mov [esp + 8], eax; mov eax, [ebp + 0xffffffc4]; mov [esp], eax; call [ebp + 0xffffffd8]
0x00017019 : dec [ebx + 0x9483]; add [ecx + 0x8b08247c], cl; lea esp, [ebx + edi*8 + 0xffffffff]; dec [ecx + 0x4c89241c]; and al, 4; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x000146ac : add [ebx + 0x9483], cl; add [ecx + 0x8b08247c], cl; lea edx, [ebx + edi*8 + 0xffffffff]; dec [ecx + 0x4c89241c]; and al, 4; mov [ebp + 0xfffffaa4], edx; call [eax + 0x1c]
0x00016491 : dec [ecx + 0x8b08247c]; lea esp, [ebx + edi*8 + 0xffffffff]; dec [ecx + 0x4c89241c]; and al, 4; mov ecx, [ebp + 0xfffffb78]; mov [ebp + 0xfffffaa4], edx; call [ecx + 0x1c]
